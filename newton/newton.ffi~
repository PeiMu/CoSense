--//
--//  FIRST()S
--//

--// high level productions

--// scopes
production kNewtonIrNodeType_PnewtonFile: firstset = {  kNewtonIrNodeType_Tidentifier }
production kNewtonIrNodeType_PruleList: firstset = {  kNewtonIrNodeType_Tidentifier }
production kNewtonIrNodeType_Prule: firstset = {  kNewtonIrNodeType_Tidentifier }
production kNewtonIrNodeType_Pconstant: firstset = {  kNewtonIrNodeType_Tdentifier }
production kNewtonIrNodeType_Pinvariant: firstset = {  kNewtonIrNodeType_Tdentifier }
production kNewtonIrNodeType_PbaseSignal: firstset = {  kNewtonIrNodeType_Tdentifier }

production kNewtonIrNodeType_PparameterTuple: firstset = {  kNewtonIrNodeType_TleftParen }
production kNewtonIrNodeType_Pparameter: firstset = {  kNewtonIrNodeType_Tidentifier }

production kNewtonIrNodeType_PconstraintList: firstset = {  
    firstset(kNewtonIrNodeType_Pconstraint)
}
production kNewtonIrNodeType_Pconstraint: firstset = {  
    firstset(kNewtonIrNodeType_PquantityExpression)
}

production kNewtonIrNodeType_Pname: firstset = {
    kNewtonIrNodeType_Tname
}

production kNewtonIrNodeType_Psymbol: firstset = {
    kNewtonIrNodeType_Tsymbol
}

production kNewtonIrNodeType_Pderivation: firstset = {
    kNewtonIrNodeType_Tderivation
}
production kNewtonIrNodeType_PparameterTuple: firstset = {
    kNewtonIrNodeType_TleftParen
}
production kNewtonIrNodeType_Pparameter: firstset = {
    kNewtonIrNodeType_Tidentifier
}


production kNewtonIrNodeType_PquantityExpression: firstset = {
    firstset(kNewtonIrNodeType_PquantityTerm),
    firstset(kNewtonIrNodeType_PunaryOp),
    firstset(kNewtonIrNodeType_PtimeOp),
    firstset(kNewtonIrNodeType_PvectorOp),
}
production kNewtonIrNodeType_PquantityTerm: firstset = {  
    firstset(kNewtonIrNodeType_PquantityFactor),
    firstset(kNewtonIrNodeType_PlowPrecedenceBinaryOp)
}
production kNewtonIrNodeType_PquantityFactor: firstset = {
    firstset(kNewtonIrNodeType_PunaryOp),
    firstset(kNewtonIrNodeType_PtimeOp),
    firstset(kNewtonIrNodeType_PvectorOp),
    firstset(kNewtonIrNodeType_Pquantity),
    kNewtonIrNodeType_TleftParen
}
production kNewtonIrNodeType_Pquantity: firstset = {
    kNewtonIrNodeType_Tnumber,
    kNewtonIrNodeType_Tidentifier
}

production kNewtonIrNodeType_PunitExpression: firstset = {
    firstset(kNewtonIrNodeType_PunitFactor),
}
production kNewtonIrNodeType_PunitFactor: firstset = {
    firstset(kNewtonIrNodeType_PunaryOp),
    firstset(kNewtonIrNodeType_Punit)
    kNewtonIrNodeType_TleftParen,
}
production kNewtonIrNodeType_Punit: firstset = {
    kNewtonIrNodeType_Tidentifier
}


--// expression related ops
production kNewtonIrNodeType_PtimeOp: firstset = {
    kNewtonIrNodeType_Tderivative,
    kNewtonirNodeTyhpe_Tintegral
}

production kNewtonIrNodeType_PunaryOp: firstset = {
  kNewtonIrNodeType_Tminus
}
production kNewtonIrNodeType_PlowPrecedenceBinaryOp: firstset = {
  kNewtonIrNodeType_Tminus,
  kNewtonIrNodeType_Tplus
}
production kNewtonIrNodeType_PmidPrecedenceBinaryOp: firstset = {
  kNewtonIrNodeType_Tmul,
  kNewtonIrNodeType_Tdiv
}
production kNewtonIrNodeType_PhighPrecedenceBinaryOp: firstset = {
    kNewtonIrNodeType_Texponent
}
production kNewtonIrNodeType_PvectorOp: firstset = {
  kNewtonIrNodeType_Tdot,
  kNewtonIrNodeType_Tcross
}
production kNewtonIrNodeType_PcompareOp: firstset = {
    kNewtonIrNodeType_Tlt,
    kNewtonIrNodeType_Tle,
    kNewtonIrNodeType_Tgt,
    kNewtonIrNodeType_Tge,
    kNewtonIrNodeType_Tproportionality,
    kNewtonIrNodeType_Tequivalent,
}


--// FOLLOW SETS
--// high level productions

--// scopes
production kNewtonIrNodeType_PnewtonFile: followset = {  kNewtonIrNodeType_Zeof }
production kNewtonIrNodeType_PruleList: followset = { kNewtonIrNodeType_Zeof }
production kNewtonIrNodeType_Prule: followset = {
    followset(kNewtonIrNodeType_Pconstant),
    followset(kNewtonIrNodeType_Pinvariant),
    followset(kNewtonIrNodeType_PbaseSignal),
    kNewtonIrNodeType_Zeof 
}
production kNewtonIrNodeType_Pconstant: followset = {  kNewtonIrNodeType_TrightBrac }
production kNewtonIrNodeType_Pinvariant: followset = { kNewtonIrNodeType_TrightBrac }
production kNewtonIrNodeType_PbaseSignal: followset = { kNewtonIrNodeType_TrightBrac }

production kNewtonIrNodeType_PparameterTuple: followset = {  kNewtonIrNodeType_TrightParen }
production kNewtonIrNodeType_Pparameter: followset = {  kNewtonIrNodeType_Tidentifier }

production kNewtonIrNodeType_PconstraintList: followset = {  
    kNewtonIrNodeType_TrightBrac
}
production kNewtonIrNodeType_Pconstraint: followset = {  
    kNewtonIrNodeType_TrightBrac,
    kNewtonIrNodeType_Tcomma
}

production kNewtonIrNodeType_Pname: followset = {
    kNewtonIrNodeType_Tsymbol
}

production kNewtonIrNodeType_Psymbol: followset = {
    kNewtonIrNodeType_Tderivation
}
production kNewtonIrNodeType_Pderivation: followset = {
    kNewtonIrNodeType_TrightBrac
}

production kNewtonIrNodeType_PparameterTuple: followset = {
    kNewtonIrNodeType_TleftBrac
}
production kNewtonIrNodeType_Pparameter: followset = {
    kNewtonIrNodeType_Tcomma,
    kNewtonIrNodeType_TrightBrac
}


production kNewtonIrNodeType_PquantityExpression: followset = {
    firstset(kNewtonIrNodeType_PcompareOp),
    followset(kNewtonIrNodeType_Pconstraint),
    kNewtonIrNodeType_Tcomma,
    kNewtonIrNodeType_TrightParen
}
production kNewtonIrNodeType_PquantityTerm: followset = {  
    firstset(kNewtonIrNodeType_PlowPrecedenceOp),
    followset(kNewtonIrNodeType_PquantityExpression),
}
production kNewtonIrNodeType_PquantityFactor: followset = {
    firstset(kNewtonIrNodeType_PmidPrecedenceOp),
    followset(kNewtonIrNodeType_PquantityExpression),
}
production kNewtonIrNodeType_Pquantity: followset = {
    firstset(kNewtonIrNodeType_PhighPrecedenceOp),
    followset(kNewtonIrNodeType_PquantityExpression)
}

production kNewtonIrNodeType_PunitExpression: followset = {
    followset(kNewtonIrNodeType_Pconstant),
    kNewtonIrNodeType_TrightParen
}
production kNewtonIrNodeType_PunitFactor: followset = {
    firstset(kNewtonIrNodeType_PmidPrecedenceOp)
}
production kNewtonIrNodeType_Punit: followset = {
    firstset(kNewtonIrNodeType_PhighPrecedenceOp),
    followset(kNewtonIrNodeType_PunitExpression)
}


--// expression related ops
production kNewtonIrNodeType_PtimeOp: followset = {
    firstset(kNewtonIrNodeType_PtimeOp),
    firstset(kNewtonIrNodeType_Pquantity)
}

production kNewtonIrNodeType_PunaryOp: followset = {
    firstset(kNewtonIrNodeType_Pquantity),
    firstset(kNewtonIrNodeType_PtimeOp),
    kNewtonIrNodeType_TleftParen,
    firstset(kNewtonIrNodeType_PvectorOp)
}
production kNewtonIrNodeType_PlowPrecedenceBinaryOp: followset = {
    firstset(kNewtonIrNodeType_PquantityTerm)
}
production kNewtonIrNodeType_PmidPrecedenceBinaryOp: followset = {
    firstset(kNewtonIrNodeType_PquantityFactor)
}
production kNewtonIrNodeType_PhighPrecedenceBinaryOp: followset = {
    firstset(kNewtonIrNodeType_PquantityExpression)
}
production kNewtonIrNodeType_PvectorOp: followset = {
    kNewtonIrNodeType_TleftParen
}
production kNewtonIrNodeType_PcompareOp: followset = {
    firstset(kNewtonIrNodeType_PquantityExpression)
}

--// Tokens

--// special name tokens of scopes

--// miscellaneous
token kNewtonIrNodeType_Zeof: followset = {T_XXX}
token kNewtonIrNodeType_Zepsilon: followset = {T_XXX}
token kNewtonIrNodeType_ZbadStringConst: followset = {T_XXX}
token kNewtonIrNodeType_ZbadIdentifier: followset = {T_XXX}
token kNewtonIrNodeType_Tnil: followset = {T_XXX}

token T_XXX: followset = {T_XXX}
