(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    214175,       4465]
NotebookOptionsPosition[    213213,       4430]
NotebookOutlinePosition[    213590,       4447]
CellTagsIndexPosition[    213547,       4444]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Analyze statistics output by ",
  FontSize->36],
 StyleBox["Noisy",
  FontSize->36,
  FontWeight->"Bold"],
 StyleBox[" Compiler\n\n",
  FontSize->36],
 StyleBox["psm@mit.edu",
  FontSize->18]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.626708771771656*^9, 3.626708811297825*^9}, {
  3.626718013799014*^9, 3.626718030628262*^9}, {3.654023079962606*^9, 
  3.6540231644605494`*^9}, {3.654033544896619*^9, 3.654033556870125*^9}, {
  3.657228529153167*^9, 3.6572285351670923`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"prefixColumn", "[", 
     RowBox[{"statistics_", ",", " ", "prefix_", ",", " ", "column_"}], "]"}],
     ":=", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "column", "]"}], "]"}], "&"}], "/@", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"statistics", ",", " ", 
        RowBox[{
         RowBox[{"StringMatchQ", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
           RowBox[{"prefix", "<>", "\"\<*\>\""}]}], "]"}], "&"}]}], "]"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"doPlot", "[", 
     RowBox[{"title_", ",", "rawLabels_", ",", " ", "data_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"piePlot", ",", " ", "barPlot", ",", " ", "labels"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Rewrite", " ", "\"\<skank\>\"", " ", "to", " ", "\"\<sk\>\"", " ", 
        "for", " ", "plotting"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"#", ",", 
            RowBox[{"\"\<skank\>\"", "->", "\"\<sk\>\""}]}], "]"}], "&"}], "/@",
          "rawLabels"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       
       RowBox[{"piePlot", " ", "=", " ", 
        RowBox[{"PieChart", "[", 
         RowBox[{"data", ",", "\[IndentingNewLine]", 
          RowBox[{"ChartLabels", "\[Rule]", 
           RowBox[{"Placed", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", " ", 
                 RowBox[{"FontSize", "\[Rule]", "14"}], ",", " ", "Gray"}], 
                "]"}], "&"}], "/@", "labels"}], ",", 
             "\"\<VerticalCallout\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"SectorOrigin", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLabel", "\[Rule]", "title"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Ticks", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ChartStyle", "\[Rule]", " ", "16"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ChartStyle", "\[Rule]", " ", 
           RowBox[{"Directive", "[", 
            RowBox[{"\"\<AvocadoColors\>\"", ",", " ", 
             RowBox[{"FontSize", "\[Rule]", " ", "14"}], ",", " ", 
             RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"600", ",", "300"}], "}"}]}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"150", ",", "150"}], "}"}], " ", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"barPlot", " ", "=", " ", 
        RowBox[{"BarChart", "[", 
         RowBox[{
          RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ChartLegends", "\[Rule]", " ", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", " ", 
                RowBox[{"\"\<\\n\>\"", "\[Rule]", " ", "\"\< \>\""}]}], "]"}],
               "&"}], ",", " ", "labels", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], " ", ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"ScalingFunctions", "\[Rule]", "\"\<Log\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLabel", "\[Rule]", "title"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotTheme", "\[Rule]", " ", "\"\<Detailed\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"ChartStyle", "\[Rule]", " ", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"FontSize", "\[Rule]", " ", "15"}], ",", " ", 
               RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
              "]"}]}], ","}], "*)"}], " ", "\[IndentingNewLine]", 
          RowBox[{"FrameStyle", "\[Rule]", " ", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"FontSize", "\[Rule]", " ", "15"}], ",", " ", 
             RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"50", ",", "0"}], "}"}], " ", ",", 
               RowBox[{"{", 
                RowBox[{"150", ",", "150"}], "}"}]}], "}"}]}], ","}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"ImagePadding", "\[Rule]", "40"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "300"}], ",", "\[IndentingNewLine]", 
          RowBox[{"AspectRatio", "\[Rule]", 
           RowBox[{"1", "/", "1.5"}]}]}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"GraphicsRow", "[", 
        RowBox[{"{", 
         RowBox[{"piePlot", ",", " ", "barPlot"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", "   ", 
   RowBox[{
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "This", " ", "function", " ", "may", " ", "currently", " ", "be", " ", 
      "overly", " ", "sensitive", " ", "to", " ", "extraneous", " ", 
      RowBox[{"newlines", ".", "\[IndentingNewLine]", "One"}], " ", "way", 
      " ", "to", " ", "get", " ", "around", " ", "this", " ", "would", " ", 
      "be", " ", "to", " ", "remove", " ", "all", " ", 
      RowBox[{"Null", " ", "/", " ", 
       RowBox[{"{", "}"}]}], " ", "entries"}]}], ",", " ", 
    RowBox[{
    "and", " ", "then", "\[IndentingNewLine]", "  ", "process", " ", "the", 
     " ", "data", " ", "based", " ", "on", " ", 
     RowBox[{"that", "."}]}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getDataSubsetForTag", "[", 
     RowBox[{"data_", ",", " ", "tag_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"startIndex", ",", " ", "endIndex"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"startIndex", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"data", ",", "tag"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "startIndex", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"endIndex", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"startIndex", "+", "2"}], ";;"}], "]"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], " ", "\[Equal]", " ", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"Length", "[", "data", "]"}], ",", "\[IndentingNewLine]", 
          "\t\t\t", 
          RowBox[{"startIndex", " ", "+", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"startIndex", "+", "2"}], ";;"}], "]"}], "]"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "endIndex", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"startIndex", ";;", "endIndex"}], "]"}], "]"}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"startIndex", ";;", "endIndex"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dtraceStatsForFile", "[", 
     RowBox[{"filename_", ",", " ", "tag_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rawFile", ",", " ", "dtraceResidencyNanosecondsTable", ",", " ", 
        "dtraceResidencyNanosecondsTotal", ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubset", ",", " ", 
        "dtraceResidencyNanosecondsNoisySubsetTotal", ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentages", ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest"}], 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rawFile", " ", "=", " ", 
        RowBox[{"Import", "[", 
         RowBox[{"filename", ",", " ", "\"\<Table\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"rawFile", ",", "tag"}], "]"}], "]"}], " ", "\[Equal]", 
          " ", "0"}], ",", " ", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"getDataSubsetForTag", "[", 
           RowBox[{"rawFile", ",", " ", "tag"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], "\[Equal]", " ", "2"}], " ", "&&",
             " ", 
            RowBox[{"NumberQ", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<dtraceResidencyNanosecondsTable == \>\"", ",", " ", 
           RowBox[{"dtraceResidencyNanosecondsTable", "//", "TableForm"}]}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsTotal", " ", "=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
          "dtraceResidencyNanosecondsTable"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsTableNoisySubset", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"dtraceResidencyNanosecondsTable", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*Noisy*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*noisy*\>\""}], 
              "]"}], " ", "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*flex*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*moveHead*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*nextToken*\>\""}], 
              "]"}], "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*skank*\>\""}],
               "]"}]}], ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsNoisySubsetTotal", " ", "=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
          "dtraceResidencyNanosecondsTableNoisySubset"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableNoisySubsetPercentages", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"100", "*", 
             RowBox[{"N", "[", 
              FractionBox[
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], 
               "dtraceResidencyNanosecondsTotal"], "]"}]}]}], "}"}], "&"}], "/@",
          "dtraceResidencyNanosecondsTableNoisySubset"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", " ", 
        "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
         "dtraceResidencyNanosecondsTableNoisySubsetPercentages", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\"\<Other\>\"", ",", 
            RowBox[{"100", "*", 
             RowBox[{"N", "[", 
              FractionBox[
               RowBox[{"(", 
                RowBox[{
                "dtraceResidencyNanosecondsTotal", "-", 
                 "dtraceResidencyNanosecondsNoisySubsetTotal"}], ")"}], 
               "dtraceResidencyNanosecondsTotal"], "]"}]}]}], " ", "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dtraceNoisyOnlyStatsForFile", "[", 
     RowBox[{"filename_", ",", " ", "tag_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rawFile", ",", " ", "dtraceResidencyNanosecondsTable", ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubset", ",", " ", 
        "dtraceResidencyNanosecondsNoisySubsetTotal", ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentages"}], "}"}], ",",
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rawFile", " ", "=", " ", 
        RowBox[{"Import", "[", 
         RowBox[{"filename", ",", " ", "\"\<Table\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"rawFile", ",", "tag"}], "]"}], "]"}], " ", "\[Equal]", 
          " ", "0"}], ",", " ", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"getDataSubsetForTag", "[", 
           RowBox[{"rawFile", ",", " ", "tag"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], "\[Equal]", " ", "2"}], " ", "&&",
             " ", 
            RowBox[{"NumberQ", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<dtraceResidencyNanosecondsTable == \>\"", ",", " ", 
           RowBox[{"dtraceResidencyNanosecondsTable", "//", "TableForm"}]}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       
       RowBox[{"dtraceResidencyNanosecondsTableNoisySubset", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"dtraceResidencyNanosecondsTable", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*Noisy*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*noisy*\>\""}], 
              "]"}], " ", "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*flex*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*moveHead*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*nextToken*\>\""}], 
              "]"}], "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*skank*\>\""}],
               "]"}]}], ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsNoisySubsetTotal", " ", "=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
          "dtraceResidencyNanosecondsTableNoisySubset"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableNoisySubsetPercentages", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"100", "*", 
             RowBox[{"N", "[", 
              FractionBox[
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], 
               "dtraceResidencyNanosecondsNoisySubsetTotal"], "]"}]}]}], 
           "}"}], "&"}], "/@", 
         "dtraceResidencyNanosecondsTableNoisySubset"}]}], ";", 
       "\[IndentingNewLine]", 
       "dtraceResidencyNanosecondsTableNoisySubsetPercentages"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dtraceCairoOnlyStatsForFile", "[", 
    RowBox[{"filename_", ",", " ", "tag_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawFile", ",", " ", "dtraceResidencyNanosecondsTable", ",", " ", 
       "dtraceResidencyNanosecondsTableCairoSubset", ",", " ", 
       "dtraceResidencyNanosecondsCairoSubsetTotal", ",", " ", 
       "dtraceResidencyNanosecondsTableCairoSubsetPercentages"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rawFile", " ", "=", " ", 
       RowBox[{"Import", "[", 
        RowBox[{"filename", ",", " ", "\"\<Table\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"rawFile", ",", "tag"}], "]"}], "]"}], " ", "\[Equal]", 
         " ", "0"}], ",", " ", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dtraceResidencyNanosecondsTable", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"getDataSubsetForTag", "[", 
          RowBox[{"rawFile", ",", " ", "tag"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", " ", "2"}], " ", "&&",
            " ", 
           RowBox[{"NumberQ", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<dtraceResidencyNanosecondsTable == \>\"", ",", " ", 
          RowBox[{"dtraceResidencyNanosecondsTable", "//", "TableForm"}]}], 
         "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dtraceResidencyNanosecondsTableCairoSubset", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"dtraceResidencyNanosecondsTable", ",", " ", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*Noisy*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*noisy*\>\""}], 
              "]"}], " ", "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*flex*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*moveHead*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*nextToken*\>\""}], 
              "]"}], "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*skank*\>\""}],
               "]"}]}], ")"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"dtraceResidencyNanosecondsCairoSubsetTotal", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
         "dtraceResidencyNanosecondsTableCairoSubset"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
      "dtraceResidencyNanosecondsTableCairoSubsetPercentages", " ", "=", " ", 
       
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"100", "*", 
            RowBox[{"N", "[", 
             FractionBox[
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], 
              "dtraceResidencyNanosecondsCairoSubsetTotal"], "]"}]}]}], "}"}],
          "&"}], "/@", "dtraceResidencyNanosecondsTableCairoSubset"}]}], ";", 
      "\[IndentingNewLine]", 
      "dtraceResidencyNanosecondsTableCairoSubsetPercentages"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotChangeSet", "[", 
     RowBox[{"filename_", ",", " ", "tag_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "callCountPlot", ",", " ", "callTimePlot", ",", "statistics", ",", 
        "changeset", ",", "totalCalls", ",", "noisyIrPassCalls", ",", 
        "noisyIrHelperCalls", ",", "genCalls", ",", "parseCalls", ",", 
        "unknownCalls", ",", "totalTime", ",", "noisyIrPassTime", ",", 
        "noisyIrHelperTime", ",", "genTime", ",", "parseTime", ",", 
        "unknownTime", ",", "labels", ",", "callCountData", ",", "timeData", 
        ",", "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", 
        ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRestGreaterTh\
an1percentSubset", ",", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentages", ",", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentagesGreaterThan1perc\
entSubset", ",", "dtraceResidencyNanosecondsTableCairoSubsetPercentages", ",",
         "dtraceResidencyNanosecondsTableCairoSubsetPercentagesGreaterThan1per\
centSubset", ",", "changesetDtracePlot", ",", "changesetNoisyOnlyDtracePlot", 
        ",", "changesetCairoOnlyDtracePlot"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"TODO", ":", " ", 
         RowBox[{
          RowBox[{
          "we", " ", "should", " ", "start", " ", "dumping", " ", "the", " ", 
           "noisy"}], "-", 
          RowBox[{
          "internal", " ", "stats", " ", "for", " ", "all", " ", "the", " ", 
           "test", " ", 
           RowBox[{"programs", ".", " ", "For"}], " ", "now"}]}]}], ",", " ", 
        
        RowBox[{
         RowBox[{
         "we", " ", "only", " ", "have", " ", "them", " ", "for", " ", "the", 
          " ", "cairo"}], "-", 
         RowBox[{"test", " ", "host"}]}]}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
         "tag", " ", "\[Equal]", " ", "\"\<DTraceFcall-cairotest-host\>\""}], 
         ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"statistics", " ", "=", " ", 
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{"\"\<!grep Routine \>\"", "<>", "filename"}], ",", " ", 
             "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"changeset", " ", "=", " ", 
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{
             "\"\<!grep 'changeset:' \>\"", "<>", "filename", "<>", 
              "\"\< | awk '{print $2}'\>\""}], ",", " ", "\"\<List\>\""}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"totalCalls", " ", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<*\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"noisyIrPassCalls", " ", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"noisyIrHelperCalls", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"genCalls", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<Gen\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"parseCalls", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<Parse\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"unknownCalls", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<Unknown\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"totalTime", " ", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<*\>\"", ",", " ", "10"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"noisyIrPassTime", " ", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "10"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"noisyIrHelperTime", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", "10"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"genTime", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<Gen\>\"", ",", " ", "10"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"parseTime", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<Parse\>\"", ",", " ", "10"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"unknownTime", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<Unknown\>\"", ",", " ", "10"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"labels", " ", "=", 
           RowBox[{"{", 
            RowBox[{
            "\"\<IR Passes\>\"", ",", "\"\<IR Helper Routines\>\"", ",", 
             "\"\<IR Generation\>\"", ",", "\"\<Parsing\>\"", ",", " ", 
             "\"\<Unaccounted\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"callCountData", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
            "noisyIrPassCalls", ",", "noisyIrHelperCalls", ",", "genCalls", 
             ",", "parseCalls", ",", " ", "unknownCalls"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"timeData", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
            "noisyIrPassTime", ",", "noisyIrHelperTime", ",", "genTime", ",", 
             "parseTime", ",", " ", "unknownTime"}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"callCountPlot", " ", "=", " ", 
           RowBox[{"doPlot", "[", 
            RowBox[{
            "\"\<Noisy-Only Call Count Breakdown\>\"", ",", " ", "labels", 
             ",", " ", "callCountData"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"callTimePlot", " ", "=", " ", 
           RowBox[{"doPlot", "[", 
            RowBox[{
            "\"\<Noisy-Only Call Time Breakdown (\[Mu]S)\>\"", ",", " ", 
             "labels", ",", " ", "timeData"}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"callCountPlot", " ", "=", " ", 
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"callTimePlot", " ", "=", " ", 
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", " ", 
        "=", " ", 
        RowBox[{"dtraceStatsForFile", "[", 
         RowBox[{"filename", ",", " ", "tag"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Length", "[", 
           "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", 
           "]"}], " ", ">", " ", "0"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Then", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", 
            "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "filter", " ", "out", " ", "items", " ", "smaller", " ", "than", 
           " ", "1", "%"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRestGreater\
Than1percentSubset", " ", "=", " ", 
           RowBox[{"Select", "[", 
            RowBox[{
            "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", 
             ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", "1"}], "&"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"changesetDtracePlot", " ", "=", " ", 
           RowBox[{"doPlot", "[", 
            RowBox[{
             RowBox[{
             "\"\<Whole-Application Time Breakdown for\\n\>\"", "<>", "tag", 
              "<>", "\"\<,\\nobtained via DTrace (see DTrace/fcalls.d)\>\""}],
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<\\n(\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "]"}], "<>", 
                "\"\< %)\>\""}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRestGre\
aterThan1percentSubset"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRestGre\
aterThan1percentSubset"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Else", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"changesetDtracePlot", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableNoisySubsetPercentages", " ", "=", " ", 
        RowBox[{"dtraceNoisyOnlyStatsForFile", "[", 
         RowBox[{"filename", ",", " ", "tag"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Length", "[", 
           "dtraceResidencyNanosecondsTableNoisySubsetPercentages", "]"}], 
          " ", ">", " ", "0"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Then", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "dtraceResidencyNanosecondsTableNoisySubsetPercentages", "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "filter", " ", "out", " ", "items", " ", "smaller", " ", "than", 
           " ", "1", "%"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "dtraceResidencyNanosecondsTableNoisySubsetPercentagesGreaterThan1pe\
rcentSubset", " ", "=", " ", 
           RowBox[{"Select", "[", 
            RowBox[{
            "dtraceResidencyNanosecondsTableNoisySubsetPercentages", ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", "1"}], "&"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"changesetNoisyOnlyDtracePlot", " ", "=", " ", 
           RowBox[{"doPlot", "[", 
            RowBox[{
             RowBox[{
             "\"\<Whole-Application Time Breakdown for\\n\>\"", "<>", "tag", 
              "<>", "\"\<,\\nobtained via DTrace (see DTrace/fcalls.d)\>\""}],
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<\\n(\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "]"}], "<>", 
                "\"\< %)\>\""}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableNoisySubsetPercentagesGreaterTha\
n1percentSubset"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableNoisySubsetPercentagesGreaterTha\
n1percentSubset"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Else", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"changesetNoisyOnlyDtracePlot", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableCairoSubsetPercentages", " ", "=", " ", 
        RowBox[{"dtraceCairoOnlyStatsForFile", "[", 
         RowBox[{"filename", ",", " ", "tag"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Length", "[", 
           "dtraceResidencyNanosecondsTableCairoSubsetPercentages", "]"}], 
          " ", ">", " ", "0"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Then", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "dtraceResidencyNanosecondsTableCairoSubsetPercentages", "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "filter", " ", "out", " ", "items", " ", "smaller", " ", "than", 
           " ", "1", "%"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "dtraceResidencyNanosecondsTableCairoSubsetPercentagesGreaterThan1pe\
rcentSubset", " ", "=", " ", 
           RowBox[{"Select", "[", 
            RowBox[{
            "dtraceResidencyNanosecondsTableCairoSubsetPercentages", ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", "1"}], "&"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"changesetCairoOnlyDtracePlot", " ", "=", " ", 
           RowBox[{"doPlot", "[", 
            RowBox[{
             RowBox[{
             "\"\<Whole-Application Time Breakdown for\\n\>\"", "<>", "tag", 
              "<>", "\"\<,\\nobtained via DTrace (see DTrace/fcalls.d)\>\""}],
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<\\n(\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "]"}], "<>", 
                "\"\< %)\>\""}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableCairoSubsetPercentagesGreaterTha\
n1percentSubset"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableCairoSubsetPercentagesGreaterTha\
n1percentSubset"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Else", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"changesetCairoOnlyDtracePlot", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"tag", ",", " ", "Large", ",", " ", "Bold", ",", " ", 
            RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
          "callCountPlot", ",", " ", "callTimePlot", ",", 
          "changesetDtracePlot", ",", " ", "changesetNoisyOnlyDtracePlot", 
          ",", "changesetCairoOnlyDtracePlot"}], "}"}], 
        RowBox[{"(*", 
         RowBox[{",", " ", 
          RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "*)"}], "]"}]}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changesetForFile", "[", "filename_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "expression", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"expression", " ", "=", " ", 
        RowBox[{"ToExpression", "[", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{
            RowBox[{
            "\"\<!cat \>\"", "<>", "filename", "<>", 
             "\"\<| grep changeset | awk -F':' '{print $2}'\>\""}], ",", " ", 
            "\"\<List\>\""}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"(*", "\[IndentingNewLine]", "\t", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{
          "\"\<filename: \>\"", ",", " ", "filename", ",", " ", 
           "\"\<expression: \>\"", ",", " ", "expression"}], "]"}], ";"}], 
        "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "expression"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"prefixColumnForDirectory", "[", 
     RowBox[{"directory_", ",", " ", "prefix_", ",", " ", "column_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "files", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"files", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{
           "\"\<!ls \>\"", "<>", "directory", "<>", 
            "\"\<| grep -v latest.txt\>\""}], ",", " ", "\"\<List\>\""}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"changesetForFile", "[", 
            RowBox[{"directory", "<>", "\"\</\>\"", "<>", "#"}], "]"}], ",", 
           " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{
               RowBox[{
               "\"\<!grep Routine \>\"", "<>", "directory", "<>", "\"\</\>\"",
                 "<>", "#"}], ",", " ", "\"\<Table\>\""}], "]"}], ",", " ", 
             "prefix", ",", " ", "column"}], "]"}]}], "}"}], "&"}], " ", "/@",
         " ", "files"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"noisyOverheadDtraceDataForDirectory", "[", 
     RowBox[{"directory_", ",", " ", "tag_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "files", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"files", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{
           "\"\<!ls \>\"", "<>", "directory", "<>", 
            "\"\<| grep -v latest.txt\>\""}], ",", " ", "\"\<List\>\""}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Skip", " ", "over", " ", "the", " ", "regression", " ", "reports", 
         " ", "for", " ", "which", " ", "we", " ", 
         RowBox[{"couldn", "'"}], "t", " ", "extract", " ", "the", " ", 
         "required", " ", "info", " ", 
         RowBox[{"(", 
          RowBox[{
          "Only", " ", "started", " ", "generating", " ", "the", " ", "data", 
           " ", "after", " ", "changeset", " ", "61"}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"changesetForFile", "[", 
              RowBox[{"directory", "<>", "\"\</\>\"", "<>", "#"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"dtraceStatsForFile", "[", 
                  RowBox[{
                   RowBox[{"directory", "<>", "\"\</\>\"", "<>", "#"}], ",", 
                   " ", "tag"}], "]"}], "]"}], "\[Equal]", " ", "0"}], ",", 
               " ", 
               RowBox[{"{", "}"}], ",", 
               RowBox[{"(", 
                RowBox[{"100", "-", 
                 RowBox[{
                  RowBox[{"Last", "[", 
                   RowBox[{"dtraceStatsForFile", "[", 
                    RowBox[{
                    RowBox[{"directory", "<>", "\"\</\>\"", "<>", "#"}], ",", 
                    " ", "tag"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "]"}]}], "}"}], 
           "&"}], " ", "/@", " ", "files"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"NumberQ", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "&&", 
            RowBox[{"NumberQ", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}], "&"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotForDirectory", "[", 
    RowBox[{"directory_", ",", " ", "tag_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "legends", ",", "callData", ",", "timeData", ",", "callPlot", ",", 
       "timePlot", ",", "noisyOverheadDtraceData", ",", 
       "noisyOverheadDtracePlot"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"TODO", ":", " ", 
        RowBox[{
         RowBox[{
         "we", " ", "should", " ", "start", " ", "dumping", " ", "the", " ", 
          "noisy"}], "-", 
         RowBox[{
         "internal", " ", "stats", " ", "for", " ", "all", " ", "the", " ", 
          "test", " ", 
          RowBox[{"programs", ".", " ", "For"}], " ", "now"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{
        "we", " ", "only", " ", "have", " ", "them", " ", "for", " ", "the", 
         " ", "cairo"}], "-", 
        RowBox[{"test", " ", "host"}]}]}], "\[IndentingNewLine]", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "tag", " ", "\[Equal]", " ", "\"\<DTraceFcall-cairotest-host\>\""}], 
        ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"callData", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "3"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", "3"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{"directory", ",", " ", "\"\<Gen\>\"", ",", " ", "3"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{"directory", ",", " ", "\"\<Parse\>\"", ",", " ", "3"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<Unknown\>\"", ",", " ", "3"}], 
             "]"}]}], "}"}]}], 
         RowBox[{"(*", 
          RowBox[{"Parallelize", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "3"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", "3"}],
               "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{"directory", ",", " ", "\"\<Gen\>\"", ",", " ", "3"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{"directory", ",", " ", "\"\<Parse\>\"", ",", " ", "3"}],
               "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<Unknown\>\"", ",", " ", "3"}], 
              "]"}]}], "}"}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"timeData", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "10"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", "10"}],
              "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{"directory", ",", " ", "\"\<Gen\>\"", ",", " ", "10"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{"directory", ",", " ", "\"\<Parse\>\"", ",", " ", "10"}],
              "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<Unknown\>\"", ",", " ", "10"}], 
             "]"}]}], "}"}]}], 
         RowBox[{"(*", 
          RowBox[{"Parallelize", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "10"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", 
               "10"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{"directory", ",", " ", "\"\<Gen\>\"", ",", " ", "10"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<Parse\>\"", ",", " ", "10"}], "]"}],
              ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<Unknown\>\"", ",", " ", "10"}], 
              "]"}]}], "}"}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"legends", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<IR Passes\>\"", ",", "\"\<IR Helper Routines\>\"", ",", 
            "\"\<IR Generation\>\"", ",", "\"\<Parsing\>\"", ",", " ", 
            "\"\<Unaccounted\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"callPlot", " ", "=", " ", 
          RowBox[{"ListLogPlot", "[", 
           RowBox[{"callData", ",", "\[IndentingNewLine]", " ", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
            RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
            RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Changeset ID\>\"", ",", " ", "\"\<Call Count\>\""}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{"legends", ",", "Above"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"PointSize", "[", "0.02", "]"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "1.8"}]}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"80", ",", "0"}], "}"}], " ", ",", 
               RowBox[{"{", 
                RowBox[{"50", ",", "10"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FrameStyle", "\[Rule]", " ", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"FontSize", "\[Rule]", " ", "16"}], ",", " ", 
               RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", "480"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"timePlot", " ", "=", " ", 
          RowBox[{"ListLogPlot", "[", 
           RowBox[{"timeData", ",", " ", "\[IndentingNewLine]", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
            RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
            RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Changeset ID\>\"", ",", " ", 
               "\"\<Aggregate Time (\[Mu]S)\>\""}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{"legends", ",", "Above"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"PointSize", "[", "0.02", "]"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "1.8"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"80", ",", "0"}], "}"}], " ", ",", 
               RowBox[{"{", 
                RowBox[{"50", ",", "10"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FrameStyle", "\[Rule]", " ", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"FontSize", "\[Rule]", " ", "16"}], ",", " ", 
               RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", "480"}]}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"callPlot", " ", "=", " ", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"timePlot", "=", " ", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"noisyOverheadDtraceData", " ", "=", " ", 
       RowBox[{"noisyOverheadDtraceDataForDirectory", "[", 
        RowBox[{"directory", ",", " ", "tag"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"noisyOverheadDtracePlot", " ", "=", " ", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"noisyOverheadDtraceData", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
         RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Changeset ID\>\"", ",", " ", 
            "\"\<Compile Time Spent in Noisy routines (%)\>\""}], "}"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"PointSize", "[", "0.02", "]"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "1.8"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"80", ",", "0"}], "}"}], " ", ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "10"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameStyle", "\[Rule]", " ", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontSize", "\[Rule]", " ", "16"}], ",", " ", 
            RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "600"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"tag", ",", " ", "Bold", ",", " ", "Large", ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica Neue\>\""}], ",", 
           "Orange"}], "]"}], ",", " ", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
           "callPlot", ",", " ", "timePlot", ",", " ", 
            "noisyOverheadDtracePlot"}], "}"}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "*)"}], "]"}]}],
         "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.626707250873294*^9, 3.626707259339101*^9}, {
   3.626708319005877*^9, 3.626708327736919*^9}, {3.626708420360804*^9, 
   3.626708420606814*^9}, {3.626708587186689*^9, 3.626708608752596*^9}, 
   3.6267088112987328`*^9, {3.626709298123802*^9, 3.626709483625848*^9}, {
   3.626709544398624*^9, 3.626709559632555*^9}, {3.6267096089633827`*^9, 
   3.6267096231490583`*^9}, {3.62670965516819*^9, 3.6267096747312326`*^9}, {
   3.626709710115286*^9, 3.626709747443433*^9}, 3.626709843699272*^9, {
   3.6267135398657722`*^9, 3.6267135518292303`*^9}, {3.626713623243988*^9, 
   3.626713638138009*^9}, {3.626714002774214*^9, 3.626714035086513*^9}, {
   3.626714108513954*^9, 3.626714117006757*^9}, {3.626714272000264*^9, 
   3.62671427616329*^9}, 3.626714325135765*^9, {3.626714364613196*^9, 
   3.626714385537624*^9}, {3.626714426859249*^9, 3.626714468145509*^9}, {
   3.626714527906372*^9, 3.62671455047437*^9}, {3.626714630157748*^9, 
   3.6267146605217667`*^9}, 3.626714767064351*^9, {3.626714848252039*^9, 
   3.62671489741604*^9}, {3.626714943789678*^9, 3.626715042791976*^9}, {
   3.626715078825138*^9, 3.62671511040152*^9}, {3.626715167035947*^9, 
   3.626715169825384*^9}, {3.6267152372923822`*^9, 3.626715253322525*^9}, {
   3.626715357239311*^9, 3.6267154329849977`*^9}, {3.626715474015737*^9, 
   3.626715485096264*^9}, {3.6267172326322613`*^9, 3.626717250406763*^9}, {
   3.626717385453796*^9, 3.626717394116929*^9}, 3.626717457856024*^9, {
   3.626717494512101*^9, 3.626717563247527*^9}, {3.626717801108637*^9, 
   3.626717804854904*^9}, {3.626717882156245*^9, 3.6267179090191517`*^9}, {
   3.626718132086972*^9, 3.626718166442423*^9}, {3.651510549241453*^9, 
   3.651510604130125*^9}, {3.6515107635190287`*^9, 3.651510764226646*^9}, {
   3.651510810182151*^9, 3.651510895084025*^9}, 3.651510994130466*^9, {
   3.651511069231985*^9, 3.651511103814247*^9}, {3.6515111776803837`*^9, 
   3.6515111820782957`*^9}, 3.651511225078496*^9, {3.651511341515705*^9, 
   3.6515113494881077`*^9}, {3.651511395581608*^9, 3.651511411069652*^9}, {
   3.6515120773280897`*^9, 3.6515121890176287`*^9}, {3.651512221057468*^9, 
   3.651512387981492*^9}, {3.651512577835342*^9, 3.651512599095586*^9}, {
   3.6515126422710543`*^9, 3.651512777325157*^9}, {3.651513022922069*^9, 
   3.651513048021291*^9}, {3.651513112132732*^9, 3.651513141247624*^9}, 
   3.651513218656695*^9, {3.6515132679218693`*^9, 3.6515132822072487`*^9}, {
   3.65151336718955*^9, 3.651513383309388*^9}, {3.651513437657145*^9, 
   3.65151344335076*^9}, {3.651513476740191*^9, 3.651513489045559*^9}, {
   3.651513684862753*^9, 3.651513694088785*^9}, {3.651513728480885*^9, 
   3.651513737803356*^9}, {3.651513798343424*^9, 3.651513799957782*^9}, {
   3.651513833712932*^9, 3.6515139453049192`*^9}, {3.65151454058333*^9, 
   3.651514542997655*^9}, 3.651514665578516*^9, {3.6515147241224623`*^9, 
   3.651514752866374*^9}, {3.651514862114401*^9, 3.651514906164221*^9}, 
   3.651515017664125*^9, {3.651515075519112*^9, 3.65151507589036*^9}, {
   3.651515108077733*^9, 3.651515108515477*^9}, {3.65151613353477*^9, 
   3.651516232912796*^9}, {3.6537364097961607`*^9, 3.6537364101889467`*^9}, {
   3.653736441643324*^9, 3.653736452735826*^9}, {3.653736485316176*^9, 
   3.653736485686387*^9}, {3.653736598377157*^9, 3.653736677204053*^9}, {
   3.653736724352941*^9, 3.6537367622189903`*^9}, {3.653736810751931*^9, 
   3.6537368111557283`*^9}, {3.653736842691073*^9, 3.653736857570663*^9}, {
   3.653737075080117*^9, 3.653737102709882*^9}, {3.653737196384856*^9, 
   3.6537371967225227`*^9}, {3.653737256978364*^9, 3.6537372575506353`*^9}, {
   3.653737300661837*^9, 3.6537373062849197`*^9}, {3.653737349381186*^9, 
   3.6537373498988256`*^9}, {3.6537374188178368`*^9, 
   3.6537374189057417`*^9}, {3.6537375208583317`*^9, 3.653737563611944*^9}, {
   3.6537375999837027`*^9, 3.653737617949688*^9}, {3.6537377288531723`*^9, 
   3.653737733778912*^9}, {3.653737793403851*^9, 3.653737807995988*^9}, 
   3.653737895500125*^9, {3.653737935987824*^9, 3.6537379532734537`*^9}, {
   3.653738017433683*^9, 3.653738017679802*^9}, {3.653738074977024*^9, 
   3.6537380825904922`*^9}, 3.6537381320468283`*^9, {3.6537382113309727`*^9, 
   3.653738234228557*^9}, 3.65373829017382*^9, {3.653738344386664*^9, 
   3.653738359718954*^9}, {3.653738430664259*^9, 3.653738507609177*^9}, {
   3.653738540942915*^9, 3.65373857820199*^9}, 3.653738609951077*^9, {
   3.653765769563743*^9, 3.6537657862104797`*^9}, {3.653836854318014*^9, 
   3.653836859882427*^9}, {3.653836980986068*^9, 3.6538370043317623`*^9}, {
   3.653837438518107*^9, 3.653837452259774*^9}, {3.65383761788855*^9, 
   3.653837634863023*^9}, {3.653837854752695*^9, 3.6538378659195623`*^9}, {
   3.653838099821616*^9, 3.6538381212271023`*^9}, {3.653838324521215*^9, 
   3.653838338256234*^9}, 3.653838748018671*^9, {3.654031201985401*^9, 
   3.654031202494787*^9}, 3.6540326976609077`*^9, {3.654033237644382*^9, 
   3.6540332779145813`*^9}, {3.654033516812319*^9, 3.654033517468041*^9}, {
   3.6540337968121643`*^9, 3.6540338237317944`*^9}, {3.6540338574692383`*^9, 
   3.6540338577237463`*^9}, {3.654034570294091*^9, 3.654034579205694*^9}, {
   3.654034631126175*^9, 3.65403465137142*^9}, {3.654040010057228*^9, 
   3.6540400236667433`*^9}, {3.654040065855228*^9, 3.654040232537568*^9}, {
   3.654040326714324*^9, 3.654040437754114*^9}, {3.654040528369308*^9, 
   3.654040542205654*^9}, {3.6540405887237387`*^9, 3.654040592095044*^9}, {
   3.65451284458809*^9, 3.6545129145480757`*^9}, {3.654513124696279*^9, 
   3.654513128217512*^9}, {3.654513311750194*^9, 3.654513337354164*^9}, {
   3.654513372878899*^9, 3.654513420645687*^9}, {3.6545134630024967`*^9, 
   3.6545134631125603`*^9}, {3.654513972576322*^9, 3.654513976673123*^9}, {
   3.654514023721274*^9, 3.654514054869109*^9}, {3.6545141396728363`*^9, 
   3.654514244878352*^9}, {3.654514377706689*^9, 3.654514386131056*^9}, {
   3.654514538318486*^9, 3.654514552143474*^9}, {3.654514585692917*^9, 
   3.654514646225749*^9}, {3.654514741696021*^9, 3.6545147563844233`*^9}, {
   3.654518070543124*^9, 3.654518114887864*^9}, {3.6545182007263947`*^9, 
   3.654518236511479*^9}, {3.654518294008882*^9, 3.6545184131779003`*^9}, {
   3.6545184664569387`*^9, 3.654518580475369*^9}, {3.654520355327298*^9, 
   3.65452039315364*^9}, {3.65452042567389*^9, 3.654520523118205*^9}, {
   3.654520562087942*^9, 3.654520562290729*^9}, {3.654520658286509*^9, 
   3.65452067060281*^9}, 3.6545207687737103`*^9, {3.654520875107004*^9, 
   3.6545209183042717`*^9}, {3.6545209555411463`*^9, 3.654520955812564*^9}, {
   3.654520995840559*^9, 3.654521022682108*^9}, {3.654521090721476*^9, 
   3.6545211154576807`*^9}, {3.655304735990121*^9, 3.655304748898138*^9}, {
   3.655304892494966*^9, 3.655304893083497*^9}, 3.655305107693634*^9, {
   3.6553051983689127`*^9, 3.655305250693735*^9}, {3.655305390948855*^9, 
   3.6553053951197157`*^9}, {3.6572287533543262`*^9, 3.657228789054528*^9}, {
   3.6572288304818172`*^9, 3.6572288408654213`*^9}, {3.6572291100582113`*^9, 
   3.657229110620283*^9}, {3.657229146717216*^9, 3.6572291963629303`*^9}, {
   3.680965860824257*^9, 3.680965861985976*^9}, {3.680965892265314*^9, 
   3.680965892376141*^9}, {3.680972387982526*^9, 3.68097242823656*^9}, {
   3.6809725760521603`*^9, 3.680972583333786*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Analysis",
 FontSize->36]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.65403409760143*^9, 3.654034139223724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
  "latestFile", " ", "=", " ", 
   "\"\</Volumes/doos/Noisy-lang-compiler-github-clone/statistics/latest.txt\>\
\""}], ";"}], "\n", 
 RowBox[{"Column", "[", 
  RowBox[{"Parallelize", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"\"\<Changeset:    \>\"", "<>", 
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{
          "\"\<!grep 'changeset:' \>\"", "<>", "latestFile", "<>", 
           "\"\< | awk '{print $2}'\>\""}], ",", " ", "\"\<List\>\""}], 
         "]"}]}], ",", " ", "Large", ",", " ", "Bold", ",", " ", 
       RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"plotChangeSet", "[", 
      RowBox[{"latestFile", ",", "\"\<DTraceFcall-noisy-darwin-EN\>\""}], 
      "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"\"\<Changeset:    \>\"", "<>", 
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{
          "\"\<!grep 'changeset:' \>\"", "<>", "latestFile", "<>", 
           "\"\< | awk '{print $2}'\>\""}], ",", " ", "\"\<List\>\""}], 
         "]"}]}], ",", " ", "Large", ",", " ", "Bold", ",", " ", 
       RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Noisy Compiler on helloWorld.n\>\"", ",", " ", "Bold", ",", " ", 
       "Large", ",", " ", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica Neue\>\""}], ",", 
       "Orange"}], "]"}], ",", " ", 
     RowBox[{"TableForm", "[", 
      RowBox[{
       RowBox[{"dtraceStatsForFile", "[", 
        RowBox[{
        "\"\</Volumes/doos/Noisy-lang-compiler-github-clone/statistics/latest.\
txt\>\"", ",", " ", "\"\<DTraceFcall-noisy-darwin-EN\>\""}], "]"}], ",", 
       RowBox[{"TableHeadings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"None", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Function\>\"", ",", " ", "Bold", ",", " ", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica Neue\>\""}]}], 
             "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<% of Runtime\>\"", ",", " ", "Bold", ",", " ", 
              RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica Neue\>\""}]}], 
             "]"}]}], "}"}]}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
    "}"}], "]"}], "]"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.626703574389592*^9, 3.626703824662992*^9}, {
   3.626703863420491*^9, 3.62670386658082*^9}, {3.626703977238913*^9, 
   3.6267040601834583`*^9}, {3.62670418589363*^9, 3.626704264216775*^9}, 
   3.626704305718095*^9, {3.6267043473251677`*^9, 3.626704356804401*^9}, {
   3.6267044824816313`*^9, 3.626704658420311*^9}, {3.6267047371812363`*^9, 
   3.626704878762599*^9}, {3.626704911615383*^9, 3.6267049147309713`*^9}, {
   3.626705044342774*^9, 3.626705062703288*^9}, {3.626705098692824*^9, 
   3.626705246764591*^9}, {3.6267054731294193`*^9, 3.626705505808573*^9}, {
   3.6267055773383217`*^9, 3.626705725399749*^9}, {3.62670576748829*^9, 
   3.626705774069665*^9}, {3.626705813277143*^9, 3.626705917170879*^9}, {
   3.626705967066409*^9, 3.626706164873584*^9}, {3.6267062355835648`*^9, 
   3.626706258249316*^9}, {3.626706350129668*^9, 3.626706367679886*^9}, {
   3.626706404367313*^9, 3.626706504516005*^9}, {3.626706710516631*^9, 
   3.6267067928648863`*^9}, {3.626706865823491*^9, 3.6267068911138353`*^9}, {
   3.626707137164308*^9, 3.626707480866455*^9}, {3.626708241731043*^9, 
   3.6267083470635433`*^9}, {3.626708390163642*^9, 3.626708415792049*^9}, {
   3.626708462714834*^9, 3.626708466505769*^9}, {3.6267085501847553`*^9, 
   3.6267085667330723`*^9}, 3.626709293964591*^9, {3.626713510694046*^9, 
   3.626713525929335*^9}, {3.626713560655408*^9, 3.6267135610047092`*^9}, {
   3.6267140642435627`*^9, 3.626714088317466*^9}, {3.626714514147727*^9, 
   3.626714514752234*^9}, {3.6267145902986727`*^9, 3.626714595292841*^9}, 
   3.626715140596546*^9, {3.6267179385599613`*^9, 3.6267179481547823`*^9}, {
   3.651254432018917*^9, 3.6512544372833157`*^9}, {3.651515039129653*^9, 
   3.651515056542281*^9}, 3.651515971034904*^9, {3.651613347605859*^9, 
   3.651613347942087*^9}, 3.6537379644536047`*^9, 3.653738698664823*^9, {
   3.65383671066984*^9, 3.6538367247634773`*^9}, 3.654032818441709*^9, {
   3.654032851967832*^9, 3.65403293795383*^9}, {3.654033001765004*^9, 
   3.654033149631423*^9}, {3.654033312039791*^9, 3.654033384963128*^9}, {
   3.654033879870883*^9, 3.654033964402644*^9}, {3.654034058340626*^9, 
   3.654034088424224*^9}, 3.654034139224262*^9, {3.65403961550764*^9, 
   3.6540396205554113`*^9}, {3.657228538588633*^9, 3.657228622116332*^9}, {
   3.657228659386847*^9, 3.657228694119372*^9}, {3.657228830679853*^9, 
   3.657228830777151*^9}, {3.657228910223144*^9, 3.657228938660428*^9}, {
   3.680901190383582*^9, 3.680901206757371*^9}, {3.680966004518374*^9, 
   3.680966020650119*^9}, 3.680966154524509*^9, 3.680966185996366*^9, {
   3.6809663233903513`*^9, 3.680966326917395*^9}, {3.6809665294944057`*^9, 
   3.680966546621361*^9}, {3.680967206282517*^9, 3.680967260407275*^9}, {
   3.680967291244335*^9, 3.6809672977565517`*^9}, {3.680972749030195*^9, 
   3.680972749372181*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Changeset:    120:06cb6ed905cb8e98f3954e70e90db4c670d05f43\
\"\>",
      StripOnInput->False,
      FontSize->Large,
      FontWeight->Bold,
      Background->RGBColor[0.87, 0.94, 1]]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"DTraceFcall-noisy-darwin-EN\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold,
          Background->RGBColor[0.87, 0.94, 1]]},
        {
         GraphicsBox[RectangleBox[{0, 0}, {0, 0}],
          ImageSize->Tiny]},
        {
         GraphicsBox[RectangleBox[{0, 0}, {0, 0}],
          ImageSize->Tiny]},
        {
         GraphicsBox[{{}, {InsetBox[
             GraphicsBox[{{}, {}, 
               
               DynamicModuleBox[{DynamicChart`click$25872$12037 = False, 
                DynamicChart`click$25877$12037 = False}, {
                 {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
                  0.5]}], {{{}, {
                    {RGBColor[
                    0.4549019607843137, 0.050980392156862744`, 
                    0.023529411764705882`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJwtlQtUTHkcxyd7KBa7KqwKFbV6TQibU/wkp3ZVRFTyLhEbJeu5x2OXzaLa
llWhB2LCenUSEv3GI4RKpabSa5qpec+tqGRq7u783Dlnzpw55557//f3+34/
H5vwmKWRg3g83oH/v4Zf/xkNEbfzGTT6J3pNhttjjDq2/lK5NYMmy59PFF4v
xckeJhsuzNHiNx1xlzM179DyQprl+pEadE7c5Oj+th5TLt3MHJqiQl3T2ohb
P7SgXU1NekCtAu+bC+x3N7WiboXzsqQ6Gea4W8leLG9DGNKU8DazDevWCk5u
TZXhtbNL+m65SLDoGI4tzFCgcanAYklCC1ouvHo9LUKF0bkuZ7N/f4/JDWOz
kqVqHFY/3md7TjV+e9E6od5Ki/zeJEmCUzny70yXbhjKoBj875YVPEGR2CG7
IYfBIZWarpqIK/jAd5RDXg+DR9xG+MtWXYO06JbJtt0MDlYdcqme9RTmHAw9
6pLNoF9zioeloBzGV1rszTZiMCrwxJzW1mp4fHjUMgtTLQbyK2quFL6HWNH8
y+oaNTrEdkwKzmmBsCMWXm5BKuyZWbbzg48EVghH7H10XIHK9izG9G4bTK+a
Hm/8uwwV2/osTmtl4F8om+c6tw2HhQRLJEoFrDyi8JI9a0Xnop3ZPIEKBNme
iVFWLWi1+0V+sqUGhjfJqotT6rFjw+Ioua8WrK9GO9bmvsM25XZ38ykMLOz2
S703rRQ3B8ZASwEDd6JahYvuCnF8nPhho44Bk/Skn2O8z2Prcb/cjRoGZgUb
ZV+ckwv96/89mJXEQOfXdfPK3YvB6NfOv3e1aOFKgHx/ftlbmBTvY3RRqoGY
vU7KwpoacLk56MdzGWrIMzsgX3S5AXZoHE3OjFSBfs3iQ4rRYnAWW/XEeyjg
VOBt/dSbEnA6UKTTTZFBftDVzh7zdnhTxrvBb5CCZ0iRZOoCOaTNFTrKw1qh
8NXrcetmKaHwL72DKrgZtsULIrPaVTA62DV86tU66HPdt+tWoAaSHA+L5A+q
YH6I+qjRdi0Mcn4Yz858DZtNJy8XLmDgUN6W5l8iHoFisNtsUQkDWRl6Wbd3
MuxP7NrSq2dg/LgN8Xf88nHMWUffcxIGSjJtI7fMfoETRYXnjfcw8GYHbvMt
qcCFew6a+T3SQqmtWmlZIsIxrskrPfI1ULyvwNcysRGrM67fiw1Xw/cTeoPC
D4vR4cLicHipBP4iszEO5lIMS1VMu6WUQ2i46Zutce14P8Bv5/aydoi1C4j0
SJNjs/CpXfUeKZjxm+sdDynR3v1iQgEjhq9sBc9j7dQY1rRJp49rgjPC4jjF
YQ2uD36d2lVQCzLTMO9JaVrMOvtqXt6TSlg1y37dprUMRuy9u/8P9xKod935
p1DEYJWf1/yNoQXAo08H/nYi/PmzGZWeX/7zhMarzN3sBbmeX65nuetLYDXd
j8Ugul8dyOl5ekyl57VCOp1nAJfSeeRgTOftR386r5Z7n8/c+3Ry7/uJe9+P
sJLm0YP5NI8emEHz+ojLaV6fgE/z7EQ7mudneEfz1mAFzbsfKmgfMhxN+xiA
KtqXGH+ifemhjvYpwgm0TxYCaN/FOJr2zUJWuiEP57k8sBBLeSkFJeWFhS4n
Q57ewxbKEwtHKW8S8Ka86WEY5VEBOsrjANygvDIQR3nVwWnKcxc8ojx/hueU
94/gRXn/BA7Uh164R33oAQfqSx+kUF8+QAz1SQeD1xr61AlO1Ld+eEB9U4MN
9XEAdlEf24FHfdXDbeprC9dnFoyGG/pcDWLqOwu7qO+P4QsPWHh5zsCD2xwv
WLhEvHiL7cQTFjyIJ43YSbzRw3fEGylOJB4NwECjgUdK5BOvdJBNvOrAEcSz
PgglnnWhlnjXCz7Eu27UEA+7wZV42Iv9xMsPsIx42Yd84mkHhBBPdRhCvFVB
DPG2H2OJx20gJB7rMYh43czxmkU74nkVeBLPWZQS7x9wvGfxRYXBB/c5H7BY
Qb6oxFryBYv25JNmzics6uoMvmlDM/KNHleTj1R4inzUjzzyVQdak690mEM+
+4BC8lkf57tuzne9nA97OR92ow35sg+LyJddeJJ8qsNBzQafduA48u0AupFv
lTiJfKzHseRjKedrlvN1I/qRz1m0IZ9X4H/wpU8G
                    "]]},
                    ImageSizeCache->{{213.7606933090101, 
                    387.2393066909899}, {-211.2393066909899, \
-37.760693309010094`}}], {}},
                    StatusArea[#, 96.05375855801356]& ,
                    TagBoxNote->"96.05375855801356"],
                    StyleBox["96.05375855801356`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[96.05375855801356, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$25872$12037, 
                    FEPrivate`Not[DynamicChart`click$25872$12037]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$25872$12037, {{{1., 0}, {0, 1.}}, {
                    0.19954592633809445`, 0.01346934600757545}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$25872$12037}]]}, 
                    {RGBColor[0.6784313725490196, 0.3137254901960784, 0.], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-1., -1.2246467991473532`*^-16}, \
{-0.9977296316904721, -0.06734673003787738}, {-0.9909288359064106, \
-0.13438765631249797`}, {-1.9818576718128211`, -0.26877531262499593`}, \
{-1.9954592633809443`, -0.13469346007575475`}, {-2., \
-2.4492935982947064`*^-16}}]},
                    
                    ImageSizeCache->{{213.7606933090101, 
                    263.2393066909899}, {-128.2393066909899, \
-109.7606933090101}}], {}},
                    StatusArea[#, 2.105854308788847]& ,
                    TagBoxNote->"2.105854308788847"],
                    StyleBox["2.105854308788847`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2.105854308788847, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$25877$12037, 
                    FEPrivate`Not[DynamicChart`click$25877$12037]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$25877$12037, {{{1., 0}, {
                    0, 1.}}, {-0.19954592633809443`, \
-0.013469346007575475`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$25877$12037}]]}}}, {}}, {}}, {{{
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{1.9954592633809445`, 
                    0.1346934600757545}, {2.1950051897190392`, 
                    0.14816280608332996`}}], 
                    LineBox[{{2.1950051897190392`, 0.14816280608332996`}, {
                    2.2, 0.14816280608332996`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{1.9954592633809445, 0.1346934600757545},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyInit\\n(96.1 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    FontColor->GrayLevel[0]], {2.2800000000000002, 0.14816280608332996},
                     ImageScaled[{0, Rational[1, 2]}]]}}},
                    StatusArea[#, 96.05375855801356]& ,
                    TagBoxNote->"96.05375855801356"],
                    StyleBox["96.05375855801356`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[96.05375855801356, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$25872$12037, 
                    FEPrivate`Not[DynamicChart`click$25872$12037]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$25872$12037, {{{1., 0}, {0, 1.}}, {
                    0.19954592633809445`, 0.01346934600757545}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$25872$12037}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{-1.9954592633809443`, -0.13469346007575475`}, \
{-2.195005189719039, -0.14816280608333024`}}], 
                    LineBox[{{-2.195005189719039, -0.14816280608333024`}, \
{-2.2, -0.14816280608333024`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.9954592633809443, -0.13469346007575475},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"Other\\n(2.1 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    FontColor->GrayLevel[0]], {-2.2800000000000002, -0.14816280608333024},
                     ImageScaled[{1, Rational[1, 2]}]]}}},
                    StatusArea[#, 2.105854308788847]& ,
                    TagBoxNote->"2.105854308788847"],
                    StyleBox["2.105854308788847`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2.105854308788847, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$25877$12037, 
                    FEPrivate`Not[DynamicChart`click$25877$12037]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$25877$12037, {{{1., 0}, {
                    0, 1.}}, {-0.19954592633809443`, \
-0.013469346007575475`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$25877$12037}]]}, {}}, {}}},
                DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
              ContentSelectable->False,
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImagePadding->{{150, 150}, {0, 0}},
              ImageSize->{600, 300},
              LabelStyle->{
                GrayLevel[0], FontFamily -> "Arial"},
              
              PlotLabel->FormBox[
               "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm],
              PlotRange->{{-2.4, 2.4}, {-2.4, 2.4}},
              PlotRangePadding->Scaled[0.1],
              Ticks->None], {320., -157.5}, 
             ImageScaled[{0.5, 0.5}], {600, 300}], InsetBox[
             TemplateBox[{GraphicsBox[{{
                  Opacity[0], 
                  
                  PointBox[{
                   0.5974863387978142, -0.25527876779380976`}]}, {{}, {{{}, \
{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{
                    0.6357012750455373, -0.25527876779380976`}, {
                    1.546448087431694, 4.564908019714065}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 96.05375855801356]& , TagBoxNote -> 
                    "96.05375855801356"], 
                    StyleBox[
                    "96.05375855801356`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[96.05375855801356, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{
                    1.6357012750455373`, -0.25527876779380976`}, {
                    2.5464480874316937`, 0.7447212322061902}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 2.105854308788847]& , TagBoxNote -> 
                    "2.105854308788847"], 
                    StyleBox[
                    "2.105854308788847`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[2.105854308788847, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}}, {
                AspectRatio -> 0.6666666666666666, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, 
                 AxesOrigin -> {0.5974863387978142, -0.25527876779380976`}, 
                 CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}, Frame -> True, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[FontSize -> 15, FontFamily -> "Helvetica"], 
                 FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], 
                    
                    Charting`ScaledFrameTicks[{Log, Exp}]}, {{{
                    1.0910746812386156`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    2.0910746812386156`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}, {{
                    1.0910746812386156`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    2.0910746812386156`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
                 GridLines -> {None, 
                   Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
                 Directive[
                   GrayLevel[0.4, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]], ImagePadding -> 40, ImageSize -> 
                 300, PlotLabel -> 
                 FormBox[
                  "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                 PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {None, 
                    Scaled[0.05]}}, Ticks -> {None, 
                   Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
                FormBox[
                 
                 TemplateBox[{"\"noisyInit (96.1 %)\"", "\"Other (2.1 %)\""}, 
                  "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    
                    Directive[], 
                    Directive[], FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False], TraditionalForm]& ), 
                  InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6859999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6859999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6859999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.3328, 0.37013333333333337`, 0.5539536], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}]}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "None", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}],
                     ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", "]"}], ",", 
                    RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                TraditionalForm]},
              "Legended",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> Automatic, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              Editable->True,
              InterpretationFunction->(FormBox[
                RowBox[{"Legended", "(", 
                  RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
                TraditionalForm]& )], {960., -157.5}, {
             Center, Center}, {600., 300.}]}, {}},
          ContentSelectable->True,
          ImageSize->{1292., 327.},
          PlotRangePadding->{6, 5}]},
        {
         GraphicsBox[{{}, {InsetBox[
             GraphicsBox[{{}, {}, 
               DynamicModuleBox[{DynamicChart`click$26026$12066 = False}, {
                 {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
                  0.5]}], {{{}, 
                    {RGBColor[
                    0.4549019607843137, 0.050980392156862744`, 
                    0.023529411764705882`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    FilledCurveBox[{{
                    Line[CompressedData["
1:eJxdkw0s1GEcx0UiKhlRos0qSy9TyipZP5PSQsuVkQ553aQ5hkle8lKT7vJS
mtek1sKsM9mYo37eIiuusxPjiPN63N3fEqtuVHoebTzbf/8927Pn+f2+v8/H
3J/DClJXU1Oz//st/8maRS224VGLV88bnEu/tF/oZbCyVuLolFCHV+Ziqh55
M3jdi8PqZ3dgG68udHOOEktVBV2Og90oEtrz6+MVqGlTVmwm6cPcdG3zQBM5
8vQ9HtcUDmH0L2cXXvg0zmxiddRukOKJS8IXnNQp3GVkx6rNHsN4H7e33z0m
EB+eyvObmkCRgistmRtFlyHN6Jb1Mkzuj1Ols0fQ40iMbuLINJZ+8LLKsB5E
/vnMCHGsHLOLpG7o14sZxwPf1XYocGzknEOkuwgVOb7eok4l3o/UTTSxbUNj
02QeN5XBaT3VTIp5NXZKdWaNZQxe0xEEh6Xlw+dbA/ujFhnklcoPL4oRJjXe
c242Mhh/Vn00K+4ThMg8NYusGVR2NIu3+YshtLpPEOquxNQC1z1prH4YcDvJ
2nJAgUu/l9dXqHDxnLpdM4Pa/ZU2WnwpTAqehgSpZMjOMGpPOzgOPRI7C5ul
SQxQ/bC2jJ6E3FDd4p8t4yix3a1tmiKDYFl4iTdrFM/Udb/ed3EGts5ajeRV
DmME+2N5g1gOTRURro2tA7jzEMthQV8JC7oPospGezBMGOXDV2egyTTLEJ8I
cYddAjfpJQP6QbF7RQYt2HPa0kA0z8Cz6GS/4Hvl//e+ZA8m9Pw6ch449L4q
ch+Y0feU5D2IpPUISD3gROvdSOqFIdpPAOkHgmm/OaRf8KV5dJM8QI/mJSV5
gcY/PoehnOQJa/KGeTqPG2QecHf1vKB+9TyhcPW8QUB56CI8QBLlZTvhBXoo
TwzhCdIpb5mEN8inPL4hPEIi5fUq4RXW8AyxlPdmwjus8QHCqS/fiC+wxifo
pL4ZEt+glfrIJz7CZerrHeIrrPgsJD7Diu/JXP+21mPddn8AKK8vDw==
                    
                    "]]}, {
                    Line[CompressedData["
1:eJxdkwss1VEcx0UiKhlRos0qS48pZZXu+pn0WGi5ZaSLPDdpLsMkjzxqkptH
aYRkrYVZ19TmzqV+XpE1bleouGkuzSuPXK7Hde+/dI42zvbff2c7O+f3+/4+
H3NfLjtAXU1Nze7vt/Snq1aLY3jY4mUFy7G4q/n8FwbLBRKHs3EtcFkWVfHQ
k8FrHlx2N+cbNPGqgjdmq7BYkdfm8F0KYpEdvzpWiZo2JYVmkiHISdU29zdZ
RJ6+26PK/HGIXHB04oUu4OgGdotg3RQcuyh6zk2ewx1GLLYgaxpivVzeTrvJ
ER+cyPUZkoN4LE1aJJOhU69mZMPaeUjsjlGkcn6j26Eo3fi+BSj+4GGVbj2G
/HMZYR3Ri5BVIHVBn0FMP+r/TtCihIG+M/bhrn04lu3tKW5Vwb1w3XgT2y40
Nk3kpSUzMKKnGE0yb8BWqc6k8TADV3WEgSEppfDpZs/eCCUDvOJfB5UdIhjU
eM+9UctA7Gn1/swYCQQNu2sWWDMw3lLfscV3AILffBUGu6ogOc95Vwp7BHpc
jrM37VOCillaE1Dm5D50q1IB2t3lNlr8KRgUPg0KUMwDJ92oOWX/DHRKWBY2
qlnwU8xZW0bOQk6wbuF8wwxIbHdqmybNQ+BwaJEnWwanqtpf7bmggM2TVn25
5ZMQxvlYWtOxCHVlYc61jaOw/QDbXq6vArnu/YiS/p8QIorw4qszUGeaaYiP
f8A2VlxawgsG9AOid4sNPkPnSUsD8QwDzyITfQLvVv3fe5M9mtDza8h55NL7
Ksh9aEbfGyfvYTitR0jqwbO03vWkXuyl/fiRfjCQ9ptN+kVvmkc7yQP1aF5S
khdq/MNzEkpJnrgqb5yh87hO5oF3Vs4Lq1fOE/NXzhuFlIc2wgMmUF62El6w
k/I0QXjCVMpbBuENn1AeXxMeMZ7yeoXwiqt4xmjKez3hHVf5gKHUlyniC67y
CVupb4bEN2ykPvKJj3iJ+nqb+IrLPouIz7jse2Kab1PjEWnNHxeFNRE=
                    
                    "]]}}]},
                    
                    ImageSizeCache->{{213.7606933090101, 
                    387.2393066909899}, {-211.2393066909899, \
-37.760693309010094`}}], {}},
                    StatusArea[#, 98.1200232963851]& ,
                    TagBoxNote->"98.1200232963851"],
                    StyleBox["98.1200232963851`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[98.1200232963851, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26026$12066, 
                    FEPrivate`Not[DynamicChart`click$26026$12066]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26026$12066, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$26026$12066}]]}}, {}}, {}}, {{
                   GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{2., 0.}, {2.2, 0.}}], 
                    LineBox[{{2.2, 0.}, {2.2, 0.}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    StyleBox[DiskBox[{2., 0.}, 0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyInit\\n(98.1 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    FontColor->GrayLevel[0]], {2.2800000000000002, 0.}, 
                    ImageScaled[{0, Rational[1, 2]}]]}}},
                    StatusArea[#, 98.1200232963851]& ,
                    TagBoxNote->"98.1200232963851"],
                    StyleBox["98.1200232963851`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[98.1200232963851, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26026$12066, 
                    FEPrivate`Not[DynamicChart`click$26026$12066]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26026$12066, {{{1., 0}, {0, 1.}}, {
                    0.2, 0}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$26026$12066}]], {}}, {}}},
                DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
              ContentSelectable->False,
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImagePadding->{{150, 150}, {0, 0}},
              ImageSize->{600, 300},
              LabelStyle->{
                GrayLevel[0], FontFamily -> "Arial"},
              
              PlotLabel->FormBox[
               "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm],
              PlotRange->{{-2.4, 2.4}, {-2.4, 2.4}},
              PlotRangePadding->Scaled[0.1],
              Ticks->None], {320., -157.5}, 
             ImageScaled[{0.5, 0.5}], {600, 300}], InsetBox[
             TemplateBox[{GraphicsBox[{{
                  Opacity[0], 
                  
                  PointBox[{0.6178343949044586, 
                   3.5861914568177484`}]}, {{}, {{{}, {{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.693]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.6360327570518653, 3.5861914568177484`}, {
                    1.545950864422202, 4.586191456817748}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 98.1200232963851]& , TagBoxNote -> 
                    "98.1200232963851"], 
                    StyleBox["98.1200232963851`", {}, StripOnInput -> False]],
                     Annotation[#, 
                    Style[98.1200232963851, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}}, {
                AspectRatio -> 0.6666666666666666, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, 
                 AxesOrigin -> {0.6178343949044586, 3.5861914568177484`}, 
                 CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}, Frame -> True, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[FontSize -> 15, FontFamily -> "Helvetica"], 
                 FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], 
                    
                    Charting`ScaledFrameTicks[{Log, Exp}]}, {{{
                    1.0909918107370338`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}, {{
                    1.0909918107370338`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
                 GridLines -> {None, 
                   Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
                 Directive[
                   GrayLevel[0.4, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]], ImagePadding -> 40, ImageSize -> 
                 300, PlotLabel -> 
                 FormBox[
                  "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                 PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {None, 
                    Scaled[0.05]}}, Ticks -> {None, 
                   Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
                FormBox[
                 
                 TemplateBox[{"\"noisyInit (98.1 %)\""}, "SwatchLegend", 
                  DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.693]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    
                    Directive[], 
                    Directive[], FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False], TraditionalForm]& ), 
                  InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.693`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.693`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", #, "}"}]}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "None", "}"}], ",", 
                    RowBox[{"{", "Automatic", "}"}]}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", "]"}], ",", 
                    RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                TraditionalForm]},
              "Legended",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> Automatic, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              Editable->True,
              InterpretationFunction->(FormBox[
                RowBox[{"Legended", "(", 
                  RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
                TraditionalForm]& )], {960., -157.5}, {
             Center, Center}, {600., 300.}]}, {}},
          ContentSelectable->True,
          ImageSize->{1292., 327.},
          PlotRangePadding->{6, 5}]},
        {
         GraphicsBox[{{}, {InsetBox[
             GraphicsBox[{{}, {}, 
               
               DynamicModuleBox[{DynamicChart`click$26168$12090 = False, 
                DynamicChart`click$26173$12090 = False, 
                DynamicChart`click$26178$12090 = False, 
                DynamicChart`click$26183$12090 = False, 
                DynamicChart`click$26188$12090 = False, 
                DynamicChart`click$26193$12090 = False}, {
                 {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
                  0.5]}], {{{}, {
                    {RGBColor[
                    0.4549019607843137, 0.050980392156862744`, 
                    0.023529411764705882`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.9694194668154809, 
                    0.24540965213126545`}, {-0.9863698860000598, 
                    0.16454314933241349`}, {-0.9965866460072752, 
                    0.08255335850206244}, {-1., 
                    1.2246467991473532`*^-16}, {-2., 
                    2.4492935982947064`*^-16}, {-1.9931732920145504`, 
                    0.16510671700412488`}, {-1.9727397720001196`, 
                    0.32908629866482697`}, {-1.9388389336309617`, 
                    0.4908193042625309}}]},
                    
                    ImageSizeCache->{{213.7606933090101, 
                    263.2393066909899}, {-149.2393066909899, \
-121.7606933090101}}], {}},
                    StatusArea[#, 3.8104405469377163`]& ,
                    TagBoxNote->"3.8104405469377163"],
                    StyleBox["3.8104405469377163`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.8104405469377163`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26168$12090, 
                    FEPrivate`Not[DynamicChart`click$26168$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26168$12090, {{{1., 0}, {
                    0, 1.}}, {-0.1984650834184936, 0.024730763508035547`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$26168$12090}]]}, 
                    {RGBColor[0.6784313725490196, 0.3137254901960784, 0.], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.865146338638253, 
                    0.5015195038488787}, {-0.9077598947000464, 
                    0.41949013525250006`}, {-0.9426168853123156, 
                    0.3338763356755146}, {-0.9694194668154809, 
                    0.24540965213126545`}, {-1.9388389336309617`, 
                    0.4908193042625309}, {-1.8852337706246312`, 
                    0.6677526713510292}, {-1.8155197894000927`, 
                    0.8389802705050001}, {-1.730292677276506, 
                    1.0030390076977573`}}]},
                    
                    ImageSizeCache->{{216.7606933090101, 
                    268.2393066909899}, {-170.2393066909899, \
-131.7606933090101}}], {}},
                    StatusArea[#, 4.263339267954736]& ,
                    TagBoxNote->"4.263339267954736"],
                    StyleBox["4.263339267954736`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4.263339267954736, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26173$12090, 
                    FEPrivate`Not[DynamicChart`click$26173$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26173$12090, {{{1., 0}, {
                    0, 1.}}, {-0.18523563238985433`, 0.07541724267785688}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$26173$12090}]]}, 
                    {RGBColor[
                    0.9058823529411765, 0.6392156862745098, 
                    0.07058823529411765], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQrRqnbnIxerH918rzeSq/3tvfq+c6fY9z/X4np9mP
3n14b1+U9e/VYo8j+z8X8bLXznhvP3Fie6G934X9KR1Wzqs+vrO3nu36a6f/
tf0LHXfkiPx7ay/ff3zybck7+7M42I+KH3hjL3DS/7jy+Qf7Ly+cLXfS6rX9
UVc3keXpj/fXTOe3eFf40r73lIgD+4Wn+yP68xK+ZD63907c6uzN9GJ/Ssv1
6qfqT+1duy8HMfx8uX/Cj/XN0Rsf2X+adC3eff3r/TEnsxYW8TyA8n9D+R+g
6n9C1X+CmvcDat5XqH1fofZ9h7rnM9Q9P6Hu/QB17297CbB/3uzPBvvnj70F
2L/P9i8C+/evfS84PB5Aw+MfNLyuQMPrPzQ890PD8789JLw3Q8P7vz0Au5jS
EA==
                    "]]},
                    
                    ImageSizeCache->{{224.7606933090101, 
                    307.2393066909899}, {-211.2393066909899, \
-141.7606933090101}}], {}},
                    StatusArea[#, 16.6478350538722]& ,
                    TagBoxNote->"16.6478350538722"],
                    StyleBox["16.6478350538722`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[16.6478350538722, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26178$12090, 
                    FEPrivate`Not[DynamicChart`click$26178$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26178$12090, {{{1., 0}, {
                    0, 1.}}, {-0.09655340740361829, 0.17514976311360206`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$26178$12090}]]}, 
                    {RGBColor[
                    0.16470588235294117`, 0.41568627450980394`, 
                    0.11764705882352941`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJxTTMoPSmViYGCQAWIQPU1VSNPj0Dt7uQae8GXLLtpHmd6t0T3y1n5F4C6+
57XX7adU64m51b+x9zp7YKa77F37p4VG+6d9e2XPL+ltuMX6of2ME78qj+q+
tH9btNfl+P7H9meiPlwS0Hxuv+TaQ9GHIs/sA02KT7i+fWJfMXdtbqnpC/t5
S1bHb6l/ZL/rXBJjqcwr+/bcLGa3M/ftexQKqiOPvrZnDU6ua/S9ZX85vN/O
QOetfeWk+6a6E67Yf37bcXKx7zv7KZUdv+47n7X/Ms19KbP6e/u5Pyp+nVQ8
aN8uGn/Ka9t7e9U4dZOL0Yvtv1aez1P5BeNvhvL/Q9VfhKr/DzXvLtS8/1D7
nkDt+wd1zyuoe/5C3fse6t7fUP98gvrnF9S/X6D+/QENj+/Q8PgGDa+f0PD6
DA3PX9Dw/AgN7z/Q8H4LjY+/0Ph4bg+Jr3/Q+HpoDwD58OZe
                    "]]},
                    
                    ImageSizeCache->{{298.7606933090101, 
                    384.2393066909899}, {-211.2393066909899, \
-132.7606933090101}}], {}},
                    StatusArea[#, 19.265021892924892`]& ,
                    TagBoxNote->"19.265021892924892"],
                    StyleBox["19.265021892924892`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[19.265021892924892`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26183$12090, 
                    FEPrivate`Not[DynamicChart`click$26183$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26183$12090, {{{1., 0}, {0, 1.}}, {
                    0.12334862638624988`, 0.15743289481117134`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$26183$12090}]]}, 
                    {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQzRlX92jfpeP2FecmvblT8H7/rWgDEbb/F+2/H54j
WbH13f4F215Uzn9x3f70NtENz9e93R/BUTR90/S79s+2HkhbF/9m/5cPDJe0
6h/aByq7XmA4/Wq/yY2LwivYn9gf+trbtPfLi/2qPm9Wy8Y/s3+q8X9u8sNn
+6NvVFleqH9hL3Brw2n2aU/2Hzn1I70r5ZV9WuPCs+4Sj/Y7u/5Yt5Ljjf2e
rIV1lXfu7X+eMWmVZsZbe4YDlwJu2NzcL8ey58Pa+nf2e85w8RTEX96feyDH
u8vnvX3kmspj5ktP7Q/wLnU+eea9/ek1XuVrpuzZn3WA4Y3B//f27CFXn886
3rN/0UyWx66P39vni2cKT8neav9dya3ep/K9/Sm+dr9rssftp6kKaXocemcv
18ATvmzZRSj/H5T/EKr+v/05sPrr9hDz/tvXgs07ag+x77/982CQfXOg7vlv
vx/snjP788Du/W8fDnbvLah//tnvAvvn8f4XYP/+tf+3H+Tfl9Dw+GO/Cxwe
76Dh9cs+FRxen6Dh+cOeHxyeX/argcP7m/0TcHh/g8bHF2h8/Nj/DRxfH+0D
wPH1Cxqfb6Hx+Wf/EnB8P7c/BY7vv9D08BCaHv7th6SX69D08n8/APLTRQE=

                    "]]},
                    
                    ImageSizeCache->{{304.7606933090101, 
                    387.2393066909899}, {-151.2393066909899, \
-39.760693309010094`}}], {}},
                    StatusArea[#, 25.55747527293305]& ,
                    TagBoxNote->"25.55747527293305"],
                    StyleBox["25.55747527293305`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[25.55747527293305, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26188$12090, 
                    FEPrivate`Not[DynamicChart`click$26188$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26188$12090, {{{1., 0}, {0, 1.}}, {
                    0.17028670421263037`, -0.10489250863812981`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$26188$12090}]]}, 
                    {RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJwtkl9Ik2EUxofall6E2TC6FGNJF+vPRO0PDOaW60akm92IKy3W6qJAEisX
XRQhRJMuCin7oyEVhLoLGTV6kqiM0Iuh6xPW1LX0c8zv68O1xnJ7q7PzwsvL
gcN5n/N7nprOCyfOlOh0OtO/+/8tnp8wtBstptGnoUlDT+iXpOLmqaFz/Zkg
CulVS8NpFb6xs5pRmsaxup322LACV4XDUdsXRqSla+zDvXWsPbY+qXFLiMxP
DF2xpfCqUul5ro9hsPX4ySMvkqhvLpcvBZZh9EZuKbMytrVmD3sbEmhfSrp3
BVfwILAjU9G/An3UvDrnTaDt6PiB8WcyfFX73FNry9jiWdxffyOJ3EHbbu1q
DA8HnEpZbQqS89BSfkFCi7+s2exbx0hpU5vnTxhTM47bXX4FPzz2OyL6Gf4N
W9DgUmF6+f783q1vsKcbo5awiryz8nvpyHWog8Mzr4WKTleguy8xaXX/dlab
F1WUdFyLvw1/sl6evZuKXlRRTvVXay/Vgvs/cr+Aj+YN8DwBPf33BXX0n8A3
0rPAegTrjbPeAuZoH5n3yWOD9lXwiPbdZB4a88gxrzTzyjLPDPPMoIp4Z7Gd
eKdxn/zIoZH80NivTfZLwTz5mYdGfsqwk98FdJDfcc6D4DxIKOZFcF6mwYF6
V8zTROgvvN9YBg==
                    "]]},
                    
                    ImageSizeCache->{{213.7606933090101, 
                    319.2393066909899}, {-128.2393066909899, \
-37.760693309010094`}}], {}},
                    StatusArea[#, 27.017504939773307`]& ,
                    TagBoxNote->"27.017504939773307"],
                    StyleBox["27.017504939773307`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[27.017504939773307`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26193$12090, 
                    FEPrivate`Not[DynamicChart`click$26193$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26193$12090, {{{1., 0}, {
                    0, 1.}}, {-0.1275837805804032, -0.15402070942834778`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$26193$12090}]]}}}, {}}, {}}, {{{
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.9846508341849358`, 
                    0.24730763508035544`}, {-2.1831159176034296`, 
                    0.272038398588391}}], 
                    LineBox[{{-2.1831159176034296`, 0.272038398588391}, {-2.2,
                     0.272038398588391}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.9846508341849358, 0.24730763508035544},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"depthFirstWalk\\n(3.8 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    FontColor->GrayLevel[0]], {-2.2800000000000002, 0.272038398588391},
                     ImageScaled[{1, Rational[1, 2]}]]}}},
                    StatusArea[#, 3.8104405469377163`]& ,
                    TagBoxNote->"3.8104405469377163"],
                    StyleBox["3.8104405469377163`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.8104405469377163`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26168$12090, 
                    FEPrivate`Not[DynamicChart`click$26168$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26168$12090, {{{1., 0}, {
                    0, 1.}}, {-0.1984650834184936, 0.024730763508035547`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$26168$12090}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.8523563238985432`, 
                    0.7541724267785688}, {-2.0375919562883977`, 
                    0.8295896694564258}}], 
                    LineBox[{{-2.0375919562883977`, 
                    0.8295896694564258}, {-2.2, 0.8295896694564258}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.8523563238985432, 0.7541724267785688},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"finishToken\\n(4.3 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    FontColor->GrayLevel[0]], {-2.2800000000000002, 0.8295896694564258},
                     ImageScaled[{1, Rational[1, 2]}]]}}},
                    StatusArea[#, 4.263339267954736]& ,
                    TagBoxNote->"4.263339267954736"],
                    StyleBox["4.263339267954736`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4.263339267954736, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26173$12090, 
                    FEPrivate`Not[DynamicChart`click$26173$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26173$12090, {{{1., 0}, {
                    0, 1.}}, {-0.18523563238985433`, 0.07541724267785688}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$26173$12090}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-0.9655340740361827, 
                    1.7514976311360204`}, {-1.0620874814398011`, 
                    1.9266473942496227`}}], 
                    LineBox[{{-1.0620874814398011`, 
                    1.9266473942496227`}, {-2.2, 1.9266473942496227`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-0.9655340740361827, 1.7514976311360204},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"checkTokenLength\\n(16.6 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    FontColor->GrayLevel[0]], {-2.2800000000000002, 1.9266473942496227},
                     ImageScaled[{1, Rational[1, 2]}]]}}},
                    StatusArea[#, 16.6478350538722]& ,
                    TagBoxNote->"16.6478350538722"],
                    StyleBox["16.6478350538722`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[16.6478350538722, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26178$12090, 
                    FEPrivate`Not[DynamicChart`click$26178$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26178$12090, {{{1., 0}, {
                    0, 1.}}, {-0.09655340740361829, 0.17514976311360206`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$26178$12090}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{1.2334862638624988`, 
                    1.5743289481117133`}, {1.3568348902487488`, 
                    1.7317618429228847`}}], 
                    LineBox[{{1.3568348902487488`, 1.7317618429228847`}, {2.2,
                     1.7317618429228847`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{1.2334862638624988, 1.5743289481117133},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"isOperatorOrSeparator\\n(19.3 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    FontColor->GrayLevel[0]], {2.2800000000000002, 1.7317618429228847},
                     ImageScaled[{0, Rational[1, 2]}]]}}},
                    StatusArea[#, 19.265021892924892`]& ,
                    TagBoxNote->"19.265021892924892"],
                    StyleBox["19.265021892924892`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[19.265021892924892`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26183$12090, 
                    FEPrivate`Not[DynamicChart`click$26183$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26183$12090, {{{1., 0}, {0, 1.}}, {
                    0.12334862638624988`, 0.15743289481117134`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$26183$12090}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{
                    1.7028670421263037`, -1.048925086381298}, {
                    1.8731537463389343`, -1.1538175950194278`}}], 
                    LineBox[{{1.8731537463389343`, -1.1538175950194278`}, {
                    2.2, -1.1538175950194278`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{1.7028670421263037, -1.048925086381298},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"machtimeToNanoseconds\\n(25.6 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    FontColor->GrayLevel[0]], {2.2800000000000002, -1.1538175950194278},
                     ImageScaled[{0, Rational[1, 2]}]]}}},
                    StatusArea[#, 25.55747527293305]& ,
                    TagBoxNote->"25.55747527293305"],
                    StyleBox["25.55747527293305`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[25.55747527293305, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26188$12090, 
                    FEPrivate`Not[DynamicChart`click$26188$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26188$12090, {{{1., 0}, {0, 1.}}, {
                    0.17028670421263037`, -0.10489250863812981`}}, {{1, 0}, {
                    0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$26188$12090}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{-1.275837805804032, -1.5402070942834776`}, \
{-1.4034215863844355`, -1.6942278037118255`}}], 
                    LineBox[{{-1.4034215863844355`, -1.6942278037118255`}, \
{-2.2, -1.6942278037118255`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.275837805804032, -1.5402070942834776},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"cur\\n(27.0 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    FontColor->GrayLevel[0]], {-2.2800000000000002, -1.6942278037118255},
                     ImageScaled[{1, Rational[1, 2]}]]}}},
                    StatusArea[#, 27.017504939773307`]& ,
                    TagBoxNote->"27.017504939773307"],
                    StyleBox["27.017504939773307`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[27.017504939773307`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$26193$12090, 
                    FEPrivate`Not[DynamicChart`click$26193$12090]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$26193$12090, {{{1., 0}, {
                    0, 1.}}, {-0.1275837805804032, -0.15402070942834778`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$26193$12090}]]}, {}}, {}}},
                DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
              ContentSelectable->False,
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImagePadding->{{150, 150}, {0, 0}},
              ImageSize->{600, 300},
              LabelStyle->{
                GrayLevel[0], FontFamily -> "Arial"},
              
              PlotLabel->FormBox[
               "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm],
              PlotRange->{{-2.4, 2.4}, {-2.4, 2.4}},
              PlotRangePadding->Scaled[0.1],
              Ticks->None], {320., -157.5}, 
             ImageScaled[{0.5, 0.5}], {600, 300}], InsetBox[
             TemplateBox[{GraphicsBox[{{
                  Opacity[0], 
                  
                  PointBox[{0.5160877513711151, 
                   0.3377448115715893}]}, {{}, {{{}, {{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.6343692870201096, 0.3377448115715893}, {
                    1.5484460694698354`, 1.3377448115715893`}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 3.8104405469377163`]& , TagBoxNote -> 
                    "3.8104405469377163"], 
                    StyleBox[
                    "3.8104405469377163`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[3.8104405469377163`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.6343692870201096`, 0.3377448115715893}, {
                    2.5484460694698354`, 1.4500527189360752`}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 4.263339267954736]& , TagBoxNote -> 
                    "4.263339267954736"], 
                    StyleBox[
                    "4.263339267954736`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[4.263339267954736, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.6343692870201094`, 0.3377448115715893}, {
                    3.5484460694698354`, 2.812280181177774}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 16.6478350538722]& , TagBoxNote -> 
                    "16.6478350538722"], 
                    StyleBox["16.6478350538722`", {}, StripOnInput -> False]],
                     Annotation[#, 
                    Style[16.6478350538722, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{3.6343692870201094`, 0.3377448115715893}, {
                    4.548446069469835, 2.958291114486761}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 19.265021892924892`]& , TagBoxNote -> 
                    "19.265021892924892"], 
                    StyleBox[
                    "19.265021892924892`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[19.265021892924892`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{4.634369287020109, 0.3377448115715893}, {
                    5.548446069469835, 3.240929848141298}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 25.55747527293305]& , TagBoxNote -> 
                    "25.55747527293305"], 
                    StyleBox[
                    "25.55747527293305`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[25.55747527293305, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5.634369287020109, 0.3377448115715893}, {
                    6.548446069469835, 3.296484987031229}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 27.017504939773307`]& , TagBoxNote -> 
                    "27.017504939773307"], 
                    StyleBox[
                    "27.017504939773307`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[27.017504939773307`, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}}, {
                AspectRatio -> 0.6666666666666666, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, 
                 AxesOrigin -> {0.5160877513711151, 0.3377448115715893}, 
                 CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}, Frame -> True, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[FontSize -> 15, FontFamily -> "Helvetica"], 
                 FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], 
                    
                    Charting`ScaledFrameTicks[{Log, Exp}]}, {{{
                    1.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    2.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    3.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    4.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    5.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    6.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}, {{
                    1.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    2.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    3.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    4.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    5.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    6.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
                 GridLines -> {None, 
                   Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
                 Directive[
                   GrayLevel[0.4, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]], ImagePadding -> 40, ImageSize -> 
                 300, PlotLabel -> 
                 FormBox[
                  "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                 PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {None, 
                    Scaled[0.05]}}, Ticks -> {None, 
                   Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
                FormBox[
                 TemplateBox[{
                  "\"depthFirstWalk (3.8 %)\"", "\"finishToken (4.3 %)\"", 
                   "\"checkTokenLength (16.6 %)\"", 
                   "\"isOperatorOrSeparator (19.3 %)\"", 
                   "\"machtimeToNanoseconds (25.6 %)\"", "\"cur (27.0 %)\""}, 
                  "SwatchLegend", DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    
                    Directive[], 
                    Directive[], FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False], TraditionalForm]& ), 
                  InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9965728, 0.58382944, 0.22525344], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6643818666666668, 0.3892196266666667, 
                    0.15016896000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9965728, 0.58382944, 0.22525344]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8704000000000001, 0.50272, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.5802666666666667, 0.33514666666666665`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8704000000000001, 0.50272, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.49372288, 0.31936, 0.27266112000000015`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.74058432, 0.47903999999999997, \
0.4089916800000002]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.74058432, 0.47903999999999997`, 
                    0.4089916800000002]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.42680576000000003`, 0.3325866666666667, 0.49611296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.64020864, 0.49888000000000005, 0.74416944]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.3328, 0.37013333333333337`, 0.5539536], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "None", "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", 
                    ",", "Automatic", ",", "Automatic", ",", "Automatic"}], 
                    "}"}]}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", "]"}], ",", 
                    RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                TraditionalForm]},
              "Legended",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> Automatic, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              Editable->True,
              InterpretationFunction->(FormBox[
                RowBox[{"Legended", "(", 
                  RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
                TraditionalForm]& )], {960., -157.5}, {
             Center, Center}, {600., 300.}]}, {}},
          ContentSelectable->True,
          ImageSize->{1292., 327.},
          PlotRangePadding->{6, 5}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     StyleBox["\<\"Changeset:    120:06cb6ed905cb8e98f3954e70e90db4c670d05f43\
\"\>",
      StripOnInput->False,
      FontSize->Large,
      FontWeight->Bold,
      Background->RGBColor[0.87, 0.94, 1]]},
    {
     StyleBox["\<\"Noisy Compiler on helloWorld.n\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0.5, 0],
      FrontFaceColor->RGBColor[1, 0.5, 0],
      BackFaceColor->RGBColor[1, 0.5, 0],
      GraphicsColor->RGBColor[1, 0.5, 0],
      FontFamily->"Helvetica Neue",
      FontSize->Large,
      FontWeight->Bold,
      FontColor->RGBColor[1, 0.5, 0]]},
    {
     TagBox[
      TagBox[GridBox[{
         {
          TagBox[
           StyleBox["\<\"Function\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica Neue",
            FontWeight->Bold],
           HoldForm], 
          TagBox[
           StyleBox["\<\"% of Runtime\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica Neue",
            FontWeight->Bold],
           HoldForm]},
         {"\<\"noisyRunPasses\"\>", "0.004303503495260406`"},
         {"\<\"noisyParserSemanticError\"\>", "0.004620228683504041`"},
         {"\<\"noisyIrPassHelperSymbolTableSize\"\>", 
          "0.0064295213213458125`"},
         {"\<\"noisySymbolTableCloseScope\"\>", "0.007553895739610721`"},
         {"\<\"noisySymbolTableAllocScope\"\>", "0.011667364121924945`"},
         {"\<\"noisySymbolTableSymbolForIdentifier\"\>", 
          "0.018805558051965893`"},
         {"\<\"noisyTimestampsInit\"\>", "0.027012699492329113`"},
         {"\<\"noisyLexGet\"\>", "0.09652991924695419`"},
         {"\<\"noisyLexPut\"\>", "0.10004160977160552`"},
         {"\<\"noisyIrPassHelperIrSize\"\>", "0.10557638243616305`"},
         {"\<\"noisyLexAllocateSourceInfo\"\>", "0.11743774073588722`"},
         {"\<\"noisyLexAllocateToken\"\>", "0.12200254251144861`"},
         {"\<\"noisyConsolePrintBuffers\"\>", "0.13041951438902327`"},
         {"\<\"genNoisyIrNode\"\>", "0.1782964856569019`"},
         {"\<\"flexfree\"\>", "0.19710204370886777`"},
         {"\<\"noisyLexPeek\"\>", "0.7125881238347977`"},
         {"\<\"noisyInit\"\>", "96.05375855801356`"},
         {"\<\"Other\"\>", "2.105854308788847`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[2.0999999999999996`]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       {None, OutputFormsDump`HeadedColumns}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$, TableHeadings -> {None, {
           Style["Function", Bold, FontFamily -> "Helvetica Neue"], 
           Style["% of Runtime", Bold, FontFamily -> "Helvetica Neue"]}}]]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.6809665491756*^9, 3.680967240631723*^9, 
  3.68097259780435*^9, 3.680972758024143*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{"Parallelize", "[", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"plotForDirectory", "[", 
     RowBox[{
     "\"\</Volumes/doos/Noisy-lang-compiler-github-clone/statistics\>\"", 
      ",", "\"\<DTraceFcall-noisy-darwin-EN\>\""}], "]"}], 
    "\[IndentingNewLine]", "}"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.626703574389592*^9, 3.626703824662992*^9}, {
   3.626703863420491*^9, 3.62670386658082*^9}, {3.626703977238913*^9, 
   3.6267040601834583`*^9}, {3.62670418589363*^9, 3.626704264216775*^9}, 
   3.626704305718095*^9, {3.6267043473251677`*^9, 3.626704356804401*^9}, {
   3.6267044824816313`*^9, 3.626704658420311*^9}, {3.6267047371812363`*^9, 
   3.626704878762599*^9}, {3.626704911615383*^9, 3.6267049147309713`*^9}, {
   3.626705044342774*^9, 3.626705062703288*^9}, {3.626705098692824*^9, 
   3.626705246764591*^9}, {3.6267054731294193`*^9, 3.626705505808573*^9}, {
   3.6267055773383217`*^9, 3.626705725399749*^9}, {3.62670576748829*^9, 
   3.626705774069665*^9}, {3.626705813277143*^9, 3.626705917170879*^9}, {
   3.626705967066409*^9, 3.626706164873584*^9}, {3.6267062355835648`*^9, 
   3.626706258249316*^9}, {3.626706350129668*^9, 3.626706367679886*^9}, {
   3.626706404367313*^9, 3.626706504516005*^9}, {3.626706710516631*^9, 
   3.6267067928648863`*^9}, {3.626706865823491*^9, 3.6267068911138353`*^9}, {
   3.626707137164308*^9, 3.626707480866455*^9}, {3.626708241731043*^9, 
   3.6267083470635433`*^9}, {3.626708390163642*^9, 3.626708415792049*^9}, {
   3.626708462714834*^9, 3.626708466505769*^9}, {3.6267085501847553`*^9, 
   3.6267085667330723`*^9}, 3.626709293964591*^9, {3.626713510694046*^9, 
   3.626713525929335*^9}, {3.626713560655408*^9, 3.6267135610047092`*^9}, {
   3.6267140642435627`*^9, 3.626714088317466*^9}, {3.626714514147727*^9, 
   3.626714514752234*^9}, {3.6267145902986727`*^9, 3.626714595292841*^9}, 
   3.626715140596546*^9, {3.6267179385599613`*^9, 3.6267179481547823`*^9}, {
   3.651254432018917*^9, 3.6512544372833157`*^9}, {3.651515039129653*^9, 
   3.651515056542281*^9}, 3.651515971034904*^9, {3.651613347605859*^9, 
   3.651613347942087*^9}, 3.6537379644536047`*^9, 3.653738698664823*^9, {
   3.65383671066984*^9, 3.6538367247634773`*^9}, 3.654032818441709*^9, {
   3.654032851967832*^9, 3.65403293795383*^9}, {3.654033001765004*^9, 
   3.654033149631423*^9}, {3.654033312039791*^9, 3.654033384963128*^9}, {
   3.654033879870883*^9, 3.654033964402644*^9}, {3.654034058340626*^9, 
   3.654034088424224*^9}, 3.654034139224262*^9, {3.65403961550764*^9, 
   3.6540396205554113`*^9}, {3.657228538588633*^9, 3.657228622116332*^9}, {
   3.657228659386847*^9, 3.657228694119372*^9}, {3.657228830679853*^9, 
   3.657228830777151*^9}, {3.657228910223144*^9, 3.657228938660428*^9}, {
   3.680901190383582*^9, 3.680901206757371*^9}, {3.680966004518374*^9, 
   3.680966020650119*^9}, 3.680966154524509*^9, 3.680966185996366*^9, {
   3.6809663233903513`*^9, 3.680966326917395*^9}, {3.6809665294944057`*^9, 
   3.680966555357402*^9}, 3.6809672015256453`*^9, 3.680967287396743*^9, 
   3.680972559442329*^9, {3.6809727652428617`*^9, 3.680972765586381*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"DTraceFcall-noisy-darwin-EN\"\>",
          StripOnInput->False,
          LineColor->RGBColor[1, 0.5, 0],
          FrontFaceColor->RGBColor[1, 0.5, 0],
          BackFaceColor->RGBColor[1, 0.5, 0],
          GraphicsColor->RGBColor[1, 0.5, 0],
          FontFamily->"Helvetica Neue",
          FontSize->Large,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0.5, 0]]},
        {
         TemplateBox[{GraphicsBox[
            RectangleBox[{0, 0}, {0, 0}], ImageSize -> Tiny],GraphicsBox[
            RectangleBox[{0, 0}, {0, 0}], ImageSize -> Tiny],
           GraphicsBox[{{}, {{{}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6], 
                 PointSize[0.02]], 
                PointBox[CompressedData["
1:eJw1UmlIVGEUHa1EtAIjxaIGzWzKaBoyckTI4zqU2Kxvmc00tXAhczSsTHiW
U7mAqRBhZKY/pELJFkXJekSJRYhhkgqWYUFihYkgqJNt333weJzvfOfce899
occKTNneCoUi+s/79/vvkc0oaYgr/qoV8P8gDcoTYx3RZ0WGBaxs3DQZHM54
2FFz3tLK2xkPDiN8mmXLMMewE+H1hetnskhvQlZ9Yufa94cY1kOTUfXxaWgi
w1akq/yPFzaQnxk3h6bUJX3MT8HhqJejtZH8ZR4xB2NHtc+Jd+KDKtHhkkgv
oHlW3ZT6iu47Udo+6WmrY7wsYPmu+PNyF/XrwMi06fZ0MeMlA+L3vdEMX0pi
/gZodtX0+nanMuyA2xU2Z8+m+Wwo8ErfL24gvRG3ZhcO6B+weSUBeT1JceUR
PMMmZKxpv7auJ5n1Y8JS0bYfTTvI34hvy5WrUu4wPWxQCf5avxTyF1E7F9GV
W8n2IdmhdJ/Rh1HeEo/vlTmnjUXE61E7PxrYslvH/EU0547bhCE2v2TBw7zs
6qh3lJcF22Myt8b3EzbAuzxI6WxnetkGT6fWkU/9yCLil66GjFVRHnZ8nlgd
fKGU9mFBgtTbu/MT1ePwZfPK/WqO8jfCdyYoNifCyPRmDEV5i32awwxb4Anl
TtVN0X0RmfOLPjd0LE/Zjpxz95QBb6keD7dxyZM3SPcN6Ps13xjpYnnDimf5
rzsWA6l/Dq64PTMBE/Q/8RjYO6hTD9D8VoT4XKmoKKN8rRCyro+GuQnb0OZ1
8onKj+qbUJ8cWBapS2G8GS396i53AtuHbMSjl+N114sMjHfixcKRxxe7RfwG
2K/9VQ==
                 "]]}, {}}}, {}, {}, {{}, {}}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.05]}}, AxesOrigin -> {61.09375000000001, 0}, 
             PlotRange -> {{62., 120.}, {0, 99.26666990991511}}, 
             PlotRangeClipping -> True, ImagePadding -> {{80, 0}, {50, 10}}, 
             DisplayFunction -> Identity, AspectRatio -> 0.5555555555555556, 
             Axes -> {False, False}, AxesLabel -> {None, None}, 
             AxesOrigin -> {61.09375000000001, 0}, DisplayFunction :> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{
                FormBox[
                "\"Compile Time Spent in Noisy routines (%)\"", 
                 TraditionalForm], None}, {
                FormBox["\"Changeset ID\"", TraditionalForm], None}}, 
             FrameStyle -> 
             Directive[FontSize -> 16, FontFamily -> "Helvetica"], 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 0}, {50, 10}}, 
             ImageSize -> 600, 
             Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 1, 
                    2][#]& )[
                    Part[#, 1]], 
                   (
                   Part[{{Identity, Identity}, {Identity, Identity}}, 2, 
                    2][#]& )[
                    Part[#, 2]]}& )}}, 
             PlotRange -> {{62., 120.}, {0, 99.26666990991511}}, 
             PlotRangeClipping -> True, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.02], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.657228970221929*^9, 3.6572292092606077`*^9, 3.657229758432919*^9, 
   3.680901175025176*^9, 3.6809012076891527`*^9, 3.680965757975914*^9, {
   3.680965873432865*^9, 3.680965896281567*^9}, 3.680966714484202*^9, 
   3.680972440852666*^9, 3.680972566474296*^9, 3.680972603591796*^9, 
   3.680972707673132*^9, 3.680972772060176*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1699, 1155},
WindowMargins->{{Automatic, 81}, {Automatic, 0}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 587, 16, 139, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1170, 40, 70285, 1537, 6942, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[71492, 1582, 177, 3, 52, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[CellGroupData[{
Cell[71694, 1589, 5410, 100, 201, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[77107, 1691, 127948, 2578, 1673, "Output"],
Cell[CellGroupData[{
Cell[205080, 4273, 3207, 47, 75, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[208290, 4322, 4883, 103, 429, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

