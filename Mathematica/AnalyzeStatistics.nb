(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    372303,       7701]
NotebookOptionsPosition[    371430,       7669]
NotebookOutlinePosition[    371808,       7686]
CellTagsIndexPosition[    371765,       7683]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 StyleBox["Analyze statistics output by ",
  FontSize->36],
 StyleBox["Noisy",
  FontSize->36,
  FontWeight->"Bold"],
 StyleBox[" Compiler\n\n",
  FontSize->36],
 StyleBox["psm@mit.edu",
  FontSize->18]
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.626708771771656*^9, 3.626708811297825*^9}, {
  3.626718013799014*^9, 3.626718030628262*^9}, {3.654023079962606*^9, 
  3.6540231644605494`*^9}, {3.654033544896619*^9, 3.654033556870125*^9}, {
  3.657228529153167*^9, 3.6572285351670923`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"prefixColumn", "[", 
     RowBox[{"statistics_", ",", " ", "prefix_", ",", " ", "column_"}], "]"}],
     ":=", 
    RowBox[{"Total", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "column", "]"}], "]"}], "&"}], "/@", " ", 
      RowBox[{"Select", "[", 
       RowBox[{"statistics", ",", " ", 
        RowBox[{
         RowBox[{"StringMatchQ", "[", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
           RowBox[{"prefix", "<>", "\"\<*\>\""}]}], "]"}], "&"}]}], "]"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"doPlot", "[", 
     RowBox[{"title_", ",", "rawLabels_", ",", " ", "data_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"piePlot", ",", " ", "barPlot", ",", " ", "labels"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Rewrite", " ", "\"\<skank\>\"", " ", "to", " ", "\"\<sk\>\"", " ", 
        "for", " ", "plotting"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"labels", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"StringReplace", "[", 
           RowBox[{"#", ",", 
            RowBox[{"\"\<skank\>\"", "->", "\"\<sk\>\""}]}], "]"}], "&"}], "/@",
          "rawLabels"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       
       RowBox[{"piePlot", " ", "=", " ", 
        RowBox[{"PieChart", "[", 
         RowBox[{"data", ",", "\[IndentingNewLine]", 
          RowBox[{"ChartLabels", "\[Rule]", 
           RowBox[{"Placed", "[", " ", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"Style", "[", 
                RowBox[{"#", ",", " ", 
                 RowBox[{"FontSize", "\[Rule]", "14"}], ",", " ", "Gray"}], 
                "]"}], "&"}], "/@", "labels"}], ",", 
             "\"\<VerticalCallout\>\""}], "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"SectorOrigin", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "1"}], "}"}]}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLabel", "\[Rule]", "title"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Ticks", "\[Rule]", "None"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ChartStyle", "\[Rule]", " ", "16"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ChartStyle", "\[Rule]", " ", 
           RowBox[{"Directive", "[", 
            RowBox[{"\"\<AvocadoColors\>\"", ",", " ", 
             RowBox[{"FontSize", "\[Rule]", " ", "14"}], ",", " ", 
             RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"600", ",", "300"}], "}"}]}], ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"ImagePadding", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"150", ",", "150"}], "}"}], " ", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"barPlot", " ", "=", " ", 
        RowBox[{"BarChart", "[", 
         RowBox[{
          RowBox[{"{", "data", "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ChartLegends", "\[Rule]", " ", 
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"StringReplace", "[", 
               RowBox[{"#", ",", " ", 
                RowBox[{"\"\<\\n\>\"", "\[Rule]", " ", "\"\< \>\""}]}], "]"}],
               "&"}], ",", " ", "labels", ",", " ", 
             RowBox[{"{", "1", "}"}]}], "]"}]}], " ", ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"ScalingFunctions", "\[Rule]", "\"\<Log\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotLabel", "\[Rule]", "title"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PlotTheme", "\[Rule]", " ", "\"\<Detailed\>\""}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"ChartStyle", "\[Rule]", " ", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"FontSize", "\[Rule]", " ", "15"}], ",", " ", 
               RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
              "]"}]}], ","}], "*)"}], " ", "\[IndentingNewLine]", 
          RowBox[{"FrameStyle", "\[Rule]", " ", 
           RowBox[{"Directive", "[", 
            RowBox[{
             RowBox[{"FontSize", "\[Rule]", " ", "15"}], ",", " ", 
             RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
            "]"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"50", ",", "0"}], "}"}], " ", ",", 
               RowBox[{"{", 
                RowBox[{"150", ",", "150"}], "}"}]}], "}"}]}], ","}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"ImagePadding", "\[Rule]", "40"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", "300"}], ",", "\[IndentingNewLine]", 
          RowBox[{"AspectRatio", "\[Rule]", 
           RowBox[{"1", "/", "1.5"}]}]}], "]"}]}], ";", "\[IndentingNewLine]",
        "\[IndentingNewLine]", 
       RowBox[{"GraphicsRow", "[", 
        RowBox[{"{", 
         RowBox[{"piePlot", ",", " ", "barPlot"}], "}"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", "   ", 
   RowBox[{
    RowBox[{"TODO", ":", " ", 
     RowBox[{
     "This", " ", "function", " ", "may", " ", "currently", " ", "be", " ", 
      "overly", " ", "sensitive", " ", "to", " ", "extraneous", " ", 
      RowBox[{"newlines", ".", "\[IndentingNewLine]", "One"}], " ", "way", 
      " ", "to", " ", "get", " ", "around", " ", "this", " ", "would", " ", 
      "be", " ", "to", " ", "remove", " ", "all", " ", 
      RowBox[{"Null", " ", "/", " ", 
       RowBox[{"{", "}"}]}], " ", "entries"}]}], ",", " ", 
    RowBox[{
    "and", " ", "then", "\[IndentingNewLine]", "  ", "process", " ", "the", 
     " ", "data", " ", "based", " ", "on", " ", 
     RowBox[{"that", "."}]}]}], "\[IndentingNewLine]", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"getDataSubsetForTag", "[", 
     RowBox[{"data_", ",", " ", "tag_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"startIndex", ",", " ", "endIndex"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"startIndex", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"data", ",", "tag"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "startIndex", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"endIndex", " ", "=", " ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"data", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"startIndex", "+", "2"}], ";;"}], "]"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], " ", "\[Equal]", " ", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", "\t\t\t", 
          RowBox[{"Length", "[", "data", "]"}], ",", "\[IndentingNewLine]", 
          "\t\t\t", 
          RowBox[{"startIndex", " ", "+", " ", 
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"data", "[", 
                RowBox[{"[", 
                 RowBox[{
                  RowBox[{"startIndex", "+", "2"}], ";;"}], "]"}], "]"}], ",", 
               RowBox[{"{", "}"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}]}]}], " ", "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "endIndex", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"data", "[", 
           RowBox[{"[", 
            RowBox[{"startIndex", ";;", "endIndex"}], "]"}], "]"}], "]"}], 
         ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"data", "[", 
        RowBox[{"[", 
         RowBox[{"startIndex", ";;", "endIndex"}], "]"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dtraceStatsForFile", "[", 
     RowBox[{"filename_", ",", " ", "tag_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rawFile", ",", " ", "dtraceResidencyNanosecondsTable", ",", " ", 
        "dtraceResidencyNanosecondsTotal", ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubset", ",", " ", 
        "dtraceResidencyNanosecondsNoisySubsetTotal", ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentages", ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest"}], 
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rawFile", " ", "=", " ", 
        RowBox[{"Import", "[", 
         RowBox[{"filename", ",", " ", "\"\<Table\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"rawFile", ",", "tag"}], "]"}], "]"}], " ", "\[Equal]", 
          " ", "0"}], ",", " ", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"getDataSubsetForTag", "[", 
           RowBox[{"rawFile", ",", " ", "tag"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], "\[Equal]", " ", "2"}], " ", "&&",
             " ", 
            RowBox[{"NumberQ", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<dtraceResidencyNanosecondsTable == \>\"", ",", " ", 
           RowBox[{"dtraceResidencyNanosecondsTable", "//", "TableForm"}]}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsTotal", " ", "=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
          "dtraceResidencyNanosecondsTable"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsTableNoisySubset", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"dtraceResidencyNanosecondsTable", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*Noisy*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*noisy*\>\""}], 
              "]"}], " ", "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*flex*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*moveHead*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*nextToken*\>\""}], 
              "]"}], "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*skank*\>\""}],
               "]"}]}], ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsNoisySubsetTotal", " ", "=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
          "dtraceResidencyNanosecondsTableNoisySubset"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableNoisySubsetPercentages", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"100", "*", 
             RowBox[{"N", "[", 
              FractionBox[
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], 
               "dtraceResidencyNanosecondsTotal"], "]"}]}]}], "}"}], "&"}], "/@",
          "dtraceResidencyNanosecondsTableNoisySubset"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", " ", 
        "=", " ", 
        RowBox[{"Append", "[", 
         RowBox[{
         "dtraceResidencyNanosecondsTableNoisySubsetPercentages", ",", " ", 
          RowBox[{"{", 
           RowBox[{"\"\<Other\>\"", ",", 
            RowBox[{"100", "*", 
             RowBox[{"N", "[", 
              FractionBox[
               RowBox[{"(", 
                RowBox[{
                "dtraceResidencyNanosecondsTotal", "-", 
                 "dtraceResidencyNanosecondsNoisySubsetTotal"}], ")"}], 
               "dtraceResidencyNanosecondsTotal"], "]"}]}]}], " ", "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"dtraceNoisyOnlyStatsForFile", "[", 
     RowBox[{"filename_", ",", " ", "tag_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "rawFile", ",", " ", "dtraceResidencyNanosecondsTable", ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubset", ",", " ", 
        "dtraceResidencyNanosecondsNoisySubsetTotal", ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentages"}], "}"}], ",",
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rawFile", " ", "=", " ", 
        RowBox[{"Import", "[", 
         RowBox[{"filename", ",", " ", "\"\<Table\>\""}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"rawFile", ",", "tag"}], "]"}], "]"}], " ", "\[Equal]", 
          " ", "0"}], ",", " ", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsTable", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{
          RowBox[{"getDataSubsetForTag", "[", 
           RowBox[{"rawFile", ",", " ", "tag"}], "]"}], ",", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "#", "]"}], "\[Equal]", " ", "2"}], " ", "&&",
             " ", 
            RowBox[{"NumberQ", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"\"\<dtraceResidencyNanosecondsTable == \>\"", ",", " ", 
           RowBox[{"dtraceResidencyNanosecondsTable", "//", "TableForm"}]}], 
          "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
       
       RowBox[{"dtraceResidencyNanosecondsTableNoisySubset", " ", "=", " ", 
        RowBox[{"Select", "[", 
         RowBox[{"dtraceResidencyNanosecondsTable", ",", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*Noisy*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*noisy*\>\""}], 
              "]"}], " ", "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*flex*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*moveHead*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*nextToken*\>\""}], 
              "]"}], "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*skank*\>\""}],
               "]"}]}], ")"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"dtraceResidencyNanosecondsNoisySubsetTotal", " ", "=", " ", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
          "dtraceResidencyNanosecondsTableNoisySubset"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableNoisySubsetPercentages", " ", "=", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
            RowBox[{"100", "*", 
             RowBox[{"N", "[", 
              FractionBox[
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], 
               "dtraceResidencyNanosecondsNoisySubsetTotal"], "]"}]}]}], 
           "}"}], "&"}], "/@", 
         "dtraceResidencyNanosecondsTableNoisySubset"}]}], ";", 
       "\[IndentingNewLine]", 
       "dtraceResidencyNanosecondsTableNoisySubsetPercentages"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dtraceCairoOnlyStatsForFile", "[", 
    RowBox[{"filename_", ",", " ", "tag_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rawFile", ",", " ", "dtraceResidencyNanosecondsTable", ",", " ", 
       "dtraceResidencyNanosecondsTableCairoSubset", ",", " ", 
       "dtraceResidencyNanosecondsCairoSubsetTotal", ",", " ", 
       "dtraceResidencyNanosecondsTableCairoSubsetPercentages"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rawFile", " ", "=", " ", 
       RowBox[{"Import", "[", 
        RowBox[{"filename", ",", " ", "\"\<Table\>\""}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"rawFile", ",", "tag"}], "]"}], "]"}], " ", "\[Equal]", 
         " ", "0"}], ",", " ", 
        RowBox[{"Return", "[", 
         RowBox[{"{", "}"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dtraceResidencyNanosecondsTable", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{"getDataSubsetForTag", "[", 
          RowBox[{"rawFile", ",", " ", "tag"}], "]"}], ",", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "#", "]"}], "\[Equal]", " ", "2"}], " ", "&&",
            " ", 
           RowBox[{"NumberQ", "[", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", 
         RowBox[{"\"\<dtraceResidencyNanosecondsTable == \>\"", ",", " ", 
          RowBox[{"dtraceResidencyNanosecondsTable", "//", "TableForm"}]}], 
         "]"}], ";"}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dtraceResidencyNanosecondsTableCairoSubset", " ", "=", " ", 
       RowBox[{"Select", "[", 
        RowBox[{"dtraceResidencyNanosecondsTable", ",", " ", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*Noisy*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*noisy*\>\""}], 
              "]"}], " ", "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*flex*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*moveHead*\>\""}], 
              "]"}], "||", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<*nextToken*\>\""}], 
              "]"}], "||", " ", 
             RowBox[{"StringMatchQ", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<*skank*\>\""}],
               "]"}]}], ")"}]}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]",
       "\[IndentingNewLine]", 
      RowBox[{"dtraceResidencyNanosecondsCairoSubsetTotal", " ", "=", " ", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
         "dtraceResidencyNanosecondsTableCairoSubset"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
      "dtraceResidencyNanosecondsTableCairoSubsetPercentages", " ", "=", " ", 
       
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "[", 
            RowBox[{"[", "1", "]"}], "]"}], ",", " ", 
           RowBox[{"100", "*", 
            RowBox[{"N", "[", 
             FractionBox[
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], 
              "dtraceResidencyNanosecondsCairoSubsetTotal"], "]"}]}]}], "}"}],
          "&"}], "/@", "dtraceResidencyNanosecondsTableCairoSubset"}]}], ";", 
      "\[IndentingNewLine]", 
      "dtraceResidencyNanosecondsTableCairoSubsetPercentages"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"plotChangeSet", "[", 
     RowBox[{"filename_", ",", " ", "tag_"}], "]"}], ":=", " ", 
    RowBox[{"Module", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "callCountPlot", ",", " ", "callTimePlot", ",", "statistics", ",", 
        "changeset", ",", "totalCalls", ",", "noisyIrPassCalls", ",", 
        "noisyIrHelperCalls", ",", "genCalls", ",", "parseCalls", ",", 
        "unknownCalls", ",", "totalTime", ",", "noisyIrPassTime", ",", 
        "noisyIrHelperTime", ",", "genTime", ",", "parseTime", ",", 
        "unknownTime", ",", "labels", ",", "callCountData", ",", "timeData", 
        ",", "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", 
        ",", " ", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRestGreaterTh\
an1percentSubset", ",", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentages", ",", 
        "dtraceResidencyNanosecondsTableNoisySubsetPercentagesGreaterThan1perc\
entSubset", ",", "dtraceResidencyNanosecondsTableCairoSubsetPercentages", ",",
         "dtraceResidencyNanosecondsTableCairoSubsetPercentagesGreaterThan1per\
centSubset", ",", "changesetDtracePlot", ",", "changesetNoisyOnlyDtracePlot", 
        ",", "changesetCairoOnlyDtracePlot"}], "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", "\t", 
       RowBox[{
        RowBox[{"TODO", ":", " ", 
         RowBox[{
          RowBox[{
          "we", " ", "should", " ", "start", " ", "dumping", " ", "the", " ", 
           "noisy"}], "-", 
          RowBox[{
          "internal", " ", "stats", " ", "for", " ", "all", " ", "the", " ", 
           "test", " ", 
           RowBox[{"programs", ".", " ", "For"}], " ", "now"}]}]}], ",", " ", 
        
        RowBox[{
         RowBox[{
         "we", " ", "only", " ", "have", " ", "them", " ", "for", " ", "the", 
          " ", "cairo"}], "-", 
         RowBox[{"test", " ", "host"}]}]}], "\[IndentingNewLine]", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
         "tag", " ", "\[Equal]", " ", "\"\<DTraceFcall-cairotest-host\>\""}], 
         ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"statistics", " ", "=", " ", 
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{"\"\<!grep Routine \>\"", "<>", "filename"}], ",", " ", 
             "\"\<Table\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"changeset", " ", "=", " ", 
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{
             "\"\<!grep 'changeset:' \>\"", "<>", "filename", "<>", 
              "\"\< | awk '{print $2}'\>\""}], ",", " ", "\"\<List\>\""}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"totalCalls", " ", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<*\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"noisyIrPassCalls", " ", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"noisyIrHelperCalls", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"genCalls", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<Gen\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"parseCalls", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<Parse\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"unknownCalls", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<Unknown\>\"", ",", " ", "3"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"totalTime", " ", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<*\>\"", ",", " ", "10"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"noisyIrPassTime", " ", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "10"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"noisyIrHelperTime", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", "10"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"genTime", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<Gen\>\"", ",", " ", "10"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"parseTime", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{"statistics", ",", " ", "\"\<Parse\>\"", ",", " ", "10"}],
             "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"unknownTime", "=", " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
            "statistics", ",", " ", "\"\<Unknown\>\"", ",", " ", "10"}], 
            "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"labels", " ", "=", 
           RowBox[{"{", 
            RowBox[{
            "\"\<IR Passes\>\"", ",", "\"\<IR Helper Routines\>\"", ",", 
             "\"\<IR Generation\>\"", ",", "\"\<Parsing\>\"", ",", " ", 
             "\"\<Unaccounted\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"callCountData", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
            "noisyIrPassCalls", ",", "noisyIrHelperCalls", ",", "genCalls", 
             ",", "parseCalls", ",", " ", "unknownCalls"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"timeData", " ", "=", " ", 
           RowBox[{"{", 
            RowBox[{
            "noisyIrPassTime", ",", "noisyIrHelperTime", ",", "genTime", ",", 
             "parseTime", ",", " ", "unknownTime"}], "}"}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"callCountPlot", " ", "=", " ", 
           RowBox[{"doPlot", "[", 
            RowBox[{
            "\"\<Noisy-Only Call Count Breakdown\>\"", ",", " ", "labels", 
             ",", " ", "callCountData"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"callTimePlot", " ", "=", " ", 
           RowBox[{"doPlot", "[", 
            RowBox[{
            "\"\<Noisy-Only Call Time Breakdown (\[Mu]S)\>\"", ",", " ", 
             "labels", ",", " ", "timeData"}], "]"}]}]}], ",", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"callCountPlot", " ", "=", " ", 
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"callTimePlot", " ", "=", " ", 
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", " ", 
        "=", " ", 
        RowBox[{"dtraceStatsForFile", "[", 
         RowBox[{"filename", ",", " ", "tag"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Length", "[", 
           "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", 
           "]"}], " ", ">", " ", "0"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Then", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", 
            "]"}], ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "filter", " ", "out", " ", "items", " ", "smaller", " ", "than", 
           " ", "1", "%"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRestGreater\
Than1percentSubset", " ", "=", " ", 
           RowBox[{"Select", "[", 
            RowBox[{
            "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRest", 
             ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", "1"}], "&"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"changesetDtracePlot", " ", "=", " ", 
           RowBox[{"doPlot", "[", 
            RowBox[{
             RowBox[{
             "\"\<Whole-Application Time Breakdown for\\n\>\"", "<>", "tag", 
              "<>", "\"\<,\\nobtained via DTrace (see DTrace/fcalls.d)\>\""}],
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<\\n(\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "]"}], "<>", 
                "\"\< %)\>\""}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRestGre\
aterThan1percentSubset"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableNoisySubsetPercentagesAndRestGre\
aterThan1percentSubset"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Else", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"changesetDtracePlot", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableNoisySubsetPercentages", " ", "=", " ", 
        RowBox[{"dtraceNoisyOnlyStatsForFile", "[", 
         RowBox[{"filename", ",", " ", "tag"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Length", "[", 
           "dtraceResidencyNanosecondsTableNoisySubsetPercentages", "]"}], 
          " ", ">", " ", "0"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Then", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "dtraceResidencyNanosecondsTableNoisySubsetPercentages", "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "filter", " ", "out", " ", "items", " ", "smaller", " ", "than", 
           " ", "1", "%"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "dtraceResidencyNanosecondsTableNoisySubsetPercentagesGreaterThan1pe\
rcentSubset", " ", "=", " ", 
           RowBox[{"Select", "[", 
            RowBox[{
            "dtraceResidencyNanosecondsTableNoisySubsetPercentages", ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", "1"}], "&"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"changesetNoisyOnlyDtracePlot", " ", "=", " ", 
           RowBox[{"doPlot", "[", 
            RowBox[{
             RowBox[{
             "\"\<Whole-Application Time Breakdown for\\n\>\"", "<>", "tag", 
              "<>", "\"\<,\\nobtained via DTrace (see DTrace/fcalls.d)\>\""}],
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<\\n(\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "]"}], "<>", 
                "\"\< %)\>\""}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableNoisySubsetPercentagesGreaterTha\
n1percentSubset"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableNoisySubsetPercentagesGreaterTha\
n1percentSubset"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Else", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"changesetNoisyOnlyDtracePlot", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
       "dtraceResidencyNanosecondsTableCairoSubsetPercentages", " ", "=", " ", 
        RowBox[{"dtraceCairoOnlyStatsForFile", "[", 
         RowBox[{"filename", ",", " ", "tag"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "Length", "[", 
           "dtraceResidencyNanosecondsTableCairoSubsetPercentages", "]"}], 
          " ", ">", " ", "0"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Then", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Print", "[", 
            "dtraceResidencyNanosecondsTableCairoSubsetPercentages", "]"}], 
           ";"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "filter", " ", "out", " ", "items", " ", "smaller", " ", "than", 
           " ", "1", "%"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
          "dtraceResidencyNanosecondsTableCairoSubsetPercentagesGreaterThan1pe\
rcentSubset", " ", "=", " ", 
           RowBox[{"Select", "[", 
            RowBox[{
            "dtraceResidencyNanosecondsTableCairoSubsetPercentages", ",", " ", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], ">", "1"}], "&"}]}], "]"}]}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"changesetCairoOnlyDtracePlot", " ", "=", " ", 
           RowBox[{"doPlot", "[", 
            RowBox[{
             RowBox[{
             "\"\<Whole-Application Time Breakdown for\\n\>\"", "<>", "tag", 
              "<>", "\"\<,\\nobtained via DTrace (see DTrace/fcalls.d)\>\""}],
              ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<>", "\"\<\\n(\>\"", "<>", 
                RowBox[{"ToString", "[", 
                 RowBox[{"NumberForm", "[", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"3", ",", "1"}], "}"}]}], "]"}], "]"}], "<>", 
                "\"\< %)\>\""}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableCairoSubsetPercentagesGreaterTha\
n1percentSubset"}], ",", " ", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
              "dtraceResidencyNanosecondsTableCairoSubsetPercentagesGreaterTha\
n1percentSubset"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", "Else", " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"changesetCairoOnlyDtracePlot", "=", 
           RowBox[{"Graphics", "[", 
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Column", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"tag", ",", " ", "Large", ",", " ", "Bold", ",", " ", 
            RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], ",", 
          "callCountPlot", ",", " ", "callTimePlot", ",", 
          "changesetDtracePlot", ",", " ", "changesetNoisyOnlyDtracePlot", 
          ",", "changesetCairoOnlyDtracePlot"}], "}"}], 
        RowBox[{"(*", 
         RowBox[{",", " ", 
          RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "*)"}], "]"}]}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"changesetForFile", "[", "filename_", "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"ToExpression", "[", 
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{
          "\"\<!cat \>\"", "<>", "filename", "<>", 
           "\"\<| grep changeset | awk -F':' '{print $2}'\>\""}], ",", " ", 
          "\"\<List\>\""}], "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"prefixColumnForDirectory", "[", 
     RowBox[{"directory_", ",", " ", "prefix_", ",", " ", "column_"}], "]"}], 
    " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "files", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"files", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{
           "\"\<!ls \>\"", "<>", "directory", "<>", 
            "\"\<| grep -v latest.txt\>\""}], ",", " ", "\"\<List\>\""}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"changesetForFile", "[", 
            RowBox[{"directory", "<>", "\"\</\>\"", "<>", "#"}], "]"}], ",", 
           " ", 
           RowBox[{"prefixColumn", "[", 
            RowBox[{
             RowBox[{"Import", "[", 
              RowBox[{
               RowBox[{
               "\"\<!grep Routine \>\"", "<>", "directory", "<>", "\"\</\>\"",
                 "<>", "#"}], ",", " ", "\"\<Table\>\""}], "]"}], ",", " ", 
             "prefix", ",", " ", "column"}], "]"}]}], "}"}], "&"}], " ", "/@",
         " ", "files"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"noisyOverheadDtraceDataForDirectory", "[", 
     RowBox[{"directory_", ",", " ", "tag_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "files", "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"files", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"Import", "[", 
          RowBox[{
           RowBox[{
           "\"\<!ls \>\"", "<>", "directory", "<>", 
            "\"\<| grep -v latest.txt\>\""}], ",", " ", "\"\<List\>\""}], 
          "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Skip", " ", "over", " ", "the", " ", "regression", " ", "reports", 
         " ", "for", " ", "which", " ", "we", " ", 
         RowBox[{"couldn", "'"}], "t", " ", "extract", " ", "the", " ", 
         "required", " ", "info", " ", 
         RowBox[{"(", 
          RowBox[{
          "Only", " ", "started", " ", "generating", " ", "the", " ", "data", 
           " ", "after", " ", "changeset", " ", "61"}], ")"}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Select", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"changesetForFile", "[", 
              RowBox[{"directory", "<>", "\"\</\>\"", "<>", "#"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", 
                 RowBox[{"dtraceStatsForFile", "[", 
                  RowBox[{
                   RowBox[{"directory", "<>", "\"\</\>\"", "<>", "#"}], ",", 
                   " ", "tag"}], "]"}], "]"}], "\[Equal]", " ", "0"}], ",", 
               " ", 
               RowBox[{"{", "}"}], ",", 
               RowBox[{"(", 
                RowBox[{"100", "-", 
                 RowBox[{
                  RowBox[{"Last", "[", 
                   RowBox[{"dtraceStatsForFile", "[", 
                    RowBox[{
                    RowBox[{"directory", "<>", "\"\</\>\"", "<>", "#"}], ",", 
                    " ", "tag"}], "]"}], "]"}], "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], ")"}]}], "]"}]}], "}"}], 
           "&"}], " ", "/@", " ", "files"}], ",", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"NumberQ", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}], "&&", 
            RowBox[{"NumberQ", "[", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ")"}], "&"}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotForDirectory", "[", 
    RowBox[{"directory_", ",", " ", "tag_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "legends", ",", "callData", ",", "timeData", ",", "callPlot", ",", 
       "timePlot", ",", "noisyOverheadDtraceData", ",", 
       "noisyOverheadDtracePlot"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", "\[IndentingNewLine]", "\t", 
      RowBox[{
       RowBox[{"TODO", ":", " ", 
        RowBox[{
         RowBox[{
         "we", " ", "should", " ", "start", " ", "dumping", " ", "the", " ", 
          "noisy"}], "-", 
         RowBox[{
         "internal", " ", "stats", " ", "for", " ", "all", " ", "the", " ", 
          "test", " ", 
          RowBox[{"programs", ".", " ", "For"}], " ", "now"}]}]}], ",", " ", 
       RowBox[{
        RowBox[{
        "we", " ", "only", " ", "have", " ", "them", " ", "for", " ", "the", 
         " ", "cairo"}], "-", 
        RowBox[{"test", " ", "host"}]}]}], "\[IndentingNewLine]", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
        "tag", " ", "\[Equal]", " ", "\"\<DTraceFcall-cairotest-host\>\""}], 
        ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"callData", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "3"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", "3"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{"directory", ",", " ", "\"\<Gen\>\"", ",", " ", "3"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{"directory", ",", " ", "\"\<Parse\>\"", ",", " ", "3"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<Unknown\>\"", ",", " ", "3"}], 
             "]"}]}], "}"}]}], 
         RowBox[{"(*", 
          RowBox[{"Parallelize", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "3"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", "3"}],
               "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{"directory", ",", " ", "\"\<Gen\>\"", ",", " ", "3"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{"directory", ",", " ", "\"\<Parse\>\"", ",", " ", "3"}],
               "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<Unknown\>\"", ",", " ", "3"}], 
              "]"}]}], "}"}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"timeData", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "10"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", "10"}],
              "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{"directory", ",", " ", "\"\<Gen\>\"", ",", " ", "10"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{"directory", ",", " ", "\"\<Parse\>\"", ",", " ", "10"}],
              "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"prefixColumnForDirectory", "[", 
             RowBox[{
             "directory", ",", " ", "\"\<Unknown\>\"", ",", " ", "10"}], 
             "]"}]}], "}"}]}], 
         RowBox[{"(*", 
          RowBox[{"Parallelize", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<NoisyIrPass\>\"", ",", " ", "10"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<NoisyIrHelper\>\"", ",", " ", 
               "10"}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{"directory", ",", " ", "\"\<Gen\>\"", ",", " ", "10"}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<Parse\>\"", ",", " ", "10"}], "]"}],
              ",", "\[IndentingNewLine]", 
             RowBox[{"prefixColumnForDirectory", "[", 
              RowBox[{
              "directory", ",", " ", "\"\<Unknown\>\"", ",", " ", "10"}], 
              "]"}]}], "}"}], "]"}], "*)"}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"legends", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<IR Passes\>\"", ",", "\"\<IR Helper Routines\>\"", ",", 
            "\"\<IR Generation\>\"", ",", "\"\<Parsing\>\"", ",", " ", 
            "\"\<Unaccounted\>\""}], "}"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"callPlot", " ", "=", " ", 
          RowBox[{"ListLogPlot", "[", 
           RowBox[{"callData", ",", "\[IndentingNewLine]", " ", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
            RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
            RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Changeset ID\>\"", ",", " ", "\"\<Call Count\>\""}], 
              "}"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{"legends", ",", "Above"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"PointSize", "[", "0.02", "]"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "1.8"}]}], ",", " ", "\[IndentingNewLine]", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"80", ",", "0"}], "}"}], " ", ",", 
               RowBox[{"{", 
                RowBox[{"50", ",", "10"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FrameStyle", "\[Rule]", " ", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"FontSize", "\[Rule]", " ", "16"}], ",", " ", 
               RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", "480"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{"timePlot", " ", "=", " ", 
          RowBox[{"ListLogPlot", "[", 
           RowBox[{"timeData", ",", " ", "\[IndentingNewLine]", 
            RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
            RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
            RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
             RowBox[{"{", 
              RowBox[{
              "\"\<Changeset ID\>\"", ",", " ", 
               "\"\<Aggregate Time (\[Mu]S)\>\""}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotLegends", "\[Rule]", 
             RowBox[{"Placed", "[", 
              RowBox[{"legends", ",", "Above"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"PointSize", "[", "0.02", "]"}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"AspectRatio", "\[Rule]", 
             RowBox[{"1", "/", "1.8"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ImagePadding", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"80", ",", "0"}], "}"}], " ", ",", 
               RowBox[{"{", 
                RowBox[{"50", ",", "10"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"FrameStyle", "\[Rule]", " ", 
             RowBox[{"Directive", "[", 
              RowBox[{
               RowBox[{"FontSize", "\[Rule]", " ", "16"}], ",", " ", 
               RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"ImageSize", "\[Rule]", "480"}]}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"callPlot", " ", "=", " ", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"timePlot", "=", " ", 
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"Rectangle", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0"}], "}"}]}], "]"}], ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"noisyOverheadDtraceData", " ", "=", " ", 
       RowBox[{"noisyOverheadDtraceDataForDirectory", "[", 
        RowBox[{"directory", ",", " ", "tag"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"noisyOverheadDtracePlot", " ", "=", " ", 
       RowBox[{"ListPlot", "[", 
        RowBox[{"noisyOverheadDtraceData", ",", " ", "\[IndentingNewLine]", 
         RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
         RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
         RowBox[{"FrameLabel", " ", "\[Rule]", " ", 
          RowBox[{"{", 
           RowBox[{
           "\"\<Changeset ID\>\"", ",", " ", 
            "\"\<Compile Time Spent in Noisy routines (%)\>\""}], "}"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"PlotRange", "\[Rule]", " ", "All"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"PointSize", "[", "0.02", "]"}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AspectRatio", "\[Rule]", 
          RowBox[{"1", "/", "1.8"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImagePadding", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"80", ",", "0"}], "}"}], " ", ",", 
            RowBox[{"{", 
             RowBox[{"50", ",", "10"}], "}"}]}], "}"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameStyle", "\[Rule]", " ", 
          RowBox[{"Directive", "[", 
           RowBox[{
            RowBox[{"FontSize", "\[Rule]", " ", "16"}], ",", " ", 
            RowBox[{"FontFamily", "\[Rule]", " ", "\"\<Helvetica\>\""}]}], 
           "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", "480"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Column", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{"tag", ",", " ", "Bold", ",", " ", "Large", ",", " ", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica Neue\>\""}], ",", 
           "Orange"}], "]"}], ",", " ", 
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
           "callPlot", ",", " ", "timePlot", ",", " ", 
            "noisyOverheadDtracePlot"}], "}"}], 
          RowBox[{"(*", 
           RowBox[{",", 
            RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "*)"}], "]"}]}],
         "}"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.626707250873294*^9, 3.626707259339101*^9}, {
   3.626708319005877*^9, 3.626708327736919*^9}, {3.626708420360804*^9, 
   3.626708420606814*^9}, {3.626708587186689*^9, 3.626708608752596*^9}, 
   3.6267088112987328`*^9, {3.626709298123802*^9, 3.626709483625848*^9}, {
   3.626709544398624*^9, 3.626709559632555*^9}, {3.6267096089633827`*^9, 
   3.6267096231490583`*^9}, {3.62670965516819*^9, 3.6267096747312326`*^9}, {
   3.626709710115286*^9, 3.626709747443433*^9}, 3.626709843699272*^9, {
   3.6267135398657722`*^9, 3.6267135518292303`*^9}, {3.626713623243988*^9, 
   3.626713638138009*^9}, {3.626714002774214*^9, 3.626714035086513*^9}, {
   3.626714108513954*^9, 3.626714117006757*^9}, {3.626714272000264*^9, 
   3.62671427616329*^9}, 3.626714325135765*^9, {3.626714364613196*^9, 
   3.626714385537624*^9}, {3.626714426859249*^9, 3.626714468145509*^9}, {
   3.626714527906372*^9, 3.62671455047437*^9}, {3.626714630157748*^9, 
   3.6267146605217667`*^9}, 3.626714767064351*^9, {3.626714848252039*^9, 
   3.62671489741604*^9}, {3.626714943789678*^9, 3.626715042791976*^9}, {
   3.626715078825138*^9, 3.62671511040152*^9}, {3.626715167035947*^9, 
   3.626715169825384*^9}, {3.6267152372923822`*^9, 3.626715253322525*^9}, {
   3.626715357239311*^9, 3.6267154329849977`*^9}, {3.626715474015737*^9, 
   3.626715485096264*^9}, {3.6267172326322613`*^9, 3.626717250406763*^9}, {
   3.626717385453796*^9, 3.626717394116929*^9}, 3.626717457856024*^9, {
   3.626717494512101*^9, 3.626717563247527*^9}, {3.626717801108637*^9, 
   3.626717804854904*^9}, {3.626717882156245*^9, 3.6267179090191517`*^9}, {
   3.626718132086972*^9, 3.626718166442423*^9}, {3.651510549241453*^9, 
   3.651510604130125*^9}, {3.6515107635190287`*^9, 3.651510764226646*^9}, {
   3.651510810182151*^9, 3.651510895084025*^9}, 3.651510994130466*^9, {
   3.651511069231985*^9, 3.651511103814247*^9}, {3.6515111776803837`*^9, 
   3.6515111820782957`*^9}, 3.651511225078496*^9, {3.651511341515705*^9, 
   3.6515113494881077`*^9}, {3.651511395581608*^9, 3.651511411069652*^9}, {
   3.6515120773280897`*^9, 3.6515121890176287`*^9}, {3.651512221057468*^9, 
   3.651512387981492*^9}, {3.651512577835342*^9, 3.651512599095586*^9}, {
   3.6515126422710543`*^9, 3.651512777325157*^9}, {3.651513022922069*^9, 
   3.651513048021291*^9}, {3.651513112132732*^9, 3.651513141247624*^9}, 
   3.651513218656695*^9, {3.6515132679218693`*^9, 3.6515132822072487`*^9}, {
   3.65151336718955*^9, 3.651513383309388*^9}, {3.651513437657145*^9, 
   3.65151344335076*^9}, {3.651513476740191*^9, 3.651513489045559*^9}, {
   3.651513684862753*^9, 3.651513694088785*^9}, {3.651513728480885*^9, 
   3.651513737803356*^9}, {3.651513798343424*^9, 3.651513799957782*^9}, {
   3.651513833712932*^9, 3.6515139453049192`*^9}, {3.65151454058333*^9, 
   3.651514542997655*^9}, 3.651514665578516*^9, {3.6515147241224623`*^9, 
   3.651514752866374*^9}, {3.651514862114401*^9, 3.651514906164221*^9}, 
   3.651515017664125*^9, {3.651515075519112*^9, 3.65151507589036*^9}, {
   3.651515108077733*^9, 3.651515108515477*^9}, {3.65151613353477*^9, 
   3.651516232912796*^9}, {3.6537364097961607`*^9, 3.6537364101889467`*^9}, {
   3.653736441643324*^9, 3.653736452735826*^9}, {3.653736485316176*^9, 
   3.653736485686387*^9}, {3.653736598377157*^9, 3.653736677204053*^9}, {
   3.653736724352941*^9, 3.6537367622189903`*^9}, {3.653736810751931*^9, 
   3.6537368111557283`*^9}, {3.653736842691073*^9, 3.653736857570663*^9}, {
   3.653737075080117*^9, 3.653737102709882*^9}, {3.653737196384856*^9, 
   3.6537371967225227`*^9}, {3.653737256978364*^9, 3.6537372575506353`*^9}, {
   3.653737300661837*^9, 3.6537373062849197`*^9}, {3.653737349381186*^9, 
   3.6537373498988256`*^9}, {3.6537374188178368`*^9, 
   3.6537374189057417`*^9}, {3.6537375208583317`*^9, 3.653737563611944*^9}, {
   3.6537375999837027`*^9, 3.653737617949688*^9}, {3.6537377288531723`*^9, 
   3.653737733778912*^9}, {3.653737793403851*^9, 3.653737807995988*^9}, 
   3.653737895500125*^9, {3.653737935987824*^9, 3.6537379532734537`*^9}, {
   3.653738017433683*^9, 3.653738017679802*^9}, {3.653738074977024*^9, 
   3.6537380825904922`*^9}, 3.6537381320468283`*^9, {3.6537382113309727`*^9, 
   3.653738234228557*^9}, 3.65373829017382*^9, {3.653738344386664*^9, 
   3.653738359718954*^9}, {3.653738430664259*^9, 3.653738507609177*^9}, {
   3.653738540942915*^9, 3.65373857820199*^9}, 3.653738609951077*^9, {
   3.653765769563743*^9, 3.6537657862104797`*^9}, {3.653836854318014*^9, 
   3.653836859882427*^9}, {3.653836980986068*^9, 3.6538370043317623`*^9}, {
   3.653837438518107*^9, 3.653837452259774*^9}, {3.65383761788855*^9, 
   3.653837634863023*^9}, {3.653837854752695*^9, 3.6538378659195623`*^9}, {
   3.653838099821616*^9, 3.6538381212271023`*^9}, {3.653838324521215*^9, 
   3.653838338256234*^9}, 3.653838748018671*^9, {3.654031201985401*^9, 
   3.654031202494787*^9}, 3.6540326976609077`*^9, {3.654033237644382*^9, 
   3.6540332779145813`*^9}, {3.654033516812319*^9, 3.654033517468041*^9}, {
   3.6540337968121643`*^9, 3.6540338237317944`*^9}, {3.6540338574692383`*^9, 
   3.6540338577237463`*^9}, {3.654034570294091*^9, 3.654034579205694*^9}, {
   3.654034631126175*^9, 3.65403465137142*^9}, {3.654040010057228*^9, 
   3.6540400236667433`*^9}, {3.654040065855228*^9, 3.654040232537568*^9}, {
   3.654040326714324*^9, 3.654040437754114*^9}, {3.654040528369308*^9, 
   3.654040542205654*^9}, {3.6540405887237387`*^9, 3.654040592095044*^9}, {
   3.65451284458809*^9, 3.6545129145480757`*^9}, {3.654513124696279*^9, 
   3.654513128217512*^9}, {3.654513311750194*^9, 3.654513337354164*^9}, {
   3.654513372878899*^9, 3.654513420645687*^9}, {3.6545134630024967`*^9, 
   3.6545134631125603`*^9}, {3.654513972576322*^9, 3.654513976673123*^9}, {
   3.654514023721274*^9, 3.654514054869109*^9}, {3.6545141396728363`*^9, 
   3.654514244878352*^9}, {3.654514377706689*^9, 3.654514386131056*^9}, {
   3.654514538318486*^9, 3.654514552143474*^9}, {3.654514585692917*^9, 
   3.654514646225749*^9}, {3.654514741696021*^9, 3.6545147563844233`*^9}, {
   3.654518070543124*^9, 3.654518114887864*^9}, {3.6545182007263947`*^9, 
   3.654518236511479*^9}, {3.654518294008882*^9, 3.6545184131779003`*^9}, {
   3.6545184664569387`*^9, 3.654518580475369*^9}, {3.654520355327298*^9, 
   3.65452039315364*^9}, {3.65452042567389*^9, 3.654520523118205*^9}, {
   3.654520562087942*^9, 3.654520562290729*^9}, {3.654520658286509*^9, 
   3.65452067060281*^9}, 3.6545207687737103`*^9, {3.654520875107004*^9, 
   3.6545209183042717`*^9}, {3.6545209555411463`*^9, 3.654520955812564*^9}, {
   3.654520995840559*^9, 3.654521022682108*^9}, {3.654521090721476*^9, 
   3.6545211154576807`*^9}, {3.655304735990121*^9, 3.655304748898138*^9}, {
   3.655304892494966*^9, 3.655304893083497*^9}, 3.655305107693634*^9, {
   3.6553051983689127`*^9, 3.655305250693735*^9}, {3.655305390948855*^9, 
   3.6553053951197157`*^9}, {3.6572287533543262`*^9, 3.657228789054528*^9}, {
   3.6572288304818172`*^9, 3.6572288408654213`*^9}, {3.6572291100582113`*^9, 
   3.657229110620283*^9}, {3.657229146717216*^9, 3.6572291963629303`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Analysis",
 FontSize->36]], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.65403409760143*^9, 3.654034139223724*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "latestFile", " ", "=", " ", 
    "\"\</Volumes/doos/Noisy-lang-compiler-hg/statistics/latest.txt\>\""}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Style", "[", 
   RowBox[{
    RowBox[{"\"\<Changeset:    \>\"", "<>", 
     RowBox[{"Import", "[", 
      RowBox[{
       RowBox[{
       "\"\<!grep 'changeset:' \>\"", "<>", "latestFile", "<>", 
        "\"\< | awk '{print $2}'\>\""}], ",", " ", "\"\<List\>\""}], "]"}]}], 
    ",", " ", "Large", ",", " ", "Bold", ",", " ", 
    RowBox[{"Background", "\[Rule]", "LightBlue"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{"Parallelize", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"plotChangeSet", "[", 
       RowBox[{"latestFile", ",", "\"\<DTraceFcall-noisy-darwin-EN\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"plotForDirectory", "[", 
       RowBox[{
       "\"\</Volumes/doos/Noisy-lang-compiler-hg/statistics\>\"", ",", 
        "\"\<DTraceFcall-noisy-darwin-EN\>\""}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Style", "[", 
     RowBox[{
     "\"\<Noisy Compiler on helloWorld.n\>\"", ",", " ", "Bold", ",", " ", 
      "Large", ",", " ", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica Neue\>\""}], ",", 
      "Orange"}], "]"}], ",", " ", 
    RowBox[{"TableForm", "[", 
     RowBox[{
      RowBox[{"dtraceStatsForFile", "[", 
       RowBox[{
       "\"\</Volumes/doos/Noisy-lang-compiler-hg/statistics/latest.txt\>\"", 
        ",", " ", "\"\<DTraceFcall-noisy-darwin-EN\>\""}], "]"}], ",", 
      RowBox[{"TableHeadings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"None", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"\"\<Function\>\"", ",", " ", "Bold", ",", " ", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica Neue\>\""}]}], 
            "]"}], ",", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<% of Runtime\>\"", ",", " ", "Bold", ",", " ", 
             RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica Neue\>\""}]}], 
            "]"}]}], "}"}]}], "}"}]}]}], "]"}]}], "}"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.626703574389592*^9, 3.626703824662992*^9}, {
   3.626703863420491*^9, 3.62670386658082*^9}, {3.626703977238913*^9, 
   3.6267040601834583`*^9}, {3.62670418589363*^9, 3.626704264216775*^9}, 
   3.626704305718095*^9, {3.6267043473251677`*^9, 3.626704356804401*^9}, {
   3.6267044824816313`*^9, 3.626704658420311*^9}, {3.6267047371812363`*^9, 
   3.626704878762599*^9}, {3.626704911615383*^9, 3.6267049147309713`*^9}, {
   3.626705044342774*^9, 3.626705062703288*^9}, {3.626705098692824*^9, 
   3.626705246764591*^9}, {3.6267054731294193`*^9, 3.626705505808573*^9}, {
   3.6267055773383217`*^9, 3.626705725399749*^9}, {3.62670576748829*^9, 
   3.626705774069665*^9}, {3.626705813277143*^9, 3.626705917170879*^9}, {
   3.626705967066409*^9, 3.626706164873584*^9}, {3.6267062355835648`*^9, 
   3.626706258249316*^9}, {3.626706350129668*^9, 3.626706367679886*^9}, {
   3.626706404367313*^9, 3.626706504516005*^9}, {3.626706710516631*^9, 
   3.6267067928648863`*^9}, {3.626706865823491*^9, 3.6267068911138353`*^9}, {
   3.626707137164308*^9, 3.626707480866455*^9}, {3.626708241731043*^9, 
   3.6267083470635433`*^9}, {3.626708390163642*^9, 3.626708415792049*^9}, {
   3.626708462714834*^9, 3.626708466505769*^9}, {3.6267085501847553`*^9, 
   3.6267085667330723`*^9}, 3.626709293964591*^9, {3.626713510694046*^9, 
   3.626713525929335*^9}, {3.626713560655408*^9, 3.6267135610047092`*^9}, {
   3.6267140642435627`*^9, 3.626714088317466*^9}, {3.626714514147727*^9, 
   3.626714514752234*^9}, {3.6267145902986727`*^9, 3.626714595292841*^9}, 
   3.626715140596546*^9, {3.6267179385599613`*^9, 3.6267179481547823`*^9}, {
   3.651254432018917*^9, 3.6512544372833157`*^9}, {3.651515039129653*^9, 
   3.651515056542281*^9}, 3.651515971034904*^9, {3.651613347605859*^9, 
   3.651613347942087*^9}, 3.6537379644536047`*^9, 3.653738698664823*^9, {
   3.65383671066984*^9, 3.6538367247634773`*^9}, 3.654032818441709*^9, {
   3.654032851967832*^9, 3.65403293795383*^9}, {3.654033001765004*^9, 
   3.654033149631423*^9}, {3.654033312039791*^9, 3.654033384963128*^9}, {
   3.654033879870883*^9, 3.654033964402644*^9}, {3.654034058340626*^9, 
   3.654034088424224*^9}, 3.654034139224262*^9, {3.65403961550764*^9, 
   3.6540396205554113`*^9}, {3.657228538588633*^9, 3.657228622116332*^9}, {
   3.657228659386847*^9, 3.657228694119372*^9}, {3.657228830679853*^9, 
   3.657228830777151*^9}, {3.657228910223144*^9, 3.657228938660428*^9}}],

Cell[BoxData[
 StyleBox["\<\"Changeset:    64:4c3405bd280d\"\>",
  StripOnInput->False,
  FontSize->Large,
  FontWeight->Bold,
  Background->RGBColor[0.87, 0.94, 1]]], "Output",
 CellChangeTimes->{3.657228970221929*^9, 3.6572292092606077`*^9, 
  3.657229758432919*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"DTraceFcall-noisy-darwin-EN\"\>",
          StripOnInput->False,
          FontSize->Large,
          FontWeight->Bold,
          Background->RGBColor[0.87, 0.94, 1]]},
        {
         GraphicsBox[RectangleBox[{0, 0}, {0, 0}],
          ImageSize->Tiny]},
        {
         GraphicsBox[RectangleBox[{0, 0}, {0, 0}],
          ImageSize->Tiny]},
        {
         GraphicsBox[{{}, {InsetBox[
             GraphicsBox[{{}, {}, 
               
               DynamicModuleBox[{DynamicChart`click$1112$2612 = False, 
                DynamicChart`click$1122$2612 = False, 
                DynamicChart`click$1126$2612 = False, 
                DynamicChart`click$1130$2612 = False, 
                DynamicChart`click$1134$2612 = False, 
                DynamicChart`click$1138$2612 = False, 
                DynamicChart`click$1142$2612 = False, 
                DynamicChart`click$1146$2612 = False, 
                DynamicChart`click$1150$2612 = False, 
                DynamicChart`click$1154$2612 = False}, {
                 {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
                  0.5]}], {{{}, {
                    {RGBColor[
                    0.4549019607843137, 0.050980392156862744`, 
                    0.023529411764705882`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.9934654898229408, 
                    0.11413290730926094`}, {-0.9983650359019343, 
                    0.05715990805214453}, {-1., 
                    1.2246467991473532`*^-16}, {-2., 
                    2.4492935982947064`*^-16}, {-1.9967300718038685`, 
                    0.11431981610428905`}, {-1.9869309796458816`, 
                    0.22826581461852188`}}]},
                    ImageSizeCache->{{213.7606933090101, 
                    262.2393066909899}, {-138.2393066909899, \
-121.7606933090101}}], {}},
                    StatusArea[#, 1.7973881854742573`]& ,
                    TagBoxNote->"1.7973881854742573"],
                    StyleBox["1.7973881854742573`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1.7973881854742573`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1112$2612, 
                    FEPrivate`Not[DynamicChart`click$1112$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1112$2612, {{{1., 0}, {
                    0, 1.}}, {-0.19967300718038686`, 
                    0.011431981610428906`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$1112$2612}]]}, 
                    {RGBColor[0.6784313725490196, 0.3137254901960784, 0.], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.9734728250728377, 
                    0.2288026635437364}, {-0.9851390114597938, 
                    0.1717589243679067}, {-0.9934654898229408, 
                    0.11413290730926094`}, {-1.9869309796458816`, 
                    0.22826581461852188`}, {-1.9702780229195875`, 
                    0.3435178487358134}, {-1.9469456501456754`, 
                    0.4576053270874728}}]},
                    
                    ImageSizeCache->{{214.7606933090101, 
                    264.2393066909899}, {-147.2393066909899, \
-125.7606933090101}}], {}},
                    StatusArea[#, 1.8301236848812068`]& ,
                    TagBoxNote->"1.8301236848812068"],
                    StyleBox["1.8301236848812068`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1.8301236848812068`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1122$2612, 
                    FEPrivate`Not[DynamicChart`click$1122$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1122$2612, {{{1., 0}, {
                    0, 1.}}, {-0.19702780229195876`, 0.03435178487358134}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1122$2612}]]}, 
                    {RGBColor[
                    0.9058823529411765, 0.6392156862745098, 
                    0.07058823529411765], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.9349256560255624, 
                    0.3548436524797531}, {-0.9562780837118785, 
                    0.29245893149694974`}, {-0.9734728250728377, 
                    0.2288026635437364}, {-1.9469456501456754`, 
                    0.4576053270874728}, {-1.912556167423757, 
                    0.5849178629938995}, {-1.8698513120511249`, 
                    0.7096873049595062}}]},
                    
                    ImageSizeCache->{{215.7606933090101, 
                    265.2393066909899}, {-158.2393066909899, \
-130.7606933090101}}], {}},
                    StatusArea[#, 2.0726503871084914`]& ,
                    TagBoxNote->"2.0726503871084914"],
                    StyleBox["2.0726503871084914`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2.0726503871084914`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1126$2612, 
                    FEPrivate`Not[DynamicChart`click$1126$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1126$2612, {{{1., 0}, {
                    0, 1.}}, {-0.1912556167423757, 0.05849178629938995}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1126$2612}]]}, 
                    {RGBColor[
                    0.16470588235294117`, 0.41568627450980394`, 
                    0.11764705882352941`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.8756409954914465, 
                    0.4829625730993537}, {-0.9075469763883087, 
                    0.41995057524480023`}, {-0.9349256560255624, 
                    0.3548436524797531}, {-1.8698513120511249`, 
                    0.7096873049595062}, {-1.8150939527766174`, 
                    0.8399011504896005}, {-1.751281990982893, 
                    0.9659251461987074}}]},
                    
                    ImageSizeCache->{{219.7606933090101, 
                    268.2393066909899}, {-168.2393066909899, \
-135.7606933090101}}], {}},
                    StatusArea[#, 2.220184350189126]& ,
                    TagBoxNote->"2.220184350189126"],
                    StyleBox["2.220184350189126`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2.220184350189126, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1130$2612, 
                    FEPrivate`Not[DynamicChart`click$1130$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1130$2612, {{{1., 0}, {
                    0, 1.}}, {-0.18150939527766174`, 0.08399011504896005}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1130$2612}]]}, 
                    {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.7509738887065582, 
                    0.6603319002448313}, {-0.7967779962107723, 
                    0.6042721446122984}, {-0.8384064193377397, 
                    0.5450455724187383}, {-0.8756409954914465, 
                    0.4829625730993537}, {-1.751281990982893, 
                    0.9659251461987074}, {-1.6768128386754795`, 
                    1.0900911448374766`}, {-1.5935559924215446`, 
                    1.2085442892245968`}, {-1.5019477774131165`, 
                    1.3206638004896627`}}]},
                    
                    ImageSizeCache->{{223.7606933090101, 
                    272.2393066909899}, {-183.2393066909899, \
-141.7606933090101}}], {}},
                    StatusArea[#, 3.4134605682972383`]& ,
                    TagBoxNote->"3.4134605682972383"],
                    StyleBox["3.4134605682972383`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.4134605682972383`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1134$2612, 
                    FEPrivate`Not[DynamicChart`click$1134$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1134$2612, {{{1., 0}, {
                    0, 1.}}, {-0.16362566607065432`, 0.1150071363130772}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1134$2612}]]}, 
                    {RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.5741793046005865, 
                    0.8187295806115636}, {-0.6372409309719496, 
                    0.7706646455456504}, {-0.6962962193385528, 
                    0.7177545366870473}, {-0.7509738887065582, 
                    0.6603319002448313}, {-1.5019477774131165`, 
                    1.3206638004896627`}, {-1.3925924386771056`, 
                    1.4355090733740945`}, {-1.2744818619438991`, 
                    1.5413292910913008`}, {-1.148358609201173, 
                    1.6374591612231273`}}]},
                    
                    ImageSizeCache->{{234.7606933090101, 
                    280.2393066909899}, {-196.2393066909899, \
-148.7606933090101}}], {}},
                    StatusArea[#, 3.738872359205589]& ,
                    TagBoxNote->"3.738872359205589"],
                    StyleBox["3.738872359205589`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.738872359205589, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1138$2612, 
                    FEPrivate`Not[DynamicChart`click$1138$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1138$2612, {{{1., 0}, {
                    0, 1.}}, {-0.13345863819467382`, 
                    0.14895902755866514`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$1138$2612}]]}, 
                    {RGBColor[
                    0.6392156862745098, 0.5607843137254902, 
                    0.7529411764705882], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.3047736765421217, 
                    0.9524248033766226}, {-0.37572219390928, 
                    0.9267323416197351}, {-0.4445314262371819, 
                    0.8957632561606537}, {-0.5108095878829565, 
                    0.8596938786142682}, {-0.5741793046005865, 
                    0.8187295806115636}, {-1.148358609201173, 
                    1.6374591612231273`}, {-1.021619175765913, 
                    1.7193877572285363`}, {-0.8890628524743638, 
                    1.7915265123213073`}, {-0.75144438781856, 
                    1.8534646832394701`}, {-0.6095473530842433, 
                    1.9048496067532452`}}]},
                    ImageSizeCache->{{249.7606933090101, 
                    292.2393066909899}, {-208.2393066909899, \
-155.7606933090101}}], {}},
                    StatusArea[#, 4.744031563598424]& ,
                    TagBoxNote->"4.744031563598424"],
                    StyleBox["4.744031563598424`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4.744031563598424, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1142$2612, 
                    FEPrivate`Not[DynamicChart`click$1142$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1142$2612, {{{1., 0}, {
                    0, 1.}}, {-0.08890628524743638, 0.17915265123213076`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1142$2612}]]}, 
                    {RGBColor[
                    0.1450980392156863, 0.11372549019607843`, 
                    0.16470588235294117`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{0.2568353601491579, 0.9664551711161011}, {
                    0.1640929655610607, 0.9864448786695467}, {
                    0.06987361282753529, 
                    0.9975558521859453}, {-0.02497465413923121, 
                    0.9996880846797294}, {-0.11959813073345472`, 
                    0.9928223844802571}, {-0.21314513562908471`, 
                    0.9770205479710542}, {-0.3047736765421217, 
                    0.9524248033766226}, {-0.6095473530842433, 
                    1.9048496067532452`}, {-0.42629027125816943`, 
                    1.9540410959421084`}, {-0.23919626146690945`, 
                    1.9856447689605141`}, {-0.04994930827846242, 
                    1.9993761693594587`}, {0.13974722565507058`, 
                    1.9951117043718907`}, {0.3281859311221214, 
                    1.9728897573390933`}, {0.5136707202983158, 
                    1.9329103422322023`}}]},
                    
                    ImageSizeCache->{{271.7606933090101, 
                    325.2393066909899}, {-211.2393066909899, \
-160.7606933090101}}], {}},
                    StatusArea[#, 8.948226341314665]& ,
                    TagBoxNote->"8.948226341314665"],
                    StyleBox["8.948226341314665`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[8.948226341314665, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1146$2612, 
                    FEPrivate`Not[DynamicChart`click$1146$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1146$2612, {{{1., 0}, {
                    0, 1.}}, {-0.004994930827846242, 0.1999376169359459}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1146$2612}]]}, 
                    {RGBColor[0.9411764705882353, 0., 0.00784313725490196], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJwtkl9oUnEUx82K7aHBwIc9hJQlc0GFZo3BiG8bSJGEpKsV5SKHUyJyPQQR
FG3920tZ1Ko9DGsRvYzCkMy2um5krVrhmkoMlzeXq/Re76hGlt5rdXYffvw4
cDjnfL+fr8bhsTqVCoWi7t/7/1/yW+v61Dns8YTEaollOt5M2frvcXDFd7Wv
P5lkVqsHM5ezPMzvFx25GkwwFcMQrDN53FoX8d0ORZmzvqHuE14Bj5pNhw9p
I0xFz8/B/byAi5qBjaZmP+Os2nazuiSgO+K+e2DYhw+JZe+ODgkwve3NtZ8P
I5NVXFm5VsBe7tS+Ldw4bkzELacteVgMnSX9uRh6GgPGgI6HXWi9bz84Bd7c
NNkXzGHaoHuhLqUw+ml7zagyi1Ubkmcid9LgU08c7qqvsOkthablGegcYZU7
mcGY5NJ2tH3By5b64/pjM0j7dz/tdX3DJFtrC06zGKvxGp8bckgvebgm1pDE
M62joesxh8rNmlhjZwKbQqrw4gIPi1J1TfREERhf4TTyeZipZuVawlLqn0U9
9Yv4SPM4MDSvhAnaN4fXtK8o3/NDvuc3auneebyie3+BIz0FtJCeeYyQ3j/Q
kt7vsh9FpMgPARfILxFt5FcW18lPCTvJz8+y32XYye+kzKOMHcQjigVeZQwQ
rwdY4FlGF/EckXmXESDecaaS8iChn/LAynkRsZXyMivnqQQn5YljvJS3Ilop
b3PMX8XUUTI=
                    "]]},
                    
                    ImageSizeCache->{{307.7606933090101, 
                    387.2393066909899}, {-208.2393066909899, \
-76.7606933090101}}], {}},
                    StatusArea[#, 29.39827219343541]& ,
                    TagBoxNote->"29.39827219343541"],
                    StyleBox["29.39827219343541`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[29.39827219343541, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1150$2612, 
                    FEPrivate`Not[DynamicChart`click$1150$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1150$2612, {{{1., 0}, {0, 1.}}, {
                    0.18605558245992018`, 0.07337111308614477}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1150$2612}]]}, 
                    {RGBColor[
                    0.4549019607843137, 0.050980392156862744`, 
                    0.023529411764705882`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJwtk31I00EcxodEQbl8yb+qqSWpIVYkGkpxBqEpViIZURIzenOYYhM1EyFt
mkEhhakUZL5GDVEwRDd9MiSztHKV0zR1anMvzp+zbc7p9ivPOziOLxx33+/z
fJ49lzOTrroJBIKI/3v93FiL2JLiExbY+FKpMOcJG9Qc7oWGX9mc2gGXuMG1
conDER+nY9PxfuiavEIPVi7gArKSDR9VUGySFh8tMiH565vd5p4R7MuRl4zv
nUd0pfF0ScEEDqzxUlmBAXd0Eukuqwb8VJ9M/ESHsmOquVeFs4gb78om6Vqc
DVNHyH5oEVB6MrHcfRaxjeekA4s63MrJHTiTr4FMFDIf8sWAIWVWoiX3NxQF
+6u56/OI9+2us7aokX3DvCzsNGHSlKENbx7CRW1D1OGeBWx7OnVC6fyA1AeT
zb35HAQVunS/T23w9WqKNc9yqHsY87o+4zGpj3NEyl0cAp63pKmsXUQ4EFnT
1scBkqVr4UWfidioFlVEc1BUeI95TH8nv7bK79ZKFiD2dh+e+DZK3ONTJPZY
E3bo2/+UF06Syopkq3TMCH9//fu0jGkypOuUyYMNUN/fGbOdmyUv8orfGsJ0
iFt5FqSNmiN+t2tKRW5aRA0ndAcm6MnNMoltsGoGj1qTgqtFRnI+s8Pp6Zpi
9SqrF9n9FXb/L3tvmfjT92z4Sf+zkBr6nx1+tJ8loqL9OOBB++VIFe13FSl0
Hj0R0nmcaKfzzpAxOq+L6THG9OCZXoNML57pWcv05OFJ9e5levPwpn4MQ0z9
4JlfGuaXC6eon3OQUj+dGKF+m9BB/V5jPJgZDw7Gi4XxYmc82RhPNrhp1nmz
o4TyZsEhyqMDeZRHM4Ior2uIpLwuMJ6djGcd493FeJ9meeBZHkaxkRee5aUf
LFDvNvLUqvwHS6v0IQ==
                    "]]},
                    
                    ImageSizeCache->{{213.7606933090101, 
                    374.2393066909899}, {-128.2393066909899, \
-37.760693309010094`}}], {}},
                    StatusArea[#, 40.570046121179644`]& ,
                    TagBoxNote->"40.570046121179644"],
                    StyleBox["40.570046121179644`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[40.570046121179644`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1154$2612, 
                    FEPrivate`Not[DynamicChart`click$1154$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1154$2612, {{{1., 0}, {
                    0, 1.}}, {-0.05525159359598852, -0.1922167042821818}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$1154$2612}]]}}}, {}}, {}}, {{{
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.9967300718038685`, 
                    0.11431981610428905`}, {-2.1964030789842557`, 
                    0.12575179771471798`}}], 
                    LineBox[{{-2.1964030789842557`, 
                    0.12575179771471798`}, {-2.2, 0.12575179771471798`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.9967300718038685`, 0.11431981610428905`},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyLexGet\\n(1.8 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 0.12575179771471798`}, \
{1, 0}]}}},
                    StatusArea[#, 1.7973881854742573`]& ,
                    TagBoxNote->"1.7973881854742573"],
                    StyleBox["1.7973881854742573`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1.7973881854742573`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1112$2612, 
                    FEPrivate`Not[DynamicChart`click$1112$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1112$2612, {{{1., 0}, {
                    0, 1.}}, {-0.19967300718038686`, 
                    0.011431981610428906`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$1112$2612}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.9702780229195875`, 
                    0.3435178487358134}, {-2.1673058252115465`, 
                    0.3778696336093948}}], 
                    LineBox[{{-2.1673058252115465`, 
                    0.3778696336093948}, {-2.2, 0.3778696336093948}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.9702780229195875`, 0.3435178487358134},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyLexPut\\n(1.8 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 0.3778696336093948}, \
{1, 0}]}}},
                    StatusArea[#, 1.8301236848812068`]& ,
                    TagBoxNote->"1.8301236848812068"],
                    StyleBox["1.8301236848812068`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[1.8301236848812068`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1122$2612, 
                    FEPrivate`Not[DynamicChart`click$1122$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1122$2612, {{{1., 0}, {
                    0, 1.}}, {-0.19702780229195876`, 0.03435178487358134}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1122$2612}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.912556167423757, 
                    0.5849178629938995}, {-2.103811784166133, 
                    0.6434096492932895}}], 
                    LineBox[{{-2.103811784166133, 0.6434096492932895}, {-2.2, 
                    0.6434096492932895}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.912556167423757, 0.5849178629938995},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyLexAllocateSourceInfo\\n(2.1 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 0.6434096492932895}, \
{1, 0}]}}},
                    StatusArea[#, 2.0726503871084914`]& ,
                    TagBoxNote->"2.0726503871084914"],
                    StyleBox["2.0726503871084914`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2.0726503871084914`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1126$2612, 
                    FEPrivate`Not[DynamicChart`click$1126$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1126$2612, {{{1., 0}, {
                    0, 1.}}, {-0.1912556167423757, 0.05849178629938995}}, {{1,
                     0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1126$2612}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.8150939527766174`, 
                    0.8399011504896005}, {-1.9966033480542793`, 
                    0.9238912655385606}}], 
                    LineBox[{{-1.9966033480542793`, 
                    0.9238912655385606}, {-2.2, 0.9238912655385606}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.8150939527766174`, 0.8399011504896005},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyLexAllocateToken\\n(2.2 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 0.9238912655385606}, \
{1, 0}]}}},
                    StatusArea[#, 2.220184350189126]& ,
                    TagBoxNote->"2.220184350189126"],
                    StyleBox["2.220184350189126`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[2.220184350189126, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1130$2612, 
                    FEPrivate`Not[DynamicChart`click$1130$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1130$2612, {{{1., 0}, {
                    0, 1.}}, {-0.18150939527766174`, 0.08399011504896005}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1130$2612}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.6362566607065432`, 
                    1.150071363130772}, {-1.7998823267771977`, 
                    1.2650784994438493`}}], 
                    LineBox[{{-1.7998823267771977`, 
                    1.2650784994438493`}, {-2.2, 1.2650784994438493`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.6362566607065432`, 1.150071363130772},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"genNoisyIrNode\\n(3.4 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 1.2650784994438493`}, \
{1, 0}]}}},
                    StatusArea[#, 3.4134605682972383`]& ,
                    TagBoxNote->"3.4134605682972383"],
                    StyleBox["3.4134605682972383`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.4134605682972383`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1134$2612, 
                    FEPrivate`Not[DynamicChart`click$1134$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1134$2612, {{{1., 0}, {
                    0, 1.}}, {-0.16362566607065432`, 0.1150071363130772}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1134$2612}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.334586381946738, 
                    1.4895902755866512`}, {-1.468045020141412, 
                    1.6385493031453164`}}], 
                    LineBox[{{-1.468045020141412, 1.6385493031453164`}, {-2.2,
                     1.6385493031453164`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.334586381946738, 1.4895902755866512`},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"flexfree\\n(3.7 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 1.6385493031453164`}, \
{1, 0}]}}},
                    StatusArea[#, 3.738872359205589]& ,
                    TagBoxNote->"3.738872359205589"],
                    StyleBox["3.738872359205589`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.738872359205589, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1138$2612, 
                    FEPrivate`Not[DynamicChart`click$1138$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1138$2612, {{{1., 0}, {
                    0, 1.}}, {-0.13345863819467382`, 
                    0.14895902755866514`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$1138$2612}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-0.8890628524743638, 
                    1.7915265123213073`}, {-0.9779691377218003, 
                    1.9706791635534382`}}], 
                    LineBox[{{-0.9779691377218003, 
                    1.9706791635534382`}, {-2.2, 1.9706791635534382`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-0.8890628524743638, 1.7915265123213073`},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyInit\\n(4.7 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 1.9706791635534382`}, \
{1, 0}]}}},
                    StatusArea[#, 4.744031563598424]& ,
                    TagBoxNote->"4.744031563598424"],
                    StyleBox["4.744031563598424`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4.744031563598424, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1142$2612, 
                    FEPrivate`Not[DynamicChart`click$1142$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1142$2612, {{{1., 0}, {
                    0, 1.}}, {-0.08890628524743638, 0.17915265123213076`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1142$2612}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-0.04994930827846242, 
                    1.9993761693594587`}, {-0.05494423910630866, 
                    2.199313786295405}}], 
                    LineBox[{{-0.05494423910630866, 2.199313786295405}, {-2.2,
                     2.199313786295405}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-0.04994930827846242, 1.9993761693594587`},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyLexPeek\\n(8.9 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 2.199313786295405}, {1, 0}]}}},
                    StatusArea[#, 8.948226341314665]& ,
                    TagBoxNote->"8.948226341314665"],
                    StyleBox["8.948226341314665`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[8.948226341314665, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1146$2612, 
                    FEPrivate`Not[DynamicChart`click$1146$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1146$2612, {{{1., 0}, {
                    0, 1.}}, {-0.004994930827846242, 0.1999376169359459}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1146$2612}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{1.8605558245992018`, 
                    0.7337111308614477}, {2.046611407059122, 
                    0.8070822439475925}}], 
                    LineBox[{{2.046611407059122, 0.8070822439475925}, {2.2, 
                    0.8070822439475925}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{1.8605558245992018`, 0.7337111308614477},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyConsolePrintBuffers\\n(29.4 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {2.2800000000000002`, 0.8070822439475925}, \
{-1, 0}]}}},
                    StatusArea[#, 29.39827219343541]& ,
                    TagBoxNote->"29.39827219343541"],
                    StyleBox["29.39827219343541`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[29.39827219343541, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1150$2612, 
                    FEPrivate`Not[DynamicChart`click$1150$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1150$2612, {{{1., 0}, {0, 1.}}, {
                    0.18605558245992018`, 0.07337111308614477}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1150$2612}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{-0.5525159359598851, -1.9221670428218178`}, \
{-0.6077675295558737, -2.1143837471039997`}}], 
                    LineBox[{{-0.6077675295558737, -2.1143837471039997`}, \
{-2.2, -2.1143837471039997`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-0.5525159359598851, -1.9221670428218178`},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"Other\\n(40.6 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, -2.1143837471039997`}, \
{1, 0}]}}},
                    StatusArea[#, 40.570046121179644`]& ,
                    TagBoxNote->"40.570046121179644"],
                    StyleBox["40.570046121179644`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[40.570046121179644`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1154$2612, 
                    FEPrivate`Not[DynamicChart`click$1154$2612]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1154$2612, {{{1., 0}, {
                    0, 1.}}, {-0.05525159359598852, -0.1922167042821818}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$1154$2612}]]}, {}}, {}}},
                DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
              ContentSelectable->False,
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImagePadding->{{150, 150}, {0, 0}},
              ImageSize->{600, 300},
              LabelStyle->{
                GrayLevel[0], FontFamily -> "Arial"},
              
              PlotLabel->FormBox[
               "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm],
              PlotRange->{{-2.4, 2.4}, {-2.4, 2.4}},
              PlotRangePadding->Scaled[0.1],
              Ticks->None], {320., -157.5}, 
             ImageScaled[{0.5, 0.5}], {600, 300}], InsetBox[
             TemplateBox[{GraphicsBox[{{
                  Opacity[0], 
                  
                  PointBox[{
                   0.43467889908256874`, -0.4136653968993862}]}, {{}, {{{}, \
{{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.6330275229357798, -0.4136653968993862}, {
                    1.5504587155963303`, 0.5863346031006138}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 1.7973881854742573`]& , TagBoxNote -> 
                    "1.7973881854742573"], 
                    StyleBox[
                    "1.7973881854742573`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[1.7973881854742573`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.99048, 0.6546373333333334, 0.2701484444444444]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.6330275229357798`, -0.4136653968993862}, {
                    2.5504587155963305`, 0.6043835519361861}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 1.8301236848812068`]& , TagBoxNote -> 
                    "1.8301236848812068"], 
                    StyleBox[
                    "1.8301236848812068`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[1.8301236848812068`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.998096, 0.5661274666666667, 0.2140296888888889]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.6330275229357802`, -0.4136653968993862}, {
                    3.5504587155963305`, 0.7288281685351417}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 2.0726503871084914`]& , TagBoxNote -> 
                    "2.0726503871084914"], 
                    StyleBox[
                    "2.0726503871084914`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[2.0726503871084914`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{3.6330275229357802`, -0.4136653968993862}, {
                    4.5504587155963305`, 0.7975902330622385}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 2.220184350189126]& , TagBoxNote -> 
                    "2.220184350189126"], 
                    StyleBox[
                    "2.220184350189126`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[2.220184350189126, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.8320000000000001, 0.49048888888888886`, 0.2]], 
                    
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{4.63302752293578, -0.4136653968993862}, {
                    5.5504587155963305`, 1.2277266061168557`}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 3.4134605682972383`]& , TagBoxNote -> 
                    "3.4134605682972383"], 
                    StyleBox[
                    "3.4134605682972383`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[3.4134605682972383`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.7598801777777778, 0.4773333333333333, 
                    0.3161064888888889]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5.63302752293578, -0.4136653968993862}, {
                    6.5504587155963305`, 1.3187840577298948`}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 3.738872359205589]& , TagBoxNote -> 
                    "3.738872359205589"], 
                    StyleBox[
                    "3.738872359205589`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[3.738872359205589, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{6.63302752293578, -0.4136653968993862}, {
                    7.5504587155963305`, 1.5568873150456397`}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 4.744031563598424]& , TagBoxNote -> 
                    "4.744031563598424"], 
                    StyleBox[
                    "4.744031563598424`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[4.744031563598424, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.6558762666666667, 0.4926222222222222, 
                    0.7345293333333333]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{7.63302752293578, -0.4136653968993862}, {
                    8.550458715596331, 2.1914553384928857`}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 8.948226341314665]& , TagBoxNote -> 
                    "8.948226341314665"], 
                    StyleBox[
                    "8.948226341314665`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[8.948226341314665, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.5775381333333334, 0.5239111111111111, 
                    0.7827298666666667]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{8.63302752293578, -0.4136653968993862}, {
                    9.550458715596331, 3.380935903686906}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 29.39827219343541]& , TagBoxNote -> 
                    "29.39827219343541"], 
                    StyleBox[
                    "29.39827219343541`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[29.39827219343541, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{9.63302752293578, -0.4136653968993862}, {
                    10.550458715596331`, 3.703030014047378}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 40.570046121179644`]& , TagBoxNote -> 
                    "40.570046121179644"], 
                    StyleBox[
                    "40.570046121179644`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[40.570046121179644`, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}}, {
                AspectRatio -> 0.6666666666666666, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, 
                 AxesOrigin -> {0.43467889908256874`, -0.4136653968993862}, 
                 CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}, Frame -> True, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[FontSize -> 15, FontFamily -> "Helvetica"], 
                 FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], 
                    
                    Charting`ScaledFrameTicks[{Log, Exp}]}, {{{
                    1.091743119266055, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    2.091743119266055, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    3.0917431192660554`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    4.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    5.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    6.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    7.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    8.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    9.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    10.091743119266056`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}, {{
                    1.091743119266055, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    2.091743119266055, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    3.0917431192660554`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    4.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    5.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    6.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    7.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    8.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    9.091743119266056, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    10.091743119266056`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
                 GridLines -> {None, 
                   Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
                 Directive[
                   GrayLevel[0.4, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]], ImagePadding -> 40, ImageSize -> 
                 300, PlotLabel -> 
                 FormBox[
                  "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                 PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {None, 
                    Scaled[0.05]}}, Ticks -> {None, 
                   Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
                FormBox[
                 
                 TemplateBox[{
                  "\"noisyLexGet (1.8 %)\"", "\"noisyLexPut (1.8 %)\"", 
                   "\"noisyLexAllocateSourceInfo (2.1 %)\"", 
                   "\"noisyLexAllocateToken (2.2 %)\"", 
                   "\"genNoisyIrNode (3.4 %)\"", "\"flexfree (3.7 %)\"", 
                   "\"noisyInit (4.7 %)\"", "\"noisyLexPeek (8.9 %)\"", 
                   "\"noisyConsolePrintBuffers (29.4 %)\"", 
                   "\"Other (40.6 %)\""}, "SwatchLegend", 
                  DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.99048, 0.6546373333333334, 0.2701484444444444]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.998096, 0.5661274666666667, 0.2140296888888889]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.928, 0.5210666666666667, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.8320000000000001, 0.49048888888888886`, 0.2]], 
                    
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.7598801777777778, 0.4773333333333333, 
                    0.3161064888888889]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.6558762666666667, 0.4926222222222222, 
                    0.7345293333333333]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[
                    0.5775381333333334, 0.5239111111111111, 
                    0.7827298666666667]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.63]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #10}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    
                    Directive[], 
                    Directive[], FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False], TraditionalForm]& ), 
                  InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.99048, 0.6546373333333334, 0.2701484444444444], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.66032, 0.436424888888889, 0.18009896296296296`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.99048, 0.6546373333333334, \
0.2701484444444444]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.99048, 0.6546373333333334, 0.2701484444444444]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.99048, 0.6546373333333334, 0.2701484444444444],
                     Editable -> False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.998096, 0.5661274666666667, 0.2140296888888889], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6653973333333334, 0.3774183111111111, 
                    0.14268645925925927`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.998096, 0.5661274666666667, \
0.2140296888888889]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.998096, 0.5661274666666667, 
                    0.2140296888888889]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.998096, 0.5661274666666667, 0.2140296888888889], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.928, 0.5210666666666667, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6186666666666667, 0.3473777777777778, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.928, 0.5210666666666667, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.928, 0.5210666666666667, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.928, 0.5210666666666667, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8320000000000001, 0.49048888888888886`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.5546666666666668, 0.3269925925925926, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8320000000000001, 0.49048888888888886, 0.2]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8320000000000001, 0.49048888888888886`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.8320000000000001, 0.49048888888888886`, 0.2], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.7598801777777778, 0.4773333333333333, 
                    0.3161064888888889], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.5065867851851853, 0.3182222222222222, 
                    0.2107376592592593], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7598801777777778, 0.4773333333333333, \
0.3161064888888889]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7598801777777778, 0.4773333333333333, 
                    0.3161064888888889]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.7598801777777778, 0.4773333333333333, 
                    0.3161064888888889], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.4744270222222222, 0.32106666666666667`, 
                    0.36554631111111113`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7116405333333333, 0.4816, \
0.5483194666666666]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.7116405333333333, 0.4816, 0.5483194666666666], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.6558762666666667, 0.4926222222222222, 
                    0.7345293333333333], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.43725084444444445`, 0.3284148148148148, 
                    0.4896862222222222], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6558762666666667, 0.4926222222222222, \
0.7345293333333333]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6558762666666667, 0.4926222222222222, 
                    0.7345293333333333]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.6558762666666667, 0.4926222222222222, 
                    0.7345293333333333], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.5775381333333334, 0.5239111111111111, 
                    0.7827298666666667], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.38502542222222225`, 0.34927407407407407`, 
                    0.5218199111111111], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5775381333333334, 0.5239111111111111, \
0.7827298666666667]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5775381333333334, 0.5239111111111111, 
                    0.7827298666666667]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.5775381333333334, 0.5239111111111111, 
                    0.7827298666666667], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.63`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.3328, 0.37013333333333337`, 0.5539536], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9, ",", #10}], "}"}]}], "}"}], 
                    ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "None", "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", 
                    ",", "Automatic", ",", "Automatic", ",", "Automatic", ",",
                     "Automatic", ",", "Automatic", ",", "Automatic", ",", 
                    "Automatic"}], "}"}]}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", "]"}], ",", 
                    RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                TraditionalForm]},
              "Legended",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> Automatic, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              Editable->True,
              InterpretationFunction->(FormBox[
                RowBox[{"Legended", "(", 
                  RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
                TraditionalForm]& )], {960., -157.5}, {
             Center, Center}, {600., 300.}]}, {}},
          ContentSelectable->True,
          ImageSize->{1292., 327.},
          PlotRangePadding->{6, 5}]},
        {
         GraphicsBox[{{}, {InsetBox[
             GraphicsBox[{{}, {}, 
               
               DynamicModuleBox[{DynamicChart`click$1439$2755 = False, 
                DynamicChart`click$1443$2755 = False, 
                DynamicChart`click$1447$2755 = False, 
                DynamicChart`click$1451$2755 = False, 
                DynamicChart`click$1455$2755 = False, 
                DynamicChart`click$1459$2755 = False, 
                DynamicChart`click$1463$2755 = False, 
                DynamicChart`click$1467$2755 = False, 
                DynamicChart`click$1471$2755 = False}, {
                 {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
                  0.5]}], {{{}, {
                    {RGBColor[
                    0.4549019607843137, 0.050980392156862744`, 
                    0.023529411764705882`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.9812089121299387, 
                    0.19294836292848486`}, {-0.9952911413576278, 
                    0.0969306140237989}, {-1., 
                    1.2246467991473532`*^-16}, {-2., 
                    2.4492935982947064`*^-16}, {-1.9905822827152555`, 
                    0.1938612280475978}, {-1.9624178242598773`, 
                    0.3858967258569697}}]},
                    
                    ImageSizeCache->{{213.7606933090101, 
                    263.2393066909899}, {-145.2393066909899, \
-121.7606933090101}}], {}},
                    StatusArea[#, 3.0243809193242708`]& ,
                    TagBoxNote->"3.0243809193242708"],
                    StyleBox["3.0243809193242708`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.0243809193242708`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1439$2755, 
                    FEPrivate`Not[DynamicChart`click$1439$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1439$2755, {{{1., 0}, {
                    0, 1.}}, {-0.19905822827152556`, 
                    0.019386122804759782`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$1439$2755}]]}, 
                    {RGBColor[0.6784313725490196, 0.3137254901960784, 0.], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.9241970664693847, 
                    0.38191593620767333`}, {-0.9573767136076936, 
                    0.2888422203240589}, {-0.9812089121299387, 
                    0.19294836292848486`}, {-1.9624178242598773`, 
                    0.3858967258569697}, {-1.9147534272153872`, 
                    0.5776844406481177}, {-1.8483941329387694`, 
                    0.7638318724153467}}]},
                    
                    ImageSizeCache->{{215.7606933090101, 
                    266.2393066909899}, {-160.2393066909899, \
-129.7606933090101}}], {}},
                    StatusArea[#, 3.079463411014738]& ,
                    TagBoxNote->"3.079463411014738"],
                    StyleBox["3.079463411014738`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.079463411014738, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1443$2755, 
                    FEPrivate`Not[DynamicChart`click$1443$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1443$2755, {{{1., 0}, {
                    0, 1.}}, {-0.19147534272153874`, 
                    0.057768444064811776`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$1443$2755}]]}, 
                    {RGBColor[
                    0.9058823529411765, 0.6392156862745098, 
                    0.07058823529411765], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.816328786386933, 
                    0.5775874933860992}, {-0.8571238896379039, 
                    0.5151103161576075}, {-0.8931468372441947, 
                    0.44976519109496665`}, {-0.9241970664693847, 
                    0.38191593620767333`}, {-1.8483941329387694`, 
                    0.7638318724153467}, {-1.7862936744883895`, 
                    0.8995303821899333}, {-1.7142477792758077`, 
                    1.030220632315215}, {-1.632657572773866, 
                    1.1551749867721983`}}]},
                    
                    ImageSizeCache->{{219.7606933090101, 
                    269.2393066909899}, {-176.2393066909899, \
-136.7606933090101}}], {}},
                    StatusArea[#, 3.4875517341552946`]& ,
                    TagBoxNote->"3.4875517341552946"],
                    StyleBox["3.4875517341552946`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.4875517341552946`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1447$2755, 
                    FEPrivate`Not[DynamicChart`click$1447$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1447$2755, {{{1., 0}, {
                    0, 1.}}, {-0.17514901092355165`, 0.09655477187846072}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1447$2755}]]}, 
                    {RGBColor[
                    0.16470588235294117`, 0.41568627450980394`, 
                    0.11764705882352941`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.6557583377558831, 
                    0.7549708619964357}, {-0.7139568144777465, 
                    0.7001897364720427}, {-0.7675945105039962, 
                    0.6409357748200131}, {-0.816328786386933, 
                    0.5775874933860992}, {-1.632657572773866, 
                    1.1551749867721983`}, {-1.5351890210079924`, 
                    1.2818715496400261`}, {-1.427913628955493, 
                    1.4003794729440855`}, {-1.3115166755117662`, 
                    1.5099417239928714`}}]},
                    
                    ImageSizeCache->{{228.7606933090101, 
                    276.2393066909899}, {-191.2393066909899, \
-145.7606933090101}}], {}},
                    StatusArea[#, 3.73580022410274]& ,
                    TagBoxNote->"3.73580022410274"],
                    StyleBox["3.73580022410274`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.73580022410274, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1451$2755, 
                    FEPrivate`Not[DynamicChart`click$1451$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1451$2755, {{{1., 0}, {
                    0, 1.}}, {-0.1482735768950968, 0.13421976901609473`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1451$2755}]]}, 
                    {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.3395528166874012, 
                    0.940586989427162}, {-0.4246975014003262, 
                    0.9053353148443509}, {-0.5062355284157768, 
                    0.8623952630723335}, {-0.5834744525185053, 
                    0.812131493822417}, {-0.6557583377558831, 
                    0.7549708619964357}, {-1.3115166755117662`, 
                    1.5099417239928714`}, {-1.1669489050370105`, 
                    1.624262987644834}, {-1.0124710568315536`, 
                    1.724790526144667}, {-0.8493950028006524, 
                    1.8106706296887018`}, {-0.6791056333748025, 
                    1.881173978854324}}]},
                    
                    ImageSizeCache->{{242.7606933090101, 
                    290.2393066909899}, {-206.2393066909899, \
-152.7606933090101}}], {}},
                    StatusArea[#, 5.74367022942235]& ,
                    TagBoxNote->"5.74367022942235"],
                    StyleBox["5.74367022942235`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[5.74367022942235, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1455$2755, 
                    FEPrivate`Not[DynamicChart`click$1455$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1455$2755, {{{1., 0}, {
                    0, 1.}}, {-0.10124710568315537`, 
                    0.17247905261446672`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$1455$2755}]]}, 
                    {RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{0.05742537439976045, 
                    0.9983498016101607}, {-0.023320584584498868`, 
                    0.9997280381857044}, {-0.10391445116034045`, 
                    0.9945862390160268}, {-0.18383060748886293`, 
                    0.9829579379354315}, {-0.26254785562824623`, 
                    0.9649189725075414}, {-0.3395528166874012, 
                    0.940586989427162}, {-0.6791056333748025, 
                    1.881173978854324}, {-0.5250957112564925, 
                    1.9298379450150829`}, {-0.36766121497772586`, 
                    1.965915875870863}, {-0.2078289023206809, 
                    1.9891724780320537`}, {-0.046641169168997736`, 
                    1.9994560763714089`}, {0.1148507487995209, 
                    1.9966996032203215`}}]},
                    
                    ImageSizeCache->{{268.7606933090101, 
                    309.2393066909899}, {-212.2393066909899, \
-160.7606933090101}}], {}},
                    StatusArea[#, 6.291225409377354]& ,
                    TagBoxNote->"6.291225409377354"],
                    StyleBox["6.291225409377354`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6.291225409377354, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1459$2755, 
                    FEPrivate`Not[DynamicChart`click$1459$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1459$2755, {{{1., 0}, {
                    0, 1.}}, {-0.028797992319440344`, 0.1979158296811285}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1459$2755}]]}, 
                    {RGBColor[
                    0.6392156862745098, 0.5607843137254902, 
                    0.7529411764705882], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{0.5395811322573052, 0.8419336088504393}, {
                    0.4657887645337536, 0.8848959412462685}, {
                    0.38860029574270477`, 0.9214064304901949}, {
                    0.30857851284086485`, 0.9511988758471701}, {
                    0.22630686069214748`, 0.9740560583476009}, {
                    0.14238518812709858`, 0.9898113245472648}, {
                    0.05742537439976045, 0.9983498016101607}, {
                    0.1148507487995209, 1.9966996032203215`}, {
                    0.2847703762541967, 1.9796226490945297`}, {
                    0.45261372138429495`, 1.9481121166952018`}, {
                    0.6171570256817297, 1.9023977516943402`}, {
                    0.7772005914854095, 1.8428128609803898`}, {
                    0.9315775290675069, 1.7697918824925372`}, {
                    1.0791622645146104`, 1.6838672177008787`}}]},
                    
                    ImageSizeCache->{{299.7606933090101, 
                    349.2393066909899}, {-212.2393066909899, \
-156.7606933090101}}], {}},
                    StatusArea[#, 7.982559726146955]& ,
                    TagBoxNote->"7.982559726146955"],
                    StyleBox["7.982559726146955`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7.982559726146955, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1463$2755, 
                    FEPrivate`Not[DynamicChart`click$1463$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1463$2755, {{{1., 0}, {0, 1.}}, {
                    0.06171570256817297, 0.19023977516943402`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1463$2755}]]}, 
                    {RGBColor[
                    0.1450980392156863, 0.11372549019607843`, 
                    0.16470588235294117`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJxTTMoPSmViYGAQA2IQ7V7ZzWP6+7399U+VHC+bFtqrm1ke+7jzvX1O9Q4X
qy0H7F9ozre6qfPePuJXkdLZ+2fsw498XmkT+s7eesOF77rJV+ybT6QWyJu+
tT8xc270LtVb9vmHPcyMzr+237BE3+b4yvv23vacTWfUXtlbnD64V6jwkf1m
OffdT+xf2E9ftKxA9+ETe8PHupvY5J/Zy0a8/xYv/9y+OnzdQY+Tj+0b1my8
5av20t5n3aRl9i4P7f/75R6Q+/gKyv8I5f+Cqv8MVf8Tat43qHnf7beA7fth
Pw1s3xd7H7B7ftmbg93zCere31D3vrdvAfvnr/0xsH9eQf37z94S7N8n0PD4
bx8GDo870PD6b58NDq8L9pDw/A8Nz432AIb7t+g=
                    "]]},
                    
                    ImageSizeCache->{{319.7606933090101, 
                    387.2393066909899}, {-198.2393066909899, \
-122.7606933090101}}], {}},
                    StatusArea[#, 15.056761375855004`]& ,
                    TagBoxNote->"15.056761375855004"],
                    StyleBox["15.056761375855004`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[15.056761375855004`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1467$2755, 
                    FEPrivate`Not[DynamicChart`click$1467$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1467$2755, {{{1., 0}, {0, 1.}}, {
                    0.17380849953153435`, 0.09894748855123421}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1467$2755}]]}, 
                    {RGBColor[0.9411764705882353, 0., 0.00784313725490196], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJwtlHsslXEYx0kbYUPH2KyshNlcc1mj7NfoZlZzG5uhWNQqrH+KkjootxRK
MhVnuSuxRUSew9wvE04OyeWgc47jnPNyjiGX81bved7t3bvf9tvv9zzP9/N5
j0bFB0Tv09DQ8Pr3/v+qn1XQDjN2sa7gtJ2rNftcz6egqiU5LyK8BUqt4yNs
LlNg2PtO46ZnP2SkOVW/KpRDSqCm3oWeMVjdbAxXpMhgJPnxj5z2SbCv7L29
fkwKypoTxUkJs6Bv+NXWKFkCQ6nb+eMKAUBTSVx8gRjmC/3HnZKWoLzrwZnZ
OCF0ZJ5kKUaFcE8yw+0zWIIbSrNwN7kYDCy9Q22SBZDgYPOielACkR0DLSuP
ZmAopYBXHC0Foyri7tzKh6Iq3SCtZhkU8XzNP7WMgmV7GTsb5HAq8NKytmkv
3PWfi3uTSIE5m7bS02yEpxbeIZFLFFikmchyU/MIK/2q57CKgg/cgbrBL9/I
qEl+7ts+CianAxwkkYPE/2IGL9SLgoZrHlqJo+OkrjTVJyRWDu5T93UMuFOk
N4P1utZXBoUPm326Y+dIeYxR5vH5FXCeDvpoHbNAqp4f4Cc5SGD27R0rQ9ES
mchxsB3zEMMzH9dwPxcRYc1lhR3SFUKwcYnf4bPLhM/O0J/nLII0huN52nSF
xEbt59rrCCDYrrXHolxK0ttEjlbpvyCys5L9UyIjFauupQZNE8ArG+E5/5YT
u6z+0M7a72ARWKvbmEcRqbLuiETeBW7K9id1coqI/Q9qW72vh/OJ2fpuOxTh
KxJ1llM4RL2mcd1A1PtpImX2c/E8mlDMeTy8T0Ucmfvm4QpTzx6pYeoRQghT
7y5JY+qVgozpZ4fcYvpZw37/YL9KnMcmzmMD57WO89rCeSpINTPPbXjJzJsi
Fcy8dzCPZcxjD/NaxLxUmOc05klj3sOYN408cJAHGnnpRl5o5ImPPNHImwB5
UyGPIuRxD64zvMpggOF1F3leQ563kfd15H0LfdhAHzbQly30ZR192kaf1tC3
XfRNjj7uoY9i9FWFvi6gzzT6PAVq32n0vR/wh8BV/w8a2v4C5AlIPg==
                    
                    "]]},
                    
                    ImageSizeCache->{{213.7606933090101, 
                    387.2393066909899}, {-131.2393066909899, \
-37.760693309010094`}}], {}},
                    StatusArea[#, 49.46709575676175]& ,
                    TagBoxNote->"49.46709575676175"],
                    StyleBox["49.46709575676175`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[49.46709575676175, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1471$2755, 
                    FEPrivate`Not[DynamicChart`click$1471$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1471$2755, {{{1., 0}, {0, 1.}}, {
                    0.003420689481868801, -0.1999707450690441}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$1471$2755}]]}}}, {}}, {}}, {{{
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    StyleBox[{LineBox[{{-1.9905822827152555`, 
                    0.1938612280475978}, {-2.189640510986781, 
                    0.2132473508523576}}], 
                    LineBox[{{-2.189640510986781, 0.2132473508523576}, {-2.2, 
                    0.2132473508523576}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.9905822827152555`, 0.1938612280475978},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyLexGet\\n(3.0 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 0.2132473508523576}, \
{1, 0}]}}},
                    StatusArea[#, 3.0243809193242708`]& ,
                    TagBoxNote->"3.0243809193242708"],
                    StyleBox["3.0243809193242708`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.0243809193242708`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1439$2755, 
                    FEPrivate`Not[DynamicChart`click$1439$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1439$2755, {{{1., 0}, {
                    0, 1.}}, {-0.19905822827152556`, 
                    0.019386122804759782`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$1439$2755}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.9147534272153872`, 
                    0.5776844406481177}, {-2.106228769936926, 
                    0.6354528847129296}}], 
                    LineBox[{{-2.106228769936926, 0.6354528847129296}, {-2.2, 
                    0.6354528847129296}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.9147534272153872`, 0.5776844406481177},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyLexPut\\n(3.1 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 0.6354528847129296}, \
{1, 0}]}}},
                    StatusArea[#, 3.079463411014738]& ,
                    TagBoxNote->"3.079463411014738"],
                    StyleBox["3.079463411014738`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.079463411014738, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1443$2755, 
                    FEPrivate`Not[DynamicChart`click$1443$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1443$2755, {{{1., 0}, {
                    0, 1.}}, {-0.19147534272153874`, 
                    0.057768444064811776`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$1443$2755}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.7514901092355164`, 
                    0.9655477187846071}, {-1.9266391201590682`, 
                    1.0621024906630678`}}], 
                    LineBox[{{-1.9266391201590682`, 
                    1.0621024906630678`}, {-2.2, 1.0621024906630678`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.7514901092355164`, 0.9655477187846071},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyLexAllocateSourceInfo\\n(3.5 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 1.0621024906630678`}, \
{1, 0}]}}},
                    StatusArea[#, 3.4875517341552946`]& ,
                    TagBoxNote->"3.4875517341552946"],
                    StyleBox["3.4875517341552946`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.4875517341552946`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1447$2755, 
                    FEPrivate`Not[DynamicChart`click$1447$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1447$2755, {{{1., 0}, {
                    0, 1.}}, {-0.17514901092355165`, 0.09655477187846072}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1447$2755}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.482735768950968, 
                    1.3421976901609471`}, {-1.6310093458460648`, 
                    1.476417459177042}}], 
                    LineBox[{{-1.6310093458460648`, 1.476417459177042}, {-2.2,
                     1.476417459177042}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.482735768950968, 1.3421976901609471`},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyLexAllocateToken\\n(3.7 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 1.476417459177042}, {1, 0}]}}},
                    StatusArea[#, 3.73580022410274]& ,
                    TagBoxNote->"3.73580022410274"],
                    StyleBox["3.73580022410274`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.73580022410274, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1451$2755, 
                    FEPrivate`Not[DynamicChart`click$1451$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1451$2755, {{{1., 0}, {
                    0, 1.}}, {-0.1482735768950968, 0.13421976901609473`}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1451$2755}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.0124710568315536`, 
                    1.724790526144667}, {-1.113718162514709, 
                    1.8972695787591338`}}], 
                    LineBox[{{-1.113718162514709, 1.8972695787591338`}, {-2.2,
                     1.8972695787591338`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.0124710568315536`, 1.724790526144667},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"genNoisyIrNode\\n(5.7 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 1.8972695787591338`}, \
{1, 0}]}}},
                    StatusArea[#, 5.74367022942235]& ,
                    TagBoxNote->"5.74367022942235"],
                    StyleBox["5.74367022942235`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[5.74367022942235, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1455$2755, 
                    FEPrivate`Not[DynamicChart`click$1455$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1455$2755, {{{1., 0}, {
                    0, 1.}}, {-0.10124710568315537`, 
                    0.17247905261446672`}}, {{1, 0}, {0, 1}}, {{1, 0}, {0, 
                    1}}], TrackedSymbols :> {DynamicChart`click$1455$2755}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-0.2879799231944034, 
                    1.9791582968112849`}, {-0.31677791551384377`, 
                    2.1770741264924136`}}], 
                    LineBox[{{-0.31677791551384377`, 
                    2.1770741264924136`}, {-2.2, 2.1770741264924136`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-0.2879799231944034, 1.9791582968112849`},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"flexfree\\n(6.3 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 2.1770741264924136`}, \
{1, 0}]}}},
                    StatusArea[#, 6.291225409377354]& ,
                    TagBoxNote->"6.291225409377354"],
                    StyleBox["6.291225409377354`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[6.291225409377354, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1459$2755, 
                    FEPrivate`Not[DynamicChart`click$1459$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1459$2755, {{{1., 0}, {
                    0, 1.}}, {-0.028797992319440344`, 0.1979158296811285}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1459$2755}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{0.6171570256817297, 
                    1.9023977516943402`}, {0.6788727282499027, 
                    2.0926375268637742`}}], 
                    LineBox[{{0.6788727282499027, 2.0926375268637742`}, {2.2, 
                    2.0926375268637742`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{0.6171570256817297, 1.9023977516943402`},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyInit\\n(8.0 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {2.2800000000000002`, 2.0926375268637742`}, \
{-1, 0}]}}},
                    StatusArea[#, 7.982559726146955]& ,
                    TagBoxNote->"7.982559726146955"],
                    StyleBox["7.982559726146955`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[7.982559726146955, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1463$2755, 
                    FEPrivate`Not[DynamicChart`click$1463$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1463$2755, {{{1., 0}, {0, 1.}}, {
                    0.06171570256817297, 0.19023977516943402`}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1463$2755}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{1.7380849953153434`, 
                    0.9894748855123421}, {1.911893494846878, 
                    1.0884223740635763`}}], 
                    LineBox[{{1.911893494846878, 1.0884223740635763`}, {2.2, 
                    1.0884223740635763`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{1.7380849953153434`, 0.9894748855123421},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyLexPeek\\n(15.1 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {2.2800000000000002`, 1.0884223740635763`}, \
{-1, 0}]}}},
                    StatusArea[#, 15.056761375855004`]& ,
                    TagBoxNote->"15.056761375855004"],
                    StyleBox["15.056761375855004`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[15.056761375855004`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1467$2755, 
                    FEPrivate`Not[DynamicChart`click$1467$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1467$2755, {{{1., 0}, {0, 1.}}, {
                    0.17380849953153435`, 0.09894748855123421}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1467$2755}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{
                    0.03420689481868801, -1.999707450690441}, {
                    0.037627584300556814`, -2.1996781957594855`}}], 
                    LineBox[{{0.037627584300556814`, -2.1996781957594855`}, {
                    2.2, -2.1996781957594855`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{0.03420689481868801, -1.999707450690441},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"noisyConsolePrintBuffers\\n(49.5 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {2.2800000000000002`, -2.1996781957594855`}, \
{-1, 0}]}}},
                    StatusArea[#, 49.46709575676175]& ,
                    TagBoxNote->"49.46709575676175"],
                    StyleBox["49.46709575676175`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[49.46709575676175, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1471$2755, 
                    FEPrivate`Not[DynamicChart`click$1471$2755]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1471$2755, {{{1., 0}, {0, 1.}}, {
                    0.003420689481868801, -0.1999707450690441}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$1471$2755}]]}, {}}, {}}},
                DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
              ContentSelectable->False,
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImagePadding->{{150, 150}, {0, 0}},
              ImageSize->{600, 300},
              LabelStyle->{
                GrayLevel[0], FontFamily -> "Arial"},
              
              PlotLabel->FormBox[
               "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm],
              PlotRange->{{-2.4, 2.4}, {-2.4, 2.4}},
              PlotRangePadding->Scaled[0.1],
              Ticks->None], {320., -157.5}, 
             ImageScaled[{0.5, 0.5}], {600, 300}], InsetBox[
             TemplateBox[{GraphicsBox[{{
                  Opacity[0], 
                  
                  PointBox[{0.45503208065994505`, 
                   0.10670641576932383`}]}, {{}, {{{}, {{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.6333638863428048, 0.10670641576932383`}, {
                    1.5499541704857929`, 1.1067064157693238`}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 3.0243809193242708`]& , TagBoxNote -> 
                    "3.0243809193242708"], 
                    StyleBox[
                    "3.0243809193242708`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[3.0243809193242708`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[
                    0.991432, 0.6435736000000001, 0.26313359999999997`]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.6333638863428048`, 
                    0.10670641576932383`}, {2.549954170485793, 
                    1.1247553646048962`}, "RoundingRadius" -> 0]}], 
                    StatusArea[#, 3.079463411014738]& , TagBoxNote -> 
                    "3.079463411014738"], 
                    StyleBox[
                    "3.079463411014738`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[3.079463411014738, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.633363886342805, 0.10670641576932383`}, {
                    3.549954170485793, 1.2491999812038517`}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 3.4875517341552946`]& , TagBoxNote -> 
                    "3.4875517341552946"], 
                    StyleBox[
                    "3.4875517341552946`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[3.4875517341552946`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.892, 0.5096, 0.2]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{3.633363886342805, 0.10670641576932383`}, {
                    4.549954170485793, 1.3179620457309487`}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 3.73580022410274]& , TagBoxNote -> 
                    "3.73580022410274"], 
                    StyleBox["3.73580022410274`", {}, StripOnInput -> False]],
                     Annotation[#, 
                    Style[3.73580022410274, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{4.633363886342805, 0.10670641576932383`}, {
                    5.549954170485792, 1.7480984187855657`}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 5.74367022942235]& , TagBoxNote -> 
                    "5.74367022942235"], 
                    StyleBox["5.74367022942235`", {}, StripOnInput -> False]],
                     Annotation[#, 
                    Style[5.74367022942235, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.7297304, 0.48, 0.4612396]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5.633363886342804, 0.10670641576932383`}, {
                    6.549954170485792, 1.8391558703986048`}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 6.291225409377354]& , TagBoxNote -> 
                    "6.291225409377354"], 
                    StyleBox[
                    "6.291225409377354`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[6.291225409377354, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{6.633363886342804, 0.10670641576932383`}, {
                    7.549954170485792, 2.07725912771435}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 7.982559726146955]& , TagBoxNote -> 
                    "7.982559726146955"], 
                    StyleBox[
                    "7.982559726146955`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[7.982559726146955, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.5873303999999999, 0.52, 0.7767048]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{7.633363886342804, 0.10670641576932383`}, {
                    8.549954170485792, 2.7118271511615957`}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 15.056761375855004`]& , TagBoxNote -> 
                    "15.056761375855004"], 
                    StyleBox[
                    "15.056761375855004`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[15.056761375855004`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{8.633363886342805, 0.10670641576932383`}, {
                    9.549954170485792, 3.9013077163556162`}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 49.46709575676175]& , TagBoxNote -> 
                    "49.46709575676175"], 
                    StyleBox[
                    "49.46709575676175`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[49.46709575676175, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}}, {
                AspectRatio -> 0.6666666666666666, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, 
                 AxesOrigin -> {0.45503208065994505`, 0.10670641576932383`}, 
                 CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}, Frame -> True, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[FontSize -> 15, FontFamily -> "Helvetica"], 
                 FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], 
                    
                    Charting`ScaledFrameTicks[{Log, Exp}]}, {{{
                    1.0916590284142988`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    2.091659028414299, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    3.0916590284142993`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    4.091659028414299, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    5.091659028414298, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    6.091659028414298, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    7.091659028414298, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    8.091659028414298, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    9.091659028414298, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}, {{
                    1.0916590284142988`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    2.091659028414299, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    3.0916590284142993`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    4.091659028414299, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    5.091659028414298, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    6.091659028414298, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    7.091659028414298, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    8.091659028414298, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    9.091659028414298, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
                 GridLines -> {None, 
                   Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
                 Directive[
                   GrayLevel[0.4, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]], ImagePadding -> 40, ImageSize -> 
                 300, PlotLabel -> 
                 FormBox[
                  "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                 PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {None, 
                    Scaled[0.05]}}, Ticks -> {None, 
                   Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
                FormBox[
                 
                 TemplateBox[{
                  "\"noisyLexGet (3.0 %)\"", "\"noisyLexPut (3.1 %)\"", 
                   "\"noisyLexAllocateSourceInfo (3.5 %)\"", 
                   "\"noisyLexAllocateToken (3.7 %)\"", 
                   "\"genNoisyIrNode (5.7 %)\"", "\"flexfree (6.3 %)\"", 
                   "\"noisyInit (8.0 %)\"", "\"noisyLexPeek (15.1 %)\"", 
                   "\"noisyConsolePrintBuffers (49.5 %)\""}, "SwatchLegend", 
                  DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[
                    0.991432, 0.6435736000000001, 0.26313359999999997`]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[1., 0.544, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.892, 0.5096, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.7297304, 0.48, 0.4612396]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.6754608, 0.4848, 0.7224792]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #7}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.5873303999999999, 0.52, 0.7767048]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #8}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.637]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #9}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    
                    Directive[], 
                    Directive[], FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False], TraditionalForm]& ), 
                  InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.991432, 0.6435736000000001, 0.26313359999999997`], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6609546666666667, 0.42904906666666676`, 
                    0.17542239999999998`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.991432, 0.6435736000000001, \
0.26313359999999997]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.991432, 0.6435736000000001, 
                    0.26313359999999997`]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.991432, 0.6435736000000001, 0.26313359999999997`], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1., 0.544, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6666666666666667, 0.3626666666666667, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[1., 0.544, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1., 0.544, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[1., 0.544, 0.2], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.892, 0.5096, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.5946666666666667, 0.3397333333333334, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.892, 0.5096, 0.2]"], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.892, 0.5096, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.892, 0.5096, 0.2], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.784, 0.47519999999999996`, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.5226666666666667, 0.31679999999999997`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.784, 0.47519999999999996, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.784, 0.47519999999999996`, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.784, 0.47519999999999996`, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.7297304, 0.48, 0.4612396], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.48648693333333337`, 0.32, 0.3074930666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.7297304, 0.48, 0.4612396]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.7297304, 0.48, 0.4612396]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.7297304, 0.48, 0.4612396], Editable -> False, 
                    Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.6754608, 0.4848, 0.7224792], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.4503072, 0.32320000000000004`, 0.4816528], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.6754608, 0.4848, 0.7224792]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.6754608, 0.4848, 0.7224792]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.6754608, 0.4848, 0.7224792], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5873303999999999, 0.52, 0.7767048], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.39155359999999995`, 0.3466666666666667, 0.5178032], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5873303999999999, 0.52, 0.7767048]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5873303999999999, 0.52, 0.7767048]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.5873303999999999, 0.52, 0.7767048], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.637`", "]"}]}], "]"}], "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.3328, 0.37013333333333337`, 0.5539536], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6, 
                    ",", #7, ",", #8, ",", #9}], "}"}]}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "None", "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", 
                    ",", "Automatic", ",", "Automatic", ",", "Automatic", ",",
                     "Automatic", ",", "Automatic", ",", "Automatic"}], 
                    "}"}]}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", "]"}], ",", 
                    RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                TraditionalForm]},
              "Legended",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> Automatic, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              Editable->True,
              InterpretationFunction->(FormBox[
                RowBox[{"Legended", "(", 
                  RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
                TraditionalForm]& )], {960., -157.5}, {
             Center, Center}, {600., 300.}]}, {}},
          ContentSelectable->True,
          ImageSize->{1292., 327.},
          PlotRangePadding->{6, 5}]},
        {
         GraphicsBox[{{}, {InsetBox[
             GraphicsBox[{{}, {}, 
               
               DynamicModuleBox[{DynamicChart`click$1660$2820 = False, 
                DynamicChart`click$1664$2820 = False, 
                DynamicChart`click$1668$2820 = False, 
                DynamicChart`click$1672$2820 = False, 
                DynamicChart`click$1676$2820 = False, 
                DynamicChart`click$1680$2820 = False}, {
                 {RGBColor[0.5, 0.5, 1.], EdgeForm[{GrayLevel[0], Opacity[
                  0.5]}], {{{}, {
                    {RGBColor[
                    0.4549019607843137, 0.050980392156862744`, 
                    0.023529411764705882`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.9718104397977221, 
                    0.2357635873076207}, {-0.9874383844645436, 
                    0.15800454704233116`}, {-0.9968546495012559, 
                    0.07925154741535477}, {-1., 
                    1.2246467991473532`*^-16}, {-2., 
                    2.4492935982947064`*^-16}, {-1.9937092990025118`, 
                    0.15850309483070954`}, {-1.9748767689290871`, 
                    0.3160090940846623}, {-1.9436208795954442`, 
                    0.4715271746152414}}]},
                    
                    ImageSizeCache->{{213.7606933090101, 
                    263.2393066909899}, {-148.2393066909899, \
-121.7606933090101}}], {}},
                    StatusArea[#, 3.6777899363700337`]& ,
                    TagBoxNote->"3.6777899363700337"],
                    StyleBox["3.6777899363700337`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.6777899363700337`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1660$2820, 
                    FEPrivate`Not[DynamicChart`click$1660$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1660$2820, {{{1., 0}, {
                    0, 1.}}, {-0.19858552010646308`, 0.02374428781929578}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1660$2820}]]}, 
                    {RGBColor[0.6784313725490196, 0.3137254901960784, 0.], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    PolygonBox[{{-0.8779220227881435, 
                    0.47880363605926657`}, {-0.9162433734395837, 
                    0.4006221169981151}, {-0.9476187968391672, 
                    0.31940353140985955`}, {-0.9718104397977221, 
                    0.2357635873076207}, {-1.9436208795954442`, 
                    0.4715271746152414}, {-1.8952375936783343`, 
                    0.6388070628197191}, {-1.8324867468791675`, 
                    0.8012442339962302}, {-1.755844045576287, 
                    0.9576072721185331}}]},
                    
                    ImageSizeCache->{{215.7606933090101, 
                    267.2393066909899}, {-168.2393066909899, \
-130.7606933090101}}], {}},
                    StatusArea[#, 4.037573734493189]& ,
                    TagBoxNote->"4.037573734493189"],
                    StyleBox["4.037573734493189`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4.037573734493189, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1664$2820, 
                    FEPrivate`Not[DynamicChart`click$1664$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1664$2820, {{{1., 0}, {
                    0, 1.}}, {-0.18656308982328668`, 0.0720708922907735}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1664$2820}]]}, 
                    {RGBColor[
                    0.9058823529411765, 0.6392156862745098, 
                    0.07058823529411765], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/YfZrv5+bP9++7DVLFz/39uv6Nx0xbNwz/5ELVUt
j7Pv7W/d3sL5KPLU/ueBzS1tAe/tnU6ziNXKXd5v2aXi/brznX3d9m9Rnx7d
2H9V7eU9r+q39l+4V9zelnNvf3nInEpl9Tf2PQvXtsRef7g/wvi8z/QJr+zN
GV64+vg92a+RziyXuvuFfab95v3hU5/tl10zqfD+6mf2ppPmvVdY/mK/83X1
yEdpT+z/zQ3IPVb3av/E+Mt/j398aC/GxvX2vfib/fdUWxl3LLkH5f+B8t9B
1f+Cqv9obwQ278d+N7B5X6D2fYPa9w3qni9Q9/yAuvcj1L2/oP55B/XPH6h/
X0D9+xcaHo+h4fEPGl63oOH1334GODzPQMPzvz0kvOdDw/u/PQCysdMc
                    
                    "]]},
                    
                    ImageSizeCache->{{223.7606933090101, 
                    303.2393066909899}, {-211.2393066909899, \
-140.7606933090101}}], {}},
                    StatusArea[#, 16.320883671747485`]& ,
                    TagBoxNote->"16.320883671747485"],
                    StyleBox["16.320883671747485`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[16.320883671747485`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1668$2820, 
                    FEPrivate`Not[DynamicChart`click$1668$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1668$2820, {{{1., 0}, {
                    0, 1.}}, {-0.10341166025450398`, 0.1711900362854306}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1668$2820}]]}, 
                    {RGBColor[
                    0.16470588235294117`, 0.41568627450980394`, 
                    0.11764705882352941`], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJxTTMoPSmViYGCQAmIQLbPdafH5/W/sTW5o7WOSvmOfcGOPWbbPa3sR78aW
wk0P7OO3dFV+nPXS/tufmxMzDB/bazYL2dusf26vcf5C3M6Wp/b+BQ9Prux9
as9l+4tdavlze77l1XeErB/bq5y++3X95Jf2V9OmbN6/54H9p9IXz6TcXtu/
4qpn3WFwx77yqtrjul1v7JdtuCN7Zfk1+/LLKsy9b9/aZ9yX4Mh6fcFekuPv
16477+wrTRwncwkes5+bU20a2freXi4na5Wy0RZ72Rnmt8qfvbf/w2xXfz+2
f7992GoWrv8w/nwo/z9U/RGo+v9Q865BzfsPte8B1L5/9ovA7nkGdc9fqHvf
QN37B+qfD1D//Ib69zPUvz/t/cDh8dWeGxwe36Hh9R0aXl/t48Dh+dP+Ozg8
P0PD+7e9KDi8P9hD4uMPND7e2AMAdsrXww==
                    "]]},
                    
                    ImageSizeCache->{{295.7606933090101, 
                    379.2393066909899}, {-212.2393066909899, \
-139.7606933090101}}], {}},
                    StatusArea[#, 17.484055664246]& ,
                    TagBoxNote->"17.484055664246"],
                    StyleBox["17.484055664246`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[17.484055664246, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1672$2820, 
                    FEPrivate`Not[DynamicChart`click$1672$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1672$2820, {{{1., 0}, {0, 1.}}, {
                    0.10460812582809259`, 0.17046154994817442`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1672$2820}]]}, 
                    {RGBColor[0.8549019607843137, 0.9607843137254902, 1.], 
                    EdgeForm[{GrayLevel[0], Opacity[0.5]}], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJxTTMoPSmViYGBQAWIQfaBx7aMph6/aL0opPntc/N1+01kvzppNv23vPeXT
lBX33+z/v8fcgm3yA/vs2LfiXfGv9//VOPJVxvCx/eS7K1S1Zr/cr/Th6d6I
+U/tZ859sP/DtOf7pX2+MK26/tzeapuA3NPwp/vVVqqtaL/y0j54ykHlhY8f
7RfZo3f+z4TX9vevSGQ6OzzYX2mhY7KV4639Um/Wj/tf3NofdETjJ7vFO/uZ
uQzn7/Ne3b810vAYg8x7+0pOjnP//5zdf/qHt3r6pvf2f54stqicfHC/2e9X
okd+vrd/d0s6tebH4v2fpvEvSP343l595T7DHX3r7NVO/l+cMPO9vcqpryvz
jI7YH3S0nTPh0zv7+WvtIzLdL9gXCNjXTP331n77hNmXmH2v2ctsd1p8fv8b
e5MbWvuYpO9A+X+g/DdQ9X/td4DVP4Oa989+Idi8B1D7/ttrgO27Yg9xz397
ebB79tlD3Psf6t7NUP/8h/rnItS//+1Lwf69Cw2Pf9DweAoNr7/Q8Hq1XxQc
nr/t74HD8wM0vH9Cw/sTND6+Q+PjKzS+vkLj6zs0Pj/bTwLH509ofH+Axvdv
aHp4DU0Pf/ZD0stTaHr5tx8AIDtDgQ==
                    "]]},
                    
                    ImageSizeCache->{{311.7606933090101, 
                    388.2393066909899}, {-164.2393066909899, \
-42.760693309010094`}}], {}},
                    StatusArea[#, 25.93667215645529]& ,
                    TagBoxNote->"25.93667215645529"],
                    StyleBox["25.93667215645529`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[25.93667215645529, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1676$2820, 
                    FEPrivate`Not[DynamicChart`click$1676$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1676$2820, {{{1., 0}, {0, 1.}}, {
                    0.18539112942400804`, -0.0750341864145318}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1676$2820}]]}, 
                    {RGBColor[
                    0.12156862745098039`, 0.5098039215686274, 
                    0.7333333333333333], EdgeForm[{GrayLevel[0], Opacity[
                    0.5]}], GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[2.5], 
                    Opacity[0.66]}], {}, {}], 
                    PolygonBox[CompressedData["
1:eJw1kl9IU2EYxkcREYSURlKRGM2K2YWzaf+ko0EXBpmFoYSsqbMaRklBmhf9
H/2BXRRSuygpCSM0IwuaMvasJrhKS9amadlsrq3O2o5u6cnN7VTf3j74+Hjh
5f2e93l+a6pP7K+dJ5PJFH/vvzd5JrGwctmmdW33zZdsOxarRwXsrje7DRdN
GHqmez6oE3Dvmny8p9aOhok7XZonIfSrTpcc3uCA70vsam9HEEpNxvTWyDCO
ykuaKrU/kbVT123Sj2GptzyycYTH8ZvGFzW6rxBjaSeHU34g8TArQ/RNgN97
PnZjkR+WwvB0T54Pry6nqla/84K/rrEUlX6H2pGZ213lwaNzdqdRyaM+nlqc
2+xGXvBBepkrAFVBsat95Sje1mn3GDcHUTqypAk1TmxXHsmXHwihxXBsrXm2
H5MVTlVFtoAhQ5He4beic8GuxgKTAJGb67tlakU48LJFHxXQMKMelx/s5FZk
5lhvTwnYt/5s/qHXNq4qMH/syl0By7PFwvaB91yj4lPHKikE64XHnmabi2vV
nhroS/9ff6M6gRTW7+bOsP4EzftA8ySUs/8s9J9EerpIj0R6B0mvhDa2z2cI
bB8JZWxfL7axfRPYwvzg8Yb5ESe/BPIrRn6Gyc8o+f2L/P5NeYiUxwzlNUt5
RZDG8oyijuU5RXnPUd5B4iFOPPiJlwTx4iGeJOLpI5K8SVAw3uwgIK1JHp+a
/wCzB4TJ
                    "]]},
                    
                    ImageSizeCache->{{213.7606933090101, 
                    332.2393066909899}, {-128.2393066909899, \
-37.760693309010094`}}], {}},
                    StatusArea[#, 29.634726413252128`]& ,
                    TagBoxNote->"29.634726413252128"],
                    StyleBox["29.634726413252128`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[29.634726413252128`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1680$2820, 
                    FEPrivate`Not[DynamicChart`click$1680$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1680$2820, {{{1., 0}, {
                    0, 1.}}, {-0.11488582571156694`, -0.16371086418002767`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$1680$2820}]]}}}, {}}, {}}, {{{
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.9858552010646306`, 
                    0.23744287819295778`}, {-2.184440721171094, 
                    0.26118716601225356`}}], 
                    LineBox[{{-2.184440721171094, 
                    0.26118716601225356`}, {-2.2, 0.26118716601225356`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.9858552010646306`, 0.23744287819295778`},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"depthFirstWalk\\n(3.7 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    FontColor->GrayLevel[0]], 
                    {-2.2800000000000002`, 0.26118716601225356`}, {1, 0}]}}},
                    StatusArea[#, 3.6777899363700337`]& ,
                    TagBoxNote->"3.6777899363700337"],
                    StyleBox["3.6777899363700337`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[3.6777899363700337`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1660$2820, 
                    FEPrivate`Not[DynamicChart`click$1660$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1660$2820, {{{1., 0}, {
                    0, 1.}}, {-0.19858552010646308`, 0.02374428781929578}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1660$2820}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.8656308982328667`, 
                    0.720708922907735}, {-2.0521939880561533`, 
                    0.7927798151985086}}], 
                    LineBox[{{-2.0521939880561533`, 
                    0.7927798151985086}, {-2.2, 0.7927798151985086}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.8656308982328667`, 0.720708922907735},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"finishToken\\n(4.0 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 0.7927798151985086}, \
{1, 0}]}}},
                    StatusArea[#, 4.037573734493189]& ,
                    TagBoxNote->"4.037573734493189"],
                    StyleBox["4.037573734493189`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[4.037573734493189, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1664$2820, 
                    FEPrivate`Not[DynamicChart`click$1664$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1664$2820, {{{1., 0}, {
                    0, 1.}}, {-0.18656308982328668`, 0.0720708922907735}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1664$2820}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{-1.0341166025450397`, 
                    1.711900362854306}, {-1.1375282627995438`, 
                    1.8830903991397367`}}], 
                    LineBox[{{-1.1375282627995438`, 
                    1.8830903991397367`}, {-2.2, 1.8830903991397367`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    StyleBox[DiskBox[{-1.0341166025450397`, 1.711900362854306},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"isOperatorOrSeparator\\n(16.3 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, 1.8830903991397367`}, \
{1, 0}]}}},
                    StatusArea[#, 16.320883671747485`]& ,
                    TagBoxNote->"16.320883671747485"],
                    StyleBox["16.320883671747485`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[16.320883671747485`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1668$2820, 
                    FEPrivate`Not[DynamicChart`click$1668$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1668$2820, {{{1., 0}, {
                    0, 1.}}, {-0.10341166025450398`, 0.1711900362854306}}, {{
                    1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1668$2820}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{1.0460812582809258`, 
                    1.704615499481744}, {1.1506893841090184`, 
                    1.8750770494299185`}}], 
                    LineBox[{{1.1506893841090184`, 1.8750770494299185`}, {2.2,
                     1.8750770494299185`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{1.0460812582809258`, 1.704615499481744},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"checkTokenLength\\n(17.5 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {2.2800000000000002`, 1.8750770494299185`}, \
{-1, 0}]}}},
                    StatusArea[#, 17.484055664246]& ,
                    TagBoxNote->"17.484055664246"],
                    StyleBox["17.484055664246`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[17.484055664246, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1672$2820, 
                    FEPrivate`Not[DynamicChart`click$1672$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1672$2820, {{{1., 0}, {0, 1.}}, {
                    0.10460812582809259`, 0.17046154994817442`}}, {{1, 0}, {0,
                     1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1672$2820}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{LineBox[{{
                    1.8539112942400802`, -0.750341864145318}, {
                    2.0393024236640884`, -0.8253760505598499}}], 
                    LineBox[{{2.0393024236640884`, -0.8253760505598499}, {
                    2.2, -0.8253760505598499}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{1.8539112942400802`, -0.750341864145318},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"cur\\n(25.9 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {2.2800000000000002`, -0.8253760505598499}, \
{-1, 0}]}}},
                    StatusArea[#, 25.93667215645529]& ,
                    TagBoxNote->"25.93667215645529"],
                    StyleBox["25.93667215645529`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[25.93667215645529, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1676$2820, 
                    FEPrivate`Not[DynamicChart`click$1676$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1676$2820, {{{1., 0}, {0, 1.}}, {
                    0.18539112942400804`, -0.0750341864145318}}, {{1, 0}, {0, 
                    1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {DynamicChart`click$1676$2820}]], 
                    GeometricTransformationBox[
                    TagBox[
                    TagBox[
                    TooltipBox[
                    TagBox[{{}, {{}, {
                    {GrayLevel[0], Thickness[0.002], Opacity[1], 
                    
                    StyleBox[{
                    LineBox[{{-1.1488582571156694`, -1.6371086418002767`}, \
{-1.2637440828272364`, -1.8008195059803045`}}], 
                    LineBox[{{-1.2637440828272364`, -1.8008195059803045`}, \
{-2.2, -1.8008195059803045`}}]},
                    FontFamily->"Arial"]}, 
                    {GrayLevel[0], Opacity[1], 
                    
                    StyleBox[DiskBox[{-1.1488582571156694`, -1.6371086418002767`},
                     0.03333333333333333],
                    FontFamily->"Arial"]}, InsetBox[
                    StyleBox[
                    StyleBox["\<\"machtimeToNanoseconds\\n(29.6 %)\"\>",
                    StripOnInput->False,
                    LineColor->GrayLevel[0.5],
                    FrontFaceColor->GrayLevel[0.5],
                    BackFaceColor->GrayLevel[0.5],
                    GraphicsColor->GrayLevel[0.5],
                    FontSize->14,
                    FontColor->GrayLevel[0.5]],
                    StripOnInput->False,
                    LineColor->GrayLevel[0],
                    FrontFaceColor->GrayLevel[0],
                    BackFaceColor->GrayLevel[0],
                    GraphicsColor->GrayLevel[0],
                    FontFamily->"Arial",
                    
                    FontColor->GrayLevel[
                    0]], {-2.2800000000000002`, -1.8008195059803045`}, \
{1, 0}]}}},
                    StatusArea[#, 29.634726413252128`]& ,
                    TagBoxNote->"29.634726413252128"],
                    StyleBox["29.634726413252128`", {
                    GrayLevel[0], FontFamily -> "Arial"}, StripOnInput -> 
                    False]],
                    Annotation[#, 
                    Style[29.634726413252128`, {
                    GrayLevel[0], FontFamily -> "Arial"}], "Tooltip"]& ],
                    
                    EventHandlerTag[{
                    "MouseClicked" :> 
                    FEPrivate`Set[DynamicChart`click$1680$2820, 
                    FEPrivate`Not[DynamicChart`click$1680$2820]], 
                    PassEventsDown -> True, Method -> "Preemptive", 
                    PassEventsUp -> True}]], Dynamic[
                    If[DynamicChart`click$1680$2820, {{{1., 0}, {
                    0, 1.}}, {-0.11488582571156694`, -0.16371086418002767`}}, \
{{1, 0}, {0, 1}}, {{1, 0}, {0, 1}}], 
                    TrackedSymbols :> {
                    DynamicChart`click$1680$2820}]]}, {}}, {}}},
                DynamicModuleValues:>{}], {{}, {}}, {{{}, {}, {}, {}}, {}}},
              ContentSelectable->False,
              GridLinesStyle->Directive[
                GrayLevel[0.5, 0.4]],
              ImagePadding->{{150, 150}, {0, 0}},
              ImageSize->{600, 300},
              LabelStyle->{
                GrayLevel[0], FontFamily -> "Arial"},
              
              PlotLabel->FormBox[
               "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm],
              PlotRange->{{-2.4, 2.4}, {-2.4, 2.4}},
              PlotRangePadding->Scaled[0.1],
              Ticks->None], {320., -157.5}, 
             ImageScaled[{0.5, 0.5}], {600, 300}], InsetBox[
             TemplateBox[{GraphicsBox[{{
                  Opacity[0], 
                  
                  PointBox[{0.5160877513711151, 
                   0.3023120110029738}]}, {{}, {{{}, {{}, {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.6343692870201096, 0.3023120110029738}, {
                    1.5484460694698354`, 1.3023120110029738`}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 3.6777899363700337`]& , TagBoxNote -> 
                    "3.6777899363700337"], 
                    StyleBox[
                    "3.6777899363700337`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[3.6777899363700337`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.6343692870201096`, 0.3023120110029738}, {
                    2.5484460694698354`, 1.3956439507951928`}, 
                    "RoundingRadius" -> 0]}], 
                    StatusArea[#, 4.037573734493189]& , TagBoxNote -> 
                    "4.037573734493189"], 
                    StyleBox[
                    "4.037573734493189`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[4.037573734493189, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{2.6343692870201094`, 0.3023120110029738}, {
                    3.5484460694698354`, 2.792445494623244}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 16.320883671747485`]& , TagBoxNote -> 
                    "16.320883671747485"], 
                    StyleBox[
                    "16.320883671747485`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[16.320883671747485`, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{3.6343692870201094`, 0.3023120110029738}, {
                    4.548446069469835, 2.8612893607208916`}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 17.484055664246]& , TagBoxNote -> 
                    "17.484055664246"], 
                    StyleBox["17.484055664246`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[17.484055664246, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{4.634369287020109, 0.3023120110029738}, {
                    5.548446069469835, 3.255657880622008}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 25.93667215645529]& , TagBoxNote -> 
                    "25.93667215645529"], 
                    StyleBox[
                    "25.93667215645529`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[25.93667215645529, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{5.634369287020109, 0.3023120110029738}, {
                    6.548446069469835, 3.388946863317725}, "RoundingRadius" -> 
                    0]}], StatusArea[#, 29.634726413252128`]& , TagBoxNote -> 
                    "29.634726413252128"], 
                    StyleBox[
                    "29.634726413252128`", {}, StripOnInput -> False]], 
                    Annotation[#, 
                    Style[29.634726413252128`, {}], 
                    "Tooltip"]& ]}}}, {}, {}}}, {}, {}}, {}, {}, {}}, {
                AspectRatio -> 0.6666666666666666, Axes -> {False, False}, 
                 AxesLabel -> {None, None}, 
                 AxesOrigin -> {0.5160877513711151, 0.3023120110029738}, 
                 CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Exp[
                    Part[#, 2]]}& )}, Frame -> True, 
                 FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                 Directive[FontSize -> 15, FontFamily -> "Helvetica"], 
                 FrameTicks -> {{
                    Charting`ScaledTicks[{Log, Exp}], 
                    
                    Charting`ScaledFrameTicks[{Log, Exp}]}, {{{
                    1.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    2.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    3.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    4.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    5.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    6.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}, {{
                    1.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    2.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    3.0914076782449724`, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    4.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    5.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}, {
                    6.091407678244972, 
                    FormBox[
                    InterpretationBox[
                    StyleBox[
                    
                    GraphicsBox[{}, ImageSize -> {0, 0}, BaselinePosition -> 
                    Baseline], "CacheGraphics" -> False], 
                    Spacer[0]], TraditionalForm], {0.004, 0}}}}}, 
                 GridLines -> {None, 
                   Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
                 Directive[
                   GrayLevel[0.4, 0.5], 
                   AbsoluteThickness[1], 
                   AbsoluteDashing[{1, 2}]], ImagePadding -> 40, ImageSize -> 
                 300, PlotLabel -> 
                 FormBox[
                  "\"Whole-Application Time Breakdown \
for\\nDTraceFcall-noisy-darwin-EN,\\nobtained via DTrace (see \
DTrace/fcalls.d)\"", TraditionalForm], PlotRange -> {{All, All}, {All, All}}, 
                 PlotRangePadding -> {{
                    Scaled[0.02], 
                    Scaled[0.02]}, {None, 
                    Scaled[0.05]}}, Ticks -> {None, 
                   Charting`ScaledTicks[{Log, Exp}]}}],FormBox[
                FormBox[
                 
                 TemplateBox[{
                  "\"depthFirstWalk (3.7 %)\"", "\"finishToken (4.0 %)\"", 
                   "\"isOperatorOrSeparator (16.3 %)\"", 
                   "\"checkTokenLength (17.5 %)\"", "\"cur (25.9 %)\"", 
                   "\"machtimeToNanoseconds (29.6 %)\""}, "SwatchLegend", 
                  DisplayFunction -> (FormBox[
                    StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{
                    Directive[
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Thickness[Small], 
                    Opacity[0.6579999999999999]]], 
                    RGBColor[0.4992, 0.5552, 0.8309304]], 
                    RectangleBox[{0, 0}, {10, 10}, "RoundingRadius" -> 0]}, 
                    AspectRatio -> Full, ImageSize -> {10, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    
                    Directive[], 
                    Directive[], FontFamily -> "Arial"}, Background -> 
                    Automatic, StripOnInput -> False], TraditionalForm]& ), 
                  InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[1]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[1]; FrontEnd`Private`$ColorSelectorUseMakeBoxes = 
                    True; MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[1], Editable -> False, Selectable -> False]}], 
                    "]"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.982864, 0.7431472, 0.3262672], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6552426666666666, 0.4954314666666667, 
                    0.21751146666666665`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.982864, 0.7431472, 0.3262672]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.982864, 0.7431472, 0.3262672]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.982864, 0.7431472, 0.3262672], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.9965728, 0.58382944, 0.22525344], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.6643818666666668, 0.3892196266666667, 
                    0.15016896000000002`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.9965728, 0.58382944, 0.22525344]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.9965728, 0.58382944, 0.22525344]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.9965728, 0.58382944, 0.22525344], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.8704000000000001, 0.50272, 0.2], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.5802666666666667, 0.33514666666666665`, 
                    0.13333333333333336`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.8704000000000001, 0.50272, 0.2]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.8704000000000001, 0.50272, 0.2]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.8704000000000001, 0.50272, 0.2], Editable -> 
                    False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.49372288, 0.31936, 0.27266112000000015`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.74058432, 0.47903999999999997, \
0.4089916800000002]"], Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.74058432, 0.47903999999999997`, 
                    0.4089916800000002]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[
                    0.74058432, 0.47903999999999997`, 0.4089916800000002], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.42680576000000003`, 0.3325866666666667, 0.49611296], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.64020864, 0.49888000000000005, 0.74416944]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.64020864, 0.49888000000000005`, 0.74416944], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"EdgeForm", "[", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Thickness", "[", "Small", "]"}], ",", 
                    RowBox[{"Opacity", "[", "0.6579999999999999`", "]"}]}], 
                    "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.4992, 0.5552, 0.8309304], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> RGBColor[
                    0.3328, 0.37013333333333337`, 0.5539536], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.4992, 0.5552, 0.8309304]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.4992, 0.5552, 0.8309304]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    RGBColor[0.4992, 0.5552, 0.8309304], Editable -> False, 
                    Selectable -> False]}], "]"}]}], "}"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", "None", "}"}], ",", 
                    RowBox[{"{", 
                    
                    RowBox[{"Automatic", ",", "Automatic", ",", "Automatic", 
                    ",", "Automatic", ",", "Automatic", ",", "Automatic"}], 
                    "}"}]}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", "]"}], ",", 
                    RowBox[{"Directive", "[", "]"}]}], "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
                TraditionalForm]},
              "Legended",
              DisplayFunction->(FormBox[
                GridBox[{{
                   TagBox[
                    ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                    "SkipImageSizeLevel"], 
                   ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                 False, GridBoxItemSize -> Automatic, 
                 BaselinePosition -> {1, 1}], TraditionalForm]& ),
              Editable->True,
              InterpretationFunction->(FormBox[
                RowBox[{"Legended", "(", 
                  RowBox[{#, ",", 
                    RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], ")"}], 
                TraditionalForm]& )], {960., -157.5}, {
             Center, Center}, {600., 300.}]}, {}},
          ContentSelectable->True,
          ImageSize->{1292., 327.},
          PlotRangePadding->{6, 5}]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]},
    {
     TagBox[GridBox[{
        {
         StyleBox["\<\"DTraceFcall-noisy-darwin-EN\"\>",
          StripOnInput->False,
          LineColor->RGBColor[1, 0.5, 0],
          FrontFaceColor->RGBColor[1, 0.5, 0],
          BackFaceColor->RGBColor[1, 0.5, 0],
          GraphicsColor->RGBColor[1, 0.5, 0],
          FontFamily->"Helvetica Neue",
          FontSize->Large,
          FontWeight->Bold,
          FontColor->RGBColor[1, 0.5, 0]]},
        {
         TemplateBox[{GraphicsBox[
            RectangleBox[{0, 0}, {0, 0}], ImageSize -> Tiny],GraphicsBox[
            RectangleBox[{0, 0}, {0, 0}], ImageSize -> Tiny],
           GraphicsBox[{{}, {{{}, {
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 RGBColor[0.368417, 0.506779, 0.709798], 
                 AbsoluteThickness[1.6], 
                 PointSize[0.02]], 
                
                PointBox[{{62., 40.26363748795336}, {64., 
                 59.429953878820356`}, {63., 
                 46.34088395207902}}]}, {}}}, {}}, {
            DisplayFunction -> Identity, PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, AxesOrigin -> {61.96875, 39.305321668410016`},
              PlotRange -> {{62., 64.}, {40.26363748795336, 
              59.429953878820356`}}, DisplayFunction -> Identity, AspectRatio -> 
             0.5555555555555556, Axes -> {False, False}, 
             AxesLabel -> {None, None}, 
             AxesOrigin -> {61.96875, 39.305321668410016`}, DisplayFunction :> 
             Identity, Frame -> {{True, True}, {True, True}}, 
             FrameLabel -> {{
                FormBox[
                "\"Compile Time Spent in Noisy routines (%)\"", 
                 TraditionalForm], None}, {
                FormBox["\"Changeset ID\"", TraditionalForm], None}}, 
             FrameStyle -> 
             Directive[FontSize -> 16, FontFamily -> "Helvetica"], 
             FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
             GridLines -> {None, None}, GridLinesStyle -> Directive[
               GrayLevel[0.5, 0.4]], ImagePadding -> {{80, 0}, {50, 10}}, 
             ImageSize -> 480, Method -> {}, 
             PlotRange -> {{62., 64.}, {40.26363748795336, 
              59.429953878820356`}}, PlotRangeClipping -> True, 
             PlotRangePadding -> {{
                Scaled[0.02], 
                Scaled[0.02]}, {
                Scaled[0.05], 
                Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
          "RowDefault"]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.657228970221929*^9, 3.6572292092606077`*^9, 
  3.657229761444706*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Noisy Compiler on helloWorld.n\"\>",
      StripOnInput->False,
      LineColor->RGBColor[1, 0.5, 0],
      FrontFaceColor->RGBColor[1, 0.5, 0],
      BackFaceColor->RGBColor[1, 0.5, 0],
      GraphicsColor->RGBColor[1, 0.5, 0],
      FontFamily->"Helvetica Neue",
      FontSize->Large,
      FontWeight->Bold,
      FontColor->RGBColor[1, 0.5, 0]]},
    {
     TagBox[
      TagBox[GridBox[{
         {
          TagBox[
           StyleBox["\<\"Function\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica Neue",
            FontWeight->Bold],
           HoldForm], 
          TagBox[
           StyleBox["\<\"% of Runtime\"\>",
            StripOnInput->False,
            FontFamily->"Helvetica Neue",
            FontWeight->Bold],
           HoldForm]},
         {"\<\"noisyRunPasses\"\>", "0.08998525407755026`"},
         {"\<\"noisyParserSemanticError\"\>", "0.09282532023614402`"},
         {"\<\"noisySymbolTableCloseScope\"\>", "0.14417072684019472`"},
         {"\<\"noisyTimestampsInit\"\>", "0.26726517324029875`"},
         {"\<\"noisySymbolTableAllocScope\"\>", "0.32952241297999924`"},
         {"\<\"noisySymbolTableSymbolForIdentifier\"\>", 
          "0.3429753579417592`"},
         {"\<\"noisyLexGet\"\>", "1.7973881854742573`"},
         {"\<\"noisyLexPut\"\>", "1.8301236848812068`"},
         {"\<\"noisyLexAllocateSourceInfo\"\>", "2.0726503871084914`"},
         {"\<\"noisyLexAllocateToken\"\>", "2.220184350189126`"},
         {"\<\"genNoisyIrNode\"\>", "3.4134605682972383`"},
         {"\<\"flexfree\"\>", "3.738872359205589`"},
         {"\<\"noisyInit\"\>", "4.744031563598424`"},
         {"\<\"noisyLexPeek\"\>", "8.948226341314665`"},
         {"\<\"noisyConsolePrintBuffers\"\>", "29.39827219343541`"},
         {"\<\"Other\"\>", "40.570046121179644`"}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxDividers->{
         "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {False, True, {False}, False}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[2.0999999999999996`]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, 
          "Rows" -> {
            Offset[0.2], {
             Offset[0.4]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       {None, OutputFormsDump`HeadedColumns}],
      Function[BoxForm`e$, 
       TableForm[BoxForm`e$, TableHeadings -> {None, {
           Style["Function", Bold, FontFamily -> "Helvetica Neue"], 
           Style["% of Runtime", Bold, FontFamily -> "Helvetica Neue"]}}]]]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.657228970221929*^9, 3.6572292092606077`*^9, 
  3.657229761712586*^9}]
}, Open  ]]
}, Open  ]]
},
CellGrouping->Manual,
WindowSize->{1699, 1155},
WindowMargins->{{Automatic, -311}, {Automatic, 0}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 6, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 587, 16, 139, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[1170, 40, 69565, 1523, 5578, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[70772, 1568, 177, 3, 52, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[CellGroupData[{
Cell[70974, 1575, 4913, 95, 233, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[75890, 1672, 268, 7, 40, "Output"],
Cell[76161, 1681, 292185, 5910, 1561, "Output"],
Cell[368349, 7593, 3053, 72, 333, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
