
    Hardware Overview:

      Model Name: MacBook
      Model Identifier: MacBook9,1
      Processor Name: Intel Core m5
      Processor Speed: 1.2 GHz
      Number of Processors: 1
      Total Number of Cores: 2
      L2 Cache (per Core): 256 KB
      L3 Cache: 4 MB
      Memory: 8 GB

changeset: 598:ff386c53860cd2ad8db867901189bd8f5d7b35fa
char kNoisyVersion[] = "0.2-alpha- () (build 09-09-2018-15:00-pip@impact-Darwin-17.6.0-x86_64)";
char kNewtonVersion[] = "0.2-alpha- () (build 09-09-2018-14:58-pip@impact-Darwin-17.6.0-x86_64)";

./src/noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s

Informational Report:
---------------------

Non-zero routine residency time upper bounds and counts (5246 calls, total of 4704.1470 us):

    Routine                                         Parse,         1 calls (0.0191 %), total residency = 0.193000 us (0.0041 %)
    Routine                        ParseAnonAggregateType,         5 calls (0.0953 %), total residency = 0.624000 us (0.0133 %)
    Routine                                 ParseAssignOp,         5 calls (0.0953 %), total residency = 0.527000 us (0.0112 %)
    Routine                      ParseAssignmentStatement,         6 calls (0.1144 %), total residency = 0.565000 us (0.0120 %)
    Routine                                ParseBasicType,         7 calls (0.1334 %), total residency = 0.726000 us (0.0154 %)
    Routine                               ParseExpression,         5 calls (0.0953 %), total residency = 0.565000 us (0.0120 %)
    Routine                                   ParseFactor,         5 calls (0.0953 %), total residency = 0.706000 us (0.0150 %)
    Routine                             ParseFunctionDecl,         2 calls (0.0381 %), total residency = 0.280000 us (0.0060 %)
    Routine                   ParseHighPrecedenceBinaryOp,         1 calls (0.0191 %), total residency = 0.145000 us (0.0031 %)
    Routine             ParseIdentifierDefinitionTerminal,        12 calls (0.2287 %), total residency = 5.764000 us (0.1225 %)
    Routine                          ParseIdentifierOrNil,         6 calls (0.1144 %), total residency = 0.606000 us (0.0129 %)
    Routine                      ParseIdentifierOrNilList,         6 calls (0.1144 %), total residency = 0.645000 us (0.0137 %)
    Routine                  ParseIdentifierUsageTerminal,        10 calls (0.1906 %), total residency = 1.149000 us (0.0244 %)
    Routine                              ParseIntegerType,         2 calls (0.0381 %), total residency = 0.223000 us (0.0047 %)
    Routine                                 ParseListType,         5 calls (0.0953 %), total residency = 5.765000 us (0.1226 %)
    Routine                                 ParseLoadExpr,         1 calls (0.0191 %), total residency = 0.107000 us (0.0023 %)
    Routine                               ParseModuleDecl,         2 calls (0.0381 %), total residency = 0.315000 us (0.0067 %)
    Routine                           ParseModuleDeclBody,         2 calls (0.0381 %), total residency = 0.275000 us (0.0058 %)
    Routine                       ParseModuleTypenameDecl,         2 calls (0.0381 %), total residency = 0.292000 us (0.0062 %)
    Routine                        ParseNamegenDefinition,         1 calls (0.0191 %), total residency = 0.111000 us (0.0024 %)
    Routine                   ParseNamegenInvokeShorthand,         1 calls (0.0191 %), total residency = 0.097000 us (0.0021 %)
    Routine                                  ParseProgram,         1 calls (0.0191 %), total residency = 0.232000 us (0.0049 %)
    Routine                        ParseReadTypeSignature,         2 calls (0.0381 %), total residency = 0.284000 us (0.0060 %)
    Routine                      ParseScopedStatementList,         1 calls (0.0191 %), total residency = 0.113000 us (0.0024 %)
    Routine                                ParseSignature,         6 calls (0.1144 %), total residency = 5.881000 us (0.1250 %)
    Routine                                ParseStatement,         6 calls (0.1144 %), total residency = 3.481000 us (0.0740 %)
    Routine                            ParseStatementList,         1 calls (0.0191 %), total residency = 0.074000 us (0.0016 %)
    Routine                                     ParseTerm,         4 calls (0.0762 %), total residency = 0.545000 us (0.0116 %)
    Routine                                 ParseTerminal,        85 calls (1.6203 %), total residency = 9.589000 us (0.2038 %)
    Routine                                 ParseTypeExpr,        12 calls (0.2287 %), total residency = 1.321000 us (0.0281 %)
    Routine                                 ParseTypeName,         1 calls (0.0191 %), total residency = 0.094000 us (0.0020 %)
    Routine                        ParseTypeParameterList,         2 calls (0.0381 %), total residency = 0.359000 us (0.0076 %)
    Routine                                  ParseUnaryOp,         1 calls (0.0191 %), total residency = 6.515000 us (0.1385 %)
    Routine                       ParseWriteTypeSignature,         2 calls (0.0381 %), total residency = 0.284000 us (0.0060 %)
    Routine                     ParsenQualifiedIdentifier,         7 calls (0.1334 %), total residency = 0.808000 us (0.0172 %)
    Routine                               ParserPeekCheck,       317 calls (6.0427 %), total residency = 52.367000 us (1.1132 %)
    Routine                          ParserDepthFirstWalk,       172 calls (3.2787 %), total residency = 118.387000 us (2.5167 %)
    Routine                                 ParserAddLeaf,       113 calls (2.1540 %), total residency = 39.236000 us (0.8341 %)
    Routine                  ParserAddLeafWithChainingSeq,        36 calls (0.6862 %), total residency = 4.088000 us (0.0869 %)
    Routine                       ParserAddToModuleScopes,         2 calls (0.0381 %), total residency = 0.343000 us (0.0073 %)
    Routine                             ParserAssignTypes,         3 calls (0.0572 %), total residency = 1.384000 us (0.0294 %)
    Routine                                GenNoisyIrNode,       246 calls (4.6893 %), total residency = 320.644000 us (6.8162 %)
    Routine                         LexAllocateSourceInfo,       108 calls (2.0587 %), total residency = 110.095000 us (2.3404 %)
    Routine                              LexAllocateToken,       108 calls (2.0587 %), total residency = 59.048000 us (1.2552 %)
    Routine                                        LexPut,       108 calls (2.0587 %), total residency = 19.414000 us (0.4127 %)
    Routine                                        LexGet,       107 calls (2.0396 %), total residency = 17.505000 us (0.3721 %)
    Routine                                       LexPeek,      1106 calls (21.0827 %), total residency = 1124.550000 us (23.9055 %)
    Routine                                       LexInit,         1 calls (0.0191 %), total residency = 2073.962000 us (44.0880 %)
    Routine                         LexerCheckTokenLength,       361 calls (6.8814 %), total residency = 62.436000 us (1.3273 %)
    Routine                                      LexerCur,       808 calls (15.4022 %), total residency = 132.034000 us (2.8068 %)
    Routine                                   LexerGobble,        58 calls (1.1056 %), total residency = 6.039000 us (0.1284 %)
    Routine                                     LexerDone,       107 calls (2.0396 %), total residency = 11.267000 us (0.2395 %)
    Routine                                      LexerEqf,        24 calls (0.4575 %), total residency = 3.059000 us (0.0650 %)
    Routine                             LexerCheckComment,        59 calls (1.1247 %), total residency = 6.043000 us (0.1285 %)
    Routine                                LexerCheckWeq3,        18 calls (0.3431 %), total residency = 1.847000 us (0.0393 %)
    Routine                              LexerCheckSingle,        34 calls (0.6481 %), total residency = 3.448000 us (0.0733 %)
    Routine                                  LexerCheckLt,         2 calls (0.0381 %), total residency = 0.215000 us (0.0046 %)
    Routine                         LexerCheckDoubleQuote,         1 calls (0.0191 %), total residency = 0.104000 us (0.0022 %)
    Routine                               LexerCheckMinus,         4 calls (0.0762 %), total residency = 0.406000 us (0.0086 %)
    Routine                              LexerFinishToken,       252 calls (4.8037 %), total residency = 384.489000 us (8.1734 %)
    Routine                    LexerIsOperatorOrSeparator,       542 calls (10.3317 %), total residency = 66.759000 us (1.4192 %)
    Routine                                       InFirst,       106 calls (2.0206 %), total residency = 11.453000 us (0.2435 %)
    Routine                                      InFollow,       224 calls (4.2699 %), total residency = 24.265000 us (0.5158 %)

Intermediate Representation Information:

    IR node count                        : 178
    Symbol Table node count              : 3

./src/newton/newton-darwin-EN -S tmp.smt2 applications/newton/invariants/PendulumAcceleration.nt

SMT2 Backend output:
---------------------
(set-logic QF_NRA)
(declare-fun s () Real)
(assert  ( = s 1 ) )
(declare-fun m () Real)
(assert  ( = m 1 ) )
(declare-fun kg () Real)
(assert  ( = kg 1 ) )
(declare-fun mol () Real)
(assert  ( = mol 1 ) )
(declare-fun K () Real)
(assert  ( = K 1 ) )
(declare-fun C () Real)
(assert  ( = C 1 ) )
(declare-fun A () Real)
(assert  ( = A 1 ) )
(declare-fun deg () Real)
(assert  ( = deg 1 ) )
(declare-fun jf () Real)
(assert  ( = jf 1 ) )
(declare-fun mjf () Real)
(assert  ( = mjf 1 ) )
(declare-fun N () Real)
(assert  ( = N 1 ) )
(declare-fun J () Real)
(assert  ( = J 1 ) )
(declare-fun W () Real)
(assert  ( = W 1 ) )
(declare-fun T () Real)
(assert  ( = T 1 ) )
(declare-fun ajf () Real)
(assert  ( = ajf 1 ) )
(declare-fun Hz () Real)
(assert  ( = Hz 1 ) )
(declare-fun sq () Real)
(assert  ( = sq 1 ) )
(declare-fun rho () Real)
(assert  ( = rho 1 ) )
(declare-fun vol () Real)
(assert  ( = vol 1 ) )
(declare-fun rad () Real)
(assert  ( = rad 1 ) )
(declare-fun rps () Real)
(assert  ( = rps 1 ) )
(declare-fun Pa () Real)
(assert  ( = Pa 1 ) )
(declare-fun b () Real)
(assert  ( = b 1 ) )
(declare-fun ppm () Real)
(assert  ( = ppm 1 ) )
(declare-fun RH () Real)
(assert  ( = RH 1 ) )
(declare-fun kNewtonUnitfree_pi () Real)
(assert  ( = kNewtonUnitfree_pi 3.1415926535897931 ) )
(declare-fun kNewtonUnithave_SpeedOfLight () Real)
(assert  ( = kNewtonUnithave_SpeedOfLight 299792458 ) )
(declare-fun kNewtonUnithave_AccelerationDueToGravity () Real)
(assert  ( = kNewtonUnithave_AccelerationDueToGravity 0 ) )
(declare-fun kNewtonUnithave_GravitationalConstant () Real)
(assert  ( = kNewtonUnithave_GravitationalConstant 0 ) )
(declare-fun kNewtonUnithave_AvogadroConstant () Real)
(assert  ( = kNewtonUnithave_AvogadroConstant 0 ) )
(declare-fun kNewtonUnithave_BoltzmannConstant () Real)
(assert  ( = kNewtonUnithave_BoltzmannConstant 0 ) )
(declare-fun kNewtonUnithave_ElectronCharge () Real)
(assert  ( = kNewtonUnithave_ElectronCharge 0 ) )
(declare-fun kNewtonUnithave_SpeedOfSound () Real)
(assert  ( = kNewtonUnithave_SpeedOfSound 340.29199999999997 ) )
(declare-fun kNewtonUnithave_EarthMass () Real)
(assert  ( = kNewtonUnithave_EarthMass 0 ) )
(declare-fun AccelerationRange@acceleration@0@X () Real)
(declare-fun AccelerationRange@acceleration@0@Y () Real)
(declare-fun AccelerationRange@acceleration@0@Z () Real)
(assert  ( >= AccelerationRange@acceleration@0@X ( / ( * ( - 0 2.000000 ) meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( <= AccelerationRange@acceleration@0@X ( / ( * 2.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( >= AccelerationRange@acceleration@0@Y ( / ( * ( - 0 1.000000 ) meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( <= AccelerationRange@acceleration@0@Y ( / ( * 1.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( = AccelerationRange@acceleration@0@Z ( / ( * 0.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(check-sat)
(exit)

sudo dtrace -qs $dtraceDirectory/fcalls.d -c "./noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s"

sudo dtrace -qs $dtraceDirectory/malloc.d -c "./noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s"
