
    Hardware Overview:

      Model Name: iMac
      Model Identifier: iMac14,2
      Processor Name: Intel Core i7
      Processor Speed: 3.5 GHz
      Number of Processors: 1
      Total Number of Cores: 4
      L2 Cache (per Core): 256 KB
      L3 Cache: 8 MB
      Memory: 32 GB

changeset: 573:4864bbd52822a0ecb80c1bb199934ded35121158
char kNoisyVersion[] = "0.2-alpha- () (build 09-05-2018-14:30-pip@listener-Darwin-16.7.0-x86_64)";
char kNewtonVersion[] = "0.2-alpha- () (build 09-05-2018-14:30-pip@listener-Darwin-16.7.0-x86_64)";

./src/noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s

Informational Report:
---------------------

Non-zero routine residency time upper bounds and counts (5246 calls, total of 1020.2530 us):

    Routine                                         Parse,         1 calls (0.0191 %), total residency = 0.052000 us (0.0051 %)
    Routine                        ParseAnonAggregateType,         5 calls (0.0953 %), total residency = 0.197000 us (0.0193 %)
    Routine                                 ParseAssignOp,         5 calls (0.0953 %), total residency = 0.192000 us (0.0188 %)
    Routine                      ParseAssignmentStatement,         6 calls (0.1144 %), total residency = 0.247000 us (0.0242 %)
    Routine                                ParseBasicType,         7 calls (0.1334 %), total residency = 0.264000 us (0.0259 %)
    Routine                               ParseExpression,         5 calls (0.0953 %), total residency = 0.183000 us (0.0179 %)
    Routine                                   ParseFactor,         5 calls (0.0953 %), total residency = 0.195000 us (0.0191 %)
    Routine                             ParseFunctionDecl,         2 calls (0.0381 %), total residency = 0.091000 us (0.0089 %)
    Routine                   ParseHighPrecedenceBinaryOp,         1 calls (0.0191 %), total residency = 0.038000 us (0.0037 %)
    Routine             ParseIdentifierDefinitionTerminal,        12 calls (0.2287 %), total residency = 2.344000 us (0.2297 %)
    Routine                          ParseIdentifierOrNil,         6 calls (0.1144 %), total residency = 0.227000 us (0.0222 %)
    Routine                      ParseIdentifierOrNilList,         6 calls (0.1144 %), total residency = 0.235000 us (0.0230 %)
    Routine                  ParseIdentifierUsageTerminal,        10 calls (0.1906 %), total residency = 0.364000 us (0.0357 %)
    Routine                              ParseIntegerType,         2 calls (0.0381 %), total residency = 0.111000 us (0.0109 %)
    Routine                                 ParseListType,         5 calls (0.0953 %), total residency = 2.862000 us (0.2805 %)
    Routine                                 ParseLoadExpr,         1 calls (0.0191 %), total residency = 0.056000 us (0.0055 %)
    Routine                               ParseModuleDecl,         2 calls (0.0381 %), total residency = 0.073000 us (0.0072 %)
    Routine                           ParseModuleDeclBody,         2 calls (0.0381 %), total residency = 0.094000 us (0.0092 %)
    Routine                       ParseModuleTypenameDecl,         2 calls (0.0381 %), total residency = 0.082000 us (0.0080 %)
    Routine                        ParseNamegenDefinition,         1 calls (0.0191 %), total residency = 0.040000 us (0.0039 %)
    Routine                   ParseNamegenInvokeShorthand,         1 calls (0.0191 %), total residency = 0.065000 us (0.0064 %)
    Routine                                  ParseProgram,         1 calls (0.0191 %), total residency = 0.110000 us (0.0108 %)
    Routine                        ParseReadTypeSignature,         2 calls (0.0381 %), total residency = 0.098000 us (0.0096 %)
    Routine                      ParseScopedStatementList,         1 calls (0.0191 %), total residency = 0.072000 us (0.0071 %)
    Routine                                ParseSignature,         6 calls (0.1144 %), total residency = 0.250000 us (0.0245 %)
    Routine                                ParseStatement,         6 calls (0.1144 %), total residency = 0.228000 us (0.0223 %)
    Routine                            ParseStatementList,         1 calls (0.0191 %), total residency = 0.057000 us (0.0056 %)
    Routine                                     ParseTerm,         4 calls (0.0762 %), total residency = 0.137000 us (0.0134 %)
    Routine                                 ParseTerminal,        85 calls (1.6203 %), total residency = 3.110000 us (0.3048 %)
    Routine                                 ParseTypeExpr,        12 calls (0.2287 %), total residency = 0.437000 us (0.0428 %)
    Routine                                 ParseTypeName,         1 calls (0.0191 %), total residency = 0.063000 us (0.0062 %)
    Routine                        ParseTypeParameterList,         2 calls (0.0381 %), total residency = 0.099000 us (0.0097 %)
    Routine                                  ParseUnaryOp,         1 calls (0.0191 %), total residency = 0.059000 us (0.0058 %)
    Routine                       ParseWriteTypeSignature,         2 calls (0.0381 %), total residency = 0.102000 us (0.0100 %)
    Routine                     ParsenQualifiedIdentifier,         7 calls (0.1334 %), total residency = 0.284000 us (0.0278 %)
    Routine                               ParserPeekCheck,       317 calls (6.0427 %), total residency = 9.548000 us (0.9358 %)
    Routine                          ParserDepthFirstWalk,       172 calls (3.2787 %), total residency = 14.566000 us (1.4277 %)
    Routine                                 ParserAddLeaf,       113 calls (2.1540 %), total residency = 14.601000 us (1.4311 %)
    Routine                  ParserAddLeafWithChainingSeq,        36 calls (0.6862 %), total residency = 1.196000 us (0.1172 %)
    Routine                       ParserAddToModuleScopes,         2 calls (0.0381 %), total residency = 0.111000 us (0.0109 %)
    Routine                             ParserAssignTypes,         3 calls (0.0572 %), total residency = 1.984000 us (0.1945 %)
    Routine                                GenNoisyIrNode,       246 calls (4.6893 %), total residency = 54.604000 us (5.3520 %)
    Routine                         LexAllocateSourceInfo,       108 calls (2.0587 %), total residency = 40.272000 us (3.9473 %)
    Routine                              LexAllocateToken,       108 calls (2.0587 %), total residency = 17.726000 us (1.7374 %)
    Routine                                        LexPut,       108 calls (2.0587 %), total residency = 6.423000 us (0.6295 %)
    Routine                                        LexGet,       107 calls (2.0396 %), total residency = 6.435000 us (0.6307 %)
    Routine                                       LexPeek,      1106 calls (21.0827 %), total residency = 211.056000 us (20.6866 %)
    Routine                                       LexInit,         1 calls (0.0191 %), total residency = 388.000000 us (38.0298 %)
    Routine                         LexerCheckTokenLength,       361 calls (6.8814 %), total residency = 16.966000 us (1.6629 %)
    Routine                                      LexerCur,       808 calls (15.4022 %), total residency = 41.195000 us (4.0377 %)
    Routine                                   LexerGobble,        58 calls (1.1056 %), total residency = 1.713000 us (0.1679 %)
    Routine                                     LexerDone,       107 calls (2.0396 %), total residency = 3.279000 us (0.3214 %)
    Routine                                      LexerEqf,        24 calls (0.4575 %), total residency = 0.930000 us (0.0912 %)
    Routine                             LexerCheckComment,        59 calls (1.1247 %), total residency = 2.160000 us (0.2117 %)
    Routine                                LexerCheckWeq3,        18 calls (0.3431 %), total residency = 0.632000 us (0.0619 %)
    Routine                              LexerCheckSingle,        34 calls (0.6481 %), total residency = 1.183000 us (0.1160 %)
    Routine                                  LexerCheckLt,         2 calls (0.0381 %), total residency = 0.074000 us (0.0073 %)
    Routine                         LexerCheckDoubleQuote,         1 calls (0.0191 %), total residency = 0.037000 us (0.0036 %)
    Routine                               LexerCheckMinus,         4 calls (0.0762 %), total residency = 0.138000 us (0.0135 %)
    Routine                              LexerFinishToken,       252 calls (4.8037 %), total residency = 139.455000 us (13.6687 %)
    Routine                    LexerIsOperatorOrSeparator,       542 calls (10.3317 %), total residency = 22.473000 us (2.2027 %)
    Routine                                       InFirst,       106 calls (2.0206 %), total residency = 3.335000 us (0.3269 %)
    Routine                                      InFollow,       224 calls (4.2699 %), total residency = 7.043000 us (0.6903 %)

Intermediate Representation Information:

    IR node count                        : 178
    Symbol Table node count              : 3

./src/newton/newton-darwin-EN -S tmp.smt2 applications/newton/invariants/PendulumAcceleration.nt

SMT2 Backend output:
---------------------
(set-logic QF_NRA)
(declare-fun s () Real)
(assert  ( = s 1 ) )
(declare-fun m () Real)
(assert  ( = m 1 ) )
(declare-fun kg () Real)
(assert  ( = kg 1 ) )
(declare-fun mol () Real)
(assert  ( = mol 1 ) )
(declare-fun K () Real)
(assert  ( = K 1 ) )
(declare-fun C () Real)
(assert  ( = C 1 ) )
(declare-fun A () Real)
(assert  ( = A 1 ) )
(declare-fun deg () Real)
(assert  ( = deg 1 ) )
(declare-fun jf () Real)
(assert  ( = jf 1 ) )
(declare-fun mjf () Real)
(assert  ( = mjf 1 ) )
(declare-fun N () Real)
(assert  ( = N 1 ) )
(declare-fun J () Real)
(assert  ( = J 1 ) )
(declare-fun W () Real)
(assert  ( = W 1 ) )
(declare-fun T () Real)
(assert  ( = T 1 ) )
(declare-fun ajf () Real)
(assert  ( = ajf 1 ) )
(declare-fun Hz () Real)
(assert  ( = Hz 1 ) )
(declare-fun sq () Real)
(assert  ( = sq 1 ) )
(declare-fun rho () Real)
(assert  ( = rho 1 ) )
(declare-fun vol () Real)
(assert  ( = vol 1 ) )
(declare-fun rad () Real)
(assert  ( = rad 1 ) )
(declare-fun rps () Real)
(assert  ( = rps 1 ) )
(declare-fun Pa () Real)
(assert  ( = Pa 1 ) )
(declare-fun b () Real)
(assert  ( = b 1 ) )
(declare-fun ppm () Real)
(assert  ( = ppm 1 ) )
(declare-fun RH () Real)
(assert  ( = RH 1 ) )
(declare-fun kNewtonUnitfree_pi () Real)
(assert  ( = kNewtonUnitfree_pi 3.1415926535897931 ) )
(declare-fun kNewtonUnithave_SpeedOfLight () Real)
(assert  ( = kNewtonUnithave_SpeedOfLight 299792458 ) )
(declare-fun kNewtonUnithave_AccelerationDueToGravity () Real)
(assert  ( = kNewtonUnithave_AccelerationDueToGravity 0 ) )
(declare-fun kNewtonUnithave_GravitationalConstant () Real)
(assert  ( = kNewtonUnithave_GravitationalConstant 0 ) )
(declare-fun kNewtonUnithave_AvogadroConstant () Real)
(assert  ( = kNewtonUnithave_AvogadroConstant 0 ) )
(declare-fun kNewtonUnithave_BoltzmannConstant () Real)
(assert  ( = kNewtonUnithave_BoltzmannConstant 0 ) )
(declare-fun kNewtonUnithave_ElectronCharge () Real)
(assert  ( = kNewtonUnithave_ElectronCharge 0 ) )
(declare-fun kNewtonUnithave_SpeedOfSound () Real)
(assert  ( = kNewtonUnithave_SpeedOfSound 340.29199999999997 ) )
(declare-fun kNewtonUnithave_EarthMass () Real)
(assert  ( = kNewtonUnithave_EarthMass 0 ) )
(declare-fun AccelerationRange@acceleration@0@X () Real)
(declare-fun AccelerationRange@acceleration@0@Y () Real)
(declare-fun AccelerationRange@acceleration@0@Z () Real)
(assert  ( >= AccelerationRange@acceleration@0@X ( / ( * ( - 0 2.000000 ) meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( <= AccelerationRange@acceleration@0@X ( / ( * 2.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( >= AccelerationRange@acceleration@0@Y ( / ( * ( - 0 1.000000 ) meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( <= AccelerationRange@acceleration@0@Y ( / ( * 1.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( = AccelerationRange@acceleration@0@Z ( / ( * 0.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(check-sat)
(exit)

sudo dtrace -qs $dtraceDirectory/fcalls.d -c "./noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s"

sudo dtrace -qs $dtraceDirectory/malloc.d -c "./noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s"
