
    Hardware Overview:

      Model Name: MacBook
      Model Identifier: MacBook9,1
      Processor Name: Intel Core m5
      Processor Speed: 1.2 GHz
      Number of Processors: 1
      Total Number of Cores: 2
      L2 Cache (per Core): 256 KB
      L3 Cache: 4 MB
      Memory: 8 GB

changeset: 596:75e12025291f4c12194b6110eb9987bee1bd9efb
char kNoisyVersion[] = "0.2-alpha- () (build 09-09-2018-14:42-pip@impact-Darwin-17.6.0-x86_64)";
char kNewtonVersion[] = "0.2-alpha- () (build 09-09-2018-14:41-pip@impact-Darwin-17.6.0-x86_64)";

./src/noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s

Informational Report:
---------------------

Non-zero routine residency time upper bounds and counts (5246 calls, total of 2721.8700 us):

    Routine                                         Parse,         1 calls (0.0191 %), total residency = 0.120000 us (0.0044 %)
    Routine                        ParseAnonAggregateType,         5 calls (0.0953 %), total residency = 0.472000 us (0.0173 %)
    Routine                                 ParseAssignOp,         5 calls (0.0953 %), total residency = 0.373000 us (0.0137 %)
    Routine                      ParseAssignmentStatement,         6 calls (0.1144 %), total residency = 0.568000 us (0.0209 %)
    Routine                                ParseBasicType,         7 calls (0.1334 %), total residency = 0.501000 us (0.0184 %)
    Routine                               ParseExpression,         5 calls (0.0953 %), total residency = 0.397000 us (0.0146 %)
    Routine                                   ParseFactor,         5 calls (0.0953 %), total residency = 0.401000 us (0.0147 %)
    Routine                             ParseFunctionDecl,         2 calls (0.0381 %), total residency = 0.177000 us (0.0065 %)
    Routine                   ParseHighPrecedenceBinaryOp,         1 calls (0.0191 %), total residency = 0.089000 us (0.0033 %)
    Routine             ParseIdentifierDefinitionTerminal,        12 calls (0.2287 %), total residency = 3.967000 us (0.1457 %)
    Routine                          ParseIdentifierOrNil,         6 calls (0.1144 %), total residency = 0.490000 us (0.0180 %)
    Routine                      ParseIdentifierOrNilList,         6 calls (0.1144 %), total residency = 0.532000 us (0.0195 %)
    Routine                  ParseIdentifierUsageTerminal,        10 calls (0.1906 %), total residency = 0.766000 us (0.0281 %)
    Routine                              ParseIntegerType,         2 calls (0.0381 %), total residency = 0.207000 us (0.0076 %)
    Routine                                 ParseListType,         5 calls (0.0953 %), total residency = 17.232000 us (0.6331 %)
    Routine                                 ParseLoadExpr,         1 calls (0.0191 %), total residency = 0.128000 us (0.0047 %)
    Routine                               ParseModuleDecl,         2 calls (0.0381 %), total residency = 0.339000 us (0.0125 %)
    Routine                           ParseModuleDeclBody,         2 calls (0.0381 %), total residency = 0.207000 us (0.0076 %)
    Routine                       ParseModuleTypenameDecl,         2 calls (0.0381 %), total residency = 0.186000 us (0.0068 %)
    Routine                        ParseNamegenDefinition,         1 calls (0.0191 %), total residency = 0.138000 us (0.0051 %)
    Routine                   ParseNamegenInvokeShorthand,         1 calls (0.0191 %), total residency = 0.101000 us (0.0037 %)
    Routine                                  ParseProgram,         1 calls (0.0191 %), total residency = 0.154000 us (0.0057 %)
    Routine                        ParseReadTypeSignature,         2 calls (0.0381 %), total residency = 0.198000 us (0.0073 %)
    Routine                      ParseScopedStatementList,         1 calls (0.0191 %), total residency = 0.120000 us (0.0044 %)
    Routine                                ParseSignature,         6 calls (0.1144 %), total residency = 3.756000 us (0.1380 %)
    Routine                                ParseStatement,         6 calls (0.1144 %), total residency = 3.514000 us (0.1291 %)
    Routine                            ParseStatementList,         1 calls (0.0191 %), total residency = 0.075000 us (0.0028 %)
    Routine                                     ParseTerm,         4 calls (0.0762 %), total residency = 0.305000 us (0.0112 %)
    Routine                                 ParseTerminal,        85 calls (1.6203 %), total residency = 6.695000 us (0.2460 %)
    Routine                                 ParseTypeExpr,        12 calls (0.2287 %), total residency = 0.949000 us (0.0349 %)
    Routine                                 ParseTypeName,         1 calls (0.0191 %), total residency = 0.108000 us (0.0040 %)
    Routine                        ParseTypeParameterList,         2 calls (0.0381 %), total residency = 0.241000 us (0.0089 %)
    Routine                                  ParseUnaryOp,         1 calls (0.0191 %), total residency = 3.510000 us (0.1290 %)
    Routine                       ParseWriteTypeSignature,         2 calls (0.0381 %), total residency = 0.186000 us (0.0068 %)
    Routine                     ParsenQualifiedIdentifier,         7 calls (0.1334 %), total residency = 0.534000 us (0.0196 %)
    Routine                               ParserPeekCheck,       317 calls (6.0427 %), total residency = 22.468000 us (0.8255 %)
    Routine                          ParserDepthFirstWalk,       172 calls (3.2787 %), total residency = 30.307000 us (1.1135 %)
    Routine                                 ParserAddLeaf,       113 calls (2.1540 %), total residency = 41.175000 us (1.5127 %)
    Routine                  ParserAddLeafWithChainingSeq,        36 calls (0.6862 %), total residency = 2.752000 us (0.1011 %)
    Routine                       ParserAddToModuleScopes,         2 calls (0.0381 %), total residency = 0.218000 us (0.0080 %)
    Routine                             ParserAssignTypes,         3 calls (0.0572 %), total residency = 0.462000 us (0.0170 %)
    Routine                                GenNoisyIrNode,       246 calls (4.6893 %), total residency = 127.916000 us (4.6996 %)
    Routine                         LexAllocateSourceInfo,       108 calls (2.0587 %), total residency = 119.493000 us (4.3901 %)
    Routine                              LexAllocateToken,       108 calls (2.0587 %), total residency = 46.014000 us (1.6905 %)
    Routine                                        LexPut,       108 calls (2.0587 %), total residency = 16.198000 us (0.5951 %)
    Routine                                        LexGet,       107 calls (2.0396 %), total residency = 12.350000 us (0.4537 %)
    Routine                                       LexPeek,      1106 calls (21.0827 %), total residency = 455.428000 us (16.7322 %)
    Routine                                       LexInit,         1 calls (0.0191 %), total residency = 1018.797000 us (37.4300 %)
    Routine                         LexerCheckTokenLength,       361 calls (6.8814 %), total residency = 46.933000 us (1.7243 %)
    Routine                                      LexerCur,       808 calls (15.4022 %), total residency = 89.990000 us (3.3062 %)
    Routine                                   LexerGobble,        58 calls (1.1056 %), total residency = 3.905000 us (0.1435 %)
    Routine                                     LexerDone,       107 calls (2.0396 %), total residency = 7.238000 us (0.2659 %)
    Routine                                      LexerEqf,        24 calls (0.4575 %), total residency = 2.088000 us (0.0767 %)
    Routine                             LexerCheckComment,        59 calls (1.1247 %), total residency = 3.777000 us (0.1388 %)
    Routine                                LexerCheckWeq3,        18 calls (0.3431 %), total residency = 1.166000 us (0.0428 %)
    Routine                              LexerCheckSingle,        34 calls (0.6481 %), total residency = 2.237000 us (0.0822 %)
    Routine                                  LexerCheckLt,         2 calls (0.0381 %), total residency = 0.139000 us (0.0051 %)
    Routine                         LexerCheckDoubleQuote,         1 calls (0.0191 %), total residency = 0.060000 us (0.0022 %)
    Routine                               LexerCheckMinus,         4 calls (0.0762 %), total residency = 0.264000 us (0.0097 %)
    Routine                              LexerFinishToken,       252 calls (4.8037 %), total residency = 535.045000 us (19.6573 %)
    Routine                    LexerIsOperatorOrSeparator,       542 calls (10.3317 %), total residency = 63.484000 us (2.3324 %)
    Routine                                       InFirst,       106 calls (2.0206 %), total residency = 7.954000 us (0.2922 %)
    Routine                                      InFollow,       224 calls (4.2699 %), total residency = 16.276000 us (0.5980 %)

Intermediate Representation Information:

    IR node count                        : 178
    Symbol Table node count              : 3

./src/newton/newton-darwin-EN -S tmp.smt2 applications/newton/invariants/PendulumAcceleration.nt

SMT2 Backend output:
---------------------
(set-logic QF_NRA)
(declare-fun s () Real)
(assert  ( = s 1 ) )
(declare-fun m () Real)
(assert  ( = m 1 ) )
(declare-fun kg () Real)
(assert  ( = kg 1 ) )
(declare-fun mol () Real)
(assert  ( = mol 1 ) )
(declare-fun K () Real)
(assert  ( = K 1 ) )
(declare-fun C () Real)
(assert  ( = C 1 ) )
(declare-fun A () Real)
(assert  ( = A 1 ) )
(declare-fun deg () Real)
(assert  ( = deg 1 ) )
(declare-fun jf () Real)
(assert  ( = jf 1 ) )
(declare-fun mjf () Real)
(assert  ( = mjf 1 ) )
(declare-fun N () Real)
(assert  ( = N 1 ) )
(declare-fun J () Real)
(assert  ( = J 1 ) )
(declare-fun W () Real)
(assert  ( = W 1 ) )
(declare-fun T () Real)
(assert  ( = T 1 ) )
(declare-fun ajf () Real)
(assert  ( = ajf 1 ) )
(declare-fun Hz () Real)
(assert  ( = Hz 1 ) )
(declare-fun sq () Real)
(assert  ( = sq 1 ) )
(declare-fun rho () Real)
(assert  ( = rho 1 ) )
(declare-fun vol () Real)
(assert  ( = vol 1 ) )
(declare-fun rad () Real)
(assert  ( = rad 1 ) )
(declare-fun rps () Real)
(assert  ( = rps 1 ) )
(declare-fun Pa () Real)
(assert  ( = Pa 1 ) )
(declare-fun b () Real)
(assert  ( = b 1 ) )
(declare-fun ppm () Real)
(assert  ( = ppm 1 ) )
(declare-fun RH () Real)
(assert  ( = RH 1 ) )
(declare-fun kNewtonUnitfree_pi () Real)
(assert  ( = kNewtonUnitfree_pi 3.1415926535897931 ) )
(declare-fun kNewtonUnithave_SpeedOfLight () Real)
(assert  ( = kNewtonUnithave_SpeedOfLight 299792458 ) )
(declare-fun kNewtonUnithave_AccelerationDueToGravity () Real)
(assert  ( = kNewtonUnithave_AccelerationDueToGravity 0 ) )
(declare-fun kNewtonUnithave_GravitationalConstant () Real)
(assert  ( = kNewtonUnithave_GravitationalConstant 0 ) )
(declare-fun kNewtonUnithave_AvogadroConstant () Real)
(assert  ( = kNewtonUnithave_AvogadroConstant 0 ) )
(declare-fun kNewtonUnithave_BoltzmannConstant () Real)
(assert  ( = kNewtonUnithave_BoltzmannConstant 0 ) )
(declare-fun kNewtonUnithave_ElectronCharge () Real)
(assert  ( = kNewtonUnithave_ElectronCharge 0 ) )
(declare-fun kNewtonUnithave_SpeedOfSound () Real)
(assert  ( = kNewtonUnithave_SpeedOfSound 340.29199999999997 ) )
(declare-fun kNewtonUnithave_EarthMass () Real)
(assert  ( = kNewtonUnithave_EarthMass 0 ) )
(declare-fun AccelerationRange@acceleration@0@X () Real)
(declare-fun AccelerationRange@acceleration@0@Y () Real)
(declare-fun AccelerationRange@acceleration@0@Z () Real)
(assert  ( >= AccelerationRange@acceleration@0@X ( / ( * ( - 0 2.000000 ) meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( <= AccelerationRange@acceleration@0@X ( / ( * 2.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( >= AccelerationRange@acceleration@0@Y ( / ( * ( - 0 1.000000 ) meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( <= AccelerationRange@acceleration@0@Y ( / ( * 1.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( = AccelerationRange@acceleration@0@Z ( / ( * 0.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(check-sat)
(exit)

sudo dtrace -qs $dtraceDirectory/fcalls.d -c "./noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s"

sudo dtrace -qs $dtraceDirectory/malloc.d -c "./noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s"
