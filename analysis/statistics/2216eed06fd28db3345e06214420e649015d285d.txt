
    Hardware Overview:

      Model Name: MacBook
      Model Identifier: MacBook9,1
      Processor Name: Intel Core m5
      Processor Speed: 1.2 GHz
      Number of Processors: 1
      Total Number of Cores: 2
      L2 Cache (per Core): 256 KB
      L3 Cache: 4 MB
      Memory: 8 GB

changeset: 595:2216eed06fd28db3345e06214420e649015d285d
char kNoisyVersion[] = "0.2-alpha- () (build 09-09-2018-12:06-pip@impact-Darwin-17.6.0-x86_64)";
char kNewtonVersion[] = "0.2-alpha- () (build 09-09-2018-12:05-pip@impact-Darwin-17.6.0-x86_64)";

./src/noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s

Informational Report:
---------------------

Non-zero routine residency time upper bounds and counts (5246 calls, total of 1552.0950 us):

    Routine                                         Parse,         1 calls (0.0191 %), total residency = 0.137000 us (0.0088 %)
    Routine                        ParseAnonAggregateType,         5 calls (0.0953 %), total residency = 0.283000 us (0.0182 %)
    Routine                                 ParseAssignOp,         5 calls (0.0953 %), total residency = 0.282000 us (0.0182 %)
    Routine                      ParseAssignmentStatement,         6 calls (0.1144 %), total residency = 0.340000 us (0.0219 %)
    Routine                                ParseBasicType,         7 calls (0.1334 %), total residency = 0.449000 us (0.0289 %)
    Routine                               ParseExpression,         5 calls (0.0953 %), total residency = 0.277000 us (0.0178 %)
    Routine                                   ParseFactor,         5 calls (0.0953 %), total residency = 0.276000 us (0.0178 %)
    Routine                             ParseFunctionDecl,         2 calls (0.0381 %), total residency = 0.123000 us (0.0079 %)
    Routine                   ParseHighPrecedenceBinaryOp,         1 calls (0.0191 %), total residency = 0.057000 us (0.0037 %)
    Routine             ParseIdentifierDefinitionTerminal,        12 calls (0.2287 %), total residency = 3.049000 us (0.1964 %)
    Routine                          ParseIdentifierOrNil,         6 calls (0.1144 %), total residency = 0.318000 us (0.0205 %)
    Routine                      ParseIdentifierOrNilList,         6 calls (0.1144 %), total residency = 0.361000 us (0.0233 %)
    Routine                  ParseIdentifierUsageTerminal,        10 calls (0.1906 %), total residency = 0.548000 us (0.0353 %)
    Routine                              ParseIntegerType,         2 calls (0.0381 %), total residency = 0.130000 us (0.0084 %)
    Routine                                 ParseListType,         5 calls (0.0953 %), total residency = 3.120000 us (0.2010 %)
    Routine                                 ParseLoadExpr,         1 calls (0.0191 %), total residency = 0.067000 us (0.0043 %)
    Routine                               ParseModuleDecl,         2 calls (0.0381 %), total residency = 0.185000 us (0.0119 %)
    Routine                           ParseModuleDeclBody,         2 calls (0.0381 %), total residency = 0.121000 us (0.0078 %)
    Routine                       ParseModuleTypenameDecl,         2 calls (0.0381 %), total residency = 0.129000 us (0.0083 %)
    Routine                        ParseNamegenDefinition,         1 calls (0.0191 %), total residency = 0.127000 us (0.0082 %)
    Routine                   ParseNamegenInvokeShorthand,         1 calls (0.0191 %), total residency = 0.059000 us (0.0038 %)
    Routine                                  ParseProgram,         1 calls (0.0191 %), total residency = 0.137000 us (0.0088 %)
    Routine                        ParseReadTypeSignature,         2 calls (0.0381 %), total residency = 0.117000 us (0.0075 %)
    Routine                      ParseScopedStatementList,         1 calls (0.0191 %), total residency = 0.151000 us (0.0097 %)
    Routine                                ParseSignature,         6 calls (0.1144 %), total residency = 2.613000 us (0.1684 %)
    Routine                                ParseStatement,         6 calls (0.1144 %), total residency = 2.613000 us (0.1684 %)
    Routine                            ParseStatementList,         1 calls (0.0191 %), total residency = 0.320000 us (0.0206 %)
    Routine                                     ParseTerm,         4 calls (0.0762 %), total residency = 0.214000 us (0.0138 %)
    Routine                                 ParseTerminal,        85 calls (1.6203 %), total residency = 4.758000 us (0.3066 %)
    Routine                                 ParseTypeExpr,        12 calls (0.2287 %), total residency = 0.741000 us (0.0477 %)
    Routine                                 ParseTypeName,         1 calls (0.0191 %), total residency = 0.072000 us (0.0046 %)
    Routine                        ParseTypeParameterList,         2 calls (0.0381 %), total residency = 0.195000 us (0.0126 %)
    Routine                                  ParseUnaryOp,         1 calls (0.0191 %), total residency = 2.643000 us (0.1703 %)
    Routine                       ParseWriteTypeSignature,         2 calls (0.0381 %), total residency = 0.126000 us (0.0081 %)
    Routine                     ParsenQualifiedIdentifier,         7 calls (0.1334 %), total residency = 0.383000 us (0.0247 %)
    Routine                               ParserPeekCheck,       317 calls (6.0427 %), total residency = 17.466000 us (1.1253 %)
    Routine                          ParserDepthFirstWalk,       172 calls (3.2787 %), total residency = 20.333000 us (1.3100 %)
    Routine                                 ParserAddLeaf,       113 calls (2.1540 %), total residency = 17.877000 us (1.1518 %)
    Routine                  ParserAddLeafWithChainingSeq,        36 calls (0.6862 %), total residency = 1.976000 us (0.1273 %)
    Routine                       ParserAddToModuleScopes,         2 calls (0.0381 %), total residency = 0.173000 us (0.0111 %)
    Routine                             ParserAssignTypes,         3 calls (0.0572 %), total residency = 0.290000 us (0.0187 %)
    Routine                                GenNoisyIrNode,       246 calls (4.6893 %), total residency = 80.802000 us (5.2060 %)
    Routine                         LexAllocateSourceInfo,       108 calls (2.0587 %), total residency = 51.444000 us (3.3145 %)
    Routine                              LexAllocateToken,       108 calls (2.0587 %), total residency = 35.660000 us (2.2975 %)
    Routine                                        LexPut,       108 calls (2.0587 %), total residency = 11.180000 us (0.7203 %)
    Routine                                        LexGet,       107 calls (2.0396 %), total residency = 9.525000 us (0.6137 %)
    Routine                                       LexPeek,      1106 calls (21.0827 %), total residency = 325.111000 us (20.9466 %)
    Routine                                       LexInit,         1 calls (0.0191 %), total residency = 578.561000 us (37.2761 %)
    Routine                         LexerCheckTokenLength,       361 calls (6.8814 %), total residency = 31.891000 us (2.0547 %)
    Routine                                      LexerCur,       808 calls (15.4022 %), total residency = 69.605000 us (4.4846 %)
    Routine                                   LexerGobble,        58 calls (1.1056 %), total residency = 3.293000 us (0.2122 %)
    Routine                                     LexerDone,       107 calls (2.0396 %), total residency = 5.992000 us (0.3861 %)
    Routine                                      LexerEqf,        24 calls (0.4575 %), total residency = 1.966000 us (0.1267 %)
    Routine                             LexerCheckComment,        59 calls (1.1247 %), total residency = 3.251000 us (0.2095 %)
    Routine                                LexerCheckWeq3,        18 calls (0.3431 %), total residency = 0.992000 us (0.0639 %)
    Routine                              LexerCheckSingle,        34 calls (0.6481 %), total residency = 1.896000 us (0.1222 %)
    Routine                                  LexerCheckLt,         2 calls (0.0381 %), total residency = 0.120000 us (0.0077 %)
    Routine                         LexerCheckDoubleQuote,         1 calls (0.0191 %), total residency = 0.055000 us (0.0035 %)
    Routine                               LexerCheckMinus,         4 calls (0.0762 %), total residency = 0.224000 us (0.0144 %)
    Routine                              LexerFinishToken,       252 calls (4.8037 %), total residency = 203.967000 us (13.1414 %)
    Routine                    LexerIsOperatorOrSeparator,       542 calls (10.3317 %), total residency = 34.994000 us (2.2546 %)
    Routine                                       InFirst,       106 calls (2.0206 %), total residency = 5.780000 us (0.3724 %)
    Routine                                      InFollow,       224 calls (4.2699 %), total residency = 12.150000 us (0.7828 %)

Intermediate Representation Information:

    IR node count                        : 178
    Symbol Table node count              : 3

./src/newton/newton-darwin-EN -S tmp.smt2 applications/newton/invariants/PendulumAcceleration.nt

SMT2 Backend output:
---------------------
(set-logic QF_NRA)
(declare-fun s () Real)
(assert  ( = s 1 ) )
(declare-fun m () Real)
(assert  ( = m 1 ) )
(declare-fun kg () Real)
(assert  ( = kg 1 ) )
(declare-fun mol () Real)
(assert  ( = mol 1 ) )
(declare-fun K () Real)
(assert  ( = K 1 ) )
(declare-fun C () Real)
(assert  ( = C 1 ) )
(declare-fun A () Real)
(assert  ( = A 1 ) )
(declare-fun deg () Real)
(assert  ( = deg 1 ) )
(declare-fun jf () Real)
(assert  ( = jf 1 ) )
(declare-fun mjf () Real)
(assert  ( = mjf 1 ) )
(declare-fun N () Real)
(assert  ( = N 1 ) )
(declare-fun J () Real)
(assert  ( = J 1 ) )
(declare-fun W () Real)
(assert  ( = W 1 ) )
(declare-fun T () Real)
(assert  ( = T 1 ) )
(declare-fun ajf () Real)
(assert  ( = ajf 1 ) )
(declare-fun Hz () Real)
(assert  ( = Hz 1 ) )
(declare-fun sq () Real)
(assert  ( = sq 1 ) )
(declare-fun rho () Real)
(assert  ( = rho 1 ) )
(declare-fun vol () Real)
(assert  ( = vol 1 ) )
(declare-fun rad () Real)
(assert  ( = rad 1 ) )
(declare-fun rps () Real)
(assert  ( = rps 1 ) )
(declare-fun Pa () Real)
(assert  ( = Pa 1 ) )
(declare-fun b () Real)
(assert  ( = b 1 ) )
(declare-fun ppm () Real)
(assert  ( = ppm 1 ) )
(declare-fun RH () Real)
(assert  ( = RH 1 ) )
(declare-fun kNewtonUnitfree_pi () Real)
(assert  ( = kNewtonUnitfree_pi 3.1415926535897931 ) )
(declare-fun kNewtonUnithave_SpeedOfLight () Real)
(assert  ( = kNewtonUnithave_SpeedOfLight 299792458 ) )
(declare-fun kNewtonUnithave_AccelerationDueToGravity () Real)
(assert  ( = kNewtonUnithave_AccelerationDueToGravity 0 ) )
(declare-fun kNewtonUnithave_GravitationalConstant () Real)
(assert  ( = kNewtonUnithave_GravitationalConstant 0 ) )
(declare-fun kNewtonUnithave_AvogadroConstant () Real)
(assert  ( = kNewtonUnithave_AvogadroConstant 0 ) )
(declare-fun kNewtonUnithave_BoltzmannConstant () Real)
(assert  ( = kNewtonUnithave_BoltzmannConstant 0 ) )
(declare-fun kNewtonUnithave_ElectronCharge () Real)
(assert  ( = kNewtonUnithave_ElectronCharge 0 ) )
(declare-fun kNewtonUnithave_SpeedOfSound () Real)
(assert  ( = kNewtonUnithave_SpeedOfSound 340.29199999999997 ) )
(declare-fun kNewtonUnithave_EarthMass () Real)
(assert  ( = kNewtonUnithave_EarthMass 0 ) )
(declare-fun AccelerationRange@acceleration@0@X () Real)
(declare-fun AccelerationRange@acceleration@0@Y () Real)
(declare-fun AccelerationRange@acceleration@0@Z () Real)
(assert  ( >= AccelerationRange@acceleration@0@X ( / ( * ( - 0 2.000000 ) meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( <= AccelerationRange@acceleration@0@X ( / ( * 2.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( >= AccelerationRange@acceleration@0@Y ( / ( * ( - 0 1.000000 ) meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( <= AccelerationRange@acceleration@0@Y ( / ( * 1.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(assert  ( = AccelerationRange@acceleration@0@Z ( / ( * 0.000000 meter ) ( ^ second 2.000000 ) ) ) )
(assert ( not ( = 0  ( ^ second 2.000000 ) ) ) )
(check-sat)
(exit)

sudo dtrace -qs $dtraceDirectory/fcalls.d -c "./noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s"

sudo dtrace -qs $dtraceDirectory/malloc.d -c "./noisy/noisy-darwin-EN -O0 applications/noisy/helloWorld.n -s"
