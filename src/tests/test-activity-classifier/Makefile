TREEROOT        = ../../..
include         $(TREEROOT)/config.local

NOISYPATH=$(TREEROOT)/src/noisy
NEWTONPATH=$(TREEROOT)/src/newton
COMMONPATH=$(TREEROOT)/src/common
INCLUDEPATH=$(TREEROOT)/src/include
MACHTYPE=x86_64
COMPILERVARIANT=clang
OSTYPE=darwin
include		$(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT)
include		$(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT)

PLATFORM_CFLAGS	= -Wno-gnu-designator
OBJECTEXTENSION = o
MAKEFLAGS	+= -j

CCFLAGS		= $(PLATFORM_DBGFLAGS) $(PLATFORM_CFLAGS) $(PLATFORM_DFLAGS) $(PLATFORM_OPTFLAGS)
LDFLAGS 	= $(PLATFORM_DBGFLAGS) -lm $(PLATFORM_LFLAGS) `pkg-config --libs 'libprotobuf-c >= 1.0.0'`

LIBNEWTON = Newton
LIBNOISY	= Noisy
LIBCOMMON = Common
LIBTEST = Test
LIBTEST2 = Test2

NEWTON_L10N	= EN
TEST_L10N	= EN
NOISY_L10N	= EN
COMMON_L10N	= EN

TARGET		= test-$(OSTYPE)-$(TEST_L10N)
TARGET2		= test2-$(OSTYPE)-$(TEST_L10N)

#	-std=gnu99 because we use anonymous unions and induction variable defintions in loop head.
CCFLAGS		+= -c -std=gnu99 -DkTestL10N="\"$(TEST_L10N)\"" -DTEST_L10N_EN

WFLAGS		= -Wall -Werror
INCDIRS		= -I. -I$(LIBFLEXPATH) -I$(COMMONPATH) -I$(NOISYPATH) -I$(NEWTONPATH) -I$(INCLUDEPATH)
LINKDIRS  = -L. -L$(LIBFLEXPATH) -L$(COMMONPATH) -lCommon-darwin-EN -L$(NEWTONPATH) -lNewton-darwin-EN -L$(NOISYPATH) -lNoisy-darwin-EN
PROTOC		= protoc-c

NEWTONEXTENSION	= nt

SOURCES		=\
		test-driver.c\
		test-newton-api.c\
		test-utils.c\
		test-common.c\


OBJS		=\
		test-driver.$(OBJECTEXTENSION)\
		test-newton-api.$(OBJECTEXTENSION)\
		test-utils.$(OBJECTEXTENSION)\
		test-common.$(OBJECTEXTENSION)\

OBJS2		=\
		test-driver.$(OBJECTEXTENSION)\
		test-newton-api-invariant.$(OBJECTEXTENSION)\
		test-utils.$(OBJECTEXTENSION)\
		test-common.$(OBJECTEXTENSION)\


LIBTESTOBJS =\
		test-newton-api.$(OBJECTEXTENSION)\
		test-utils.$(OBJECTEXTENSION)\
		test-common.$(OBJECTEXTENSION)\

LIBTESTOBJS2 =\
		test-newton-api-invariant.$(OBJECTEXTENSION)\
		test-utils.$(OBJECTEXTENSION)\
		test-common.$(OBJECTEXTENSION)\


HEADERS		=\
		$(LIBFLEXPATH)/flex.h           \
		$(NEWTONPATH)/newton-ffi2code-autoGeneratedSets.h \
		test-newton-api.h               \
		test-common.h                   \
		test-utils.h                    \
		minunit.h                       \
		probes.h                       \



all: init invariant

init: dtrace_probe lib$(LIBTEST2)-$(OSTYPE)-$(TEST_L10N).a target $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 

invariant: dtrace_probe lib$(LIBTEST2)-$(OSTYPE)-$(TEST_L10N).a target2 $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 

dtrace_probe: 
	dtrace -o probes.h -h -s probes.d

#
#			Libraries
#

lib$(LIBTEST)-$(OSTYPE)-$(TEST_L10N).a: $(LIBTESTOBJS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(AR) $(ARFLAGS) $@ $(LIBTESTOBJS)

lib$(LIBTEST2)-$(OSTYPE)-$(TEST_L10N).a: $(LIBTESTOBJS2) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(AR) $(ARFLAGS) $@ $(LIBTESTOBJS2)

#
#			Executables
#
target: $(OBJS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(LD) $(LINKDIRS) $(LDFLAGS) $(OBJS) -lflex-$(OSTYPE) -lm -o $(TARGET)

target2: $(OBJS2) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(LD) $(LINKDIRS) $(LDFLAGS) $(OBJS2) -lflex-$(OSTYPE) -lm -o $(TARGET2)

#
#			Objects
#
%.$(OBJECTEXTENSION): %.c $(HEADERS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(CC) $(FLEXFLAGS) $(INCDIRS) $(CCFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CC) $(FLEXFLAGS) $(INCDIRS) $(CCFLAGS) $(WFLAGS) $(OPTFLAGS) $<

clean:
	rm -rf version.c $(OBJS) $(LIBTESTOBJS) $(TARGET) $(TARGET).dSYM lib$(LIBTEST)-$(OSTYPE)-$(TEST_L10N).a  $(OBJS2) $(LIBTESTOBJS2) $(TARGET2) $(TARGET2).dSYM lib$(LIBTEST2)-$(OSTYPE)-$(TEST_L10N).a *.o *.plist result result2

