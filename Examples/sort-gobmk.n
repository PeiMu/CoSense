#
#
#
gobmkSort : progtype
{
	tMoves : adt
	{
		score : int32;
		pos : int32;
	};

	init	: namegen (N: int32, in: array [N] of tMoves) -> (out: array [N] of tMoves);
}



#
#	The probdef is translitterated from sort-gobmk.cp
#
#	See R. Jongerius and P. Stanley-Marbell
#	"Language Definition for a Notation of Computational Problems",
#	IBM Research Report rz 3828, IBM Research, 2012.
#	
#	Sorting in gobmk: simple integer sort on structures of two elements.
#	One element to sort, the other to swap.
#
init : probdef (N: int32, in: array [N] of tMoves) -> (out: array [N] of tMoves) =>
{
	n >= 0,
	n <= N-2,
	given (out in array [N] of tMoves)
	(
		forall (n in int32) (out[n].score <= out[n+1].score) &&
		out >=< in
	)
}



#
#	Algorithm implementation
#
init : namegen (N: int32, in: array [N] of tMoves) -> (out: array [N] of tMoves) =
{
}
