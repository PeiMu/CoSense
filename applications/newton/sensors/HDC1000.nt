#
#	Authored 2018, Rae Zhao.
#
#	All rights reserved.
#
#	Redistribution and use in source and binary forms, with or without
#	modification, are permitted provided that the following conditions
#	are met:
#
#	*	Redistributions of source code must retain the above
#		copyright notice, this list of conditions and the following
#		disclaimer.
#
#	*	Redistributions in binary form must reproduce the above
#		copyright notice, this list of conditions and the following
#		disclaimer in the documentation and/or other materials
#		provided with the distribution.
#
#	*	Neither the name of the author nor the names of its
#		contributors may be used to endorse or promote products
#		derived from this software without specific prior written
#		permission.
#
#	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#	"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#	LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#	FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#	COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#	BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#	LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#	CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#	LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#	ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#	POSSIBILITY OF SUCH DAMAGE.
#
#
#	Description: Base signals used in most Newton descriptions.
#
include "NewtonBaseSignals.nt"

#
#	Newton Description for the sensor HDC1000 starts here.
#
#	Figures quoted here are referenced from Texas Instruments HDC1000 humidity sensor with temperature sensor data sheet revised Nov 2014.
#
#	The constant is a value which can never be generated by the sensor. We use that to denote “impossible” or “invalid” readings.
#
kHDC1000TemperatureErasureToken: const = 16rFEFE;
kHDC1000HumidityErasureToken: const = 16rFEFE;

#
#	Standard Deviation is not available in data sheet.
#
kHDC1000TemperatureStdev: const = ;
kHDC1000HumidityStdev: const = ;

HDC1000: sensor (
			Temp: temperature,
			Humid: humidity
		)

{
	#
	#	The full range of the sensor
	#
	#	Range of Temperature can be found in document 1 on page 1.
	#
	range Temperature == [253.15*K .. 358.15*K],
	
	#
	#	Range of Humidity can be found in document 7.5 on page 5.
	#
	#	The units of humidity is %RH which is the measured relative humidity value.
	#
	range Humidity == [0 .. 100],

	#
	#	The operation sequence needed to get a sample
	#
	#	i2c address (ADR0=ADR1=0) of the sensor can be found in Table 1 of document 8.5.1 on page 10.
	#
	#	Register address of Temperature Sensor can be found in Table 2 of document 8.6 on page 14.
	#
	interface Temperature == "i2c" (address: "16r40")
	{
		#
		#	Get Temp data of 2 bytes...
		#
		Temp16bits = read [2] 16r00;
		Temperature = Temp16bits >> 2;
	},

	#
	#	Register address of Humidity Sensor can be found in Table 2 of document 8.6 on page 14.
	#
	interface Humidity == "i2c" (address: "16r40")
	{
		#
		#	Get Humid data of 2 bytes...
		#
		Humid16bits = read [2] 16r01;
		Humidity = Humid16bits >> 2;
	},

	#
	#	Uncertainty/noise model of the sensor as a function of mean value
	#
	#	Unsure about the function that describes the relationship between the following variables, so leave them as they are.
	#
	uncertainty Temperature == Gaussian(Temperature, kHDC1000TemperatureStdev)*g,
	uncertainty Humidity == Gaussian(Humidity, kHDC1000HumidityStdev)*g,

	#
	#	When this token is returned by the sensor, it denotes invalid sensed value / erasure in communication with sensor.
	#
	erasuretoken Temperature == kHDC1000TemperatureErasureToken,
	erasuretoken Humidity == kHDC1000HumidityErasureToken,

	#
	#	Precision settings list for the sensor. This is a list of (precision, cost) pairs.
	#
	#	The cost is a power or latency (or energy=power*time) cost for accessing values.
	#
	#	Could not find the relevant information in data sheet so I left the cost as 0.
	#
	precision Temperature == {
					(14*bits, nil),
				},

	precision Humidity == {
					(14*bits, nil),
				},

	#
	#	Accuracy settings list for the sensor. This is a list of (accuracy, cost) pairs.
	#
	#	Could not find the relevant information in data sheet so I left the cost as 0.
	#
	#	Accuracy of Temperature Sensor can be found in document 7.5 on page 5.
	#
	accuracy Temperature == {
					(0.2*K, nil),
				},

	#
	#	Accuracy values of Humidity Sensor can be found in document 7.5 on page 5.
	#
	accuracy Humidity == {
					(4, nil),
				}
}
