#
#	Authored 2017, Shao-Tuan Chen.
#
#	All rights reserved.
#
#	Redistribution and use in source and binary forms, with or without
#	modification, are permitted provided that the following conditions
#	are met:
#
#	*	Redistributions of source code must retain the above
#		copyright notice, this list of conditions and the following
#		disclaimer.
#
#	*	Redistributions in binary form must reproduce the above
#		copyright notice, this list of conditions and the following
#		disclaimer in the documentation and/or other materials
#		provided with the distribution.
#
#	*	Neither the name of the author nor the names of its
#		contributors may be used to endorse or promote products
#		derived from this software without specific prior written
#		permission.
#
#	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#	"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#	LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#	FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#	COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#	INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#	BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#	LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#	CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#	LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#	ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#	POSSIBILITY OF SUCH DAMAGE.
#
#
#	Description:	Physical invariant for Kepler's laws of planetary motion:
#
#	Necessary variables: 
#
#		m : Smaller point mass
#
#		M : Bigger point mass
#
#		r : Radius of the orbit
#
#		T : Period of the planetary motion 
#
#		G : Gravitational constant
#

include "NewtonBaseSignals.nt"

G : constant = 6.674 * m ** 3 * kg ** -1 * s ** -2;

#
#	Dimensional Matrix:
#
#
#	     G  M  r  T  m
#	 L   3  0  1  0  0
#	 M  -1  1  0  0  1
#	 T  -2  0  0  1  0
#
#		z = null(A,'r')
#

Kepler : invariant(r: distance@0, period: time) =
{
	(period ** 2) ~ (r ** 3 / (kNewtonUnithave_GravitationalConstant * kilogram))
}
