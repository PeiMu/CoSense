#
#	The module definition gives its signature for other
#	modules (e.g., the runtime system) that want to execute
#	it.
#
#	The module definition need not export the function init
#	if it is not intended to by loaded by the "conventional loader"
#	(e.g., the OS shell).
#
gccSearch : module ()
{
	search	: function (N: int32, elementBits: array [N] of int32) -> (found: bool);
	search	: probdef (N: int32, elementBits: array [N] of int32) -> (found: bool);
}



#
#	The probdef is transliterated from sort-gobmk.cp
#
#	See R. Jongerius and P. Stanley-Marbell
#	"Language Definition for a Notation of Computational Problems",
#	IBM Research Report rz 3828, IBM Research, 2012.
#	
#	Search function in GCC, checks for 0 entries in an array.
#
search : probdef (N: int32, elementBits: array [N] of int32) -> (found: bool) =>
{
	#
	#	The outer 'given (found in bool)' is not needed since N, elementBits, and found
	#	are already bound to the read / write types of the function
	#
	given (found in bool)
	(
		found == exists (n in int32) (elementBits[n] == 0)
	)
}
