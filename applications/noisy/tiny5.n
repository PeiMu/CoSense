tiny5 : module ()
{
	Pixel : adt
	{
		r : nat8;
		g : nat8;
		b : nat8;
		a : nat8;
	};

	newComplex	: type (int64, int64);
	newRational	: type (int64, int64);

	init	: function (arguments: list of string) -> (results: list of string);
	first	: function (argumentA: (int64, int64), argumentB: nat8, argumentC: int64) -> (result: int64);
	second	: function (argumentA: int64, argumentB: string) -> (resultA: int64, resultB: (int64, int64));
	third	: function (argument: float64) -> (resultA: int64, resultB: float64, resultC: (int64, string, (int64, nat8)), resultD: string);
}

init : function (arguments: list of string) -> (results: list of string) =
{
}

first : function (argumentA: (int64, int64), argumentB: nat8, argumentC: int64) -> (result: int64) =
{
}

second : function (argumentA: int64, argumentB: string) -> (resultA: int64, resultB: (int64, int64)) =
{
}

third : function (argument: float64) -> (resultA: int64, resultB: float64, resultC: (int64, string, (int64, nat8)), resultD: string) =
{
}

localfunc1 : function (argumentA: int64, argumentB: int64) -> (result: int64) =
{
}

localfunc2 : function (argumentA: float64, argumentB: int64, argumentC: nat8, argumentD: string) -> (result: int64) =
{
}

localfunc3 : function (argumentA: int64, argumentB: int64) -> (resultA: int64, resultB: (int64, int64)) =
{
}

localfunc4 : function (argumentA: int64, argumentB: int64) -> (result: (int64, int64)) =
{
}
