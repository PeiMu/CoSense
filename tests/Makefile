TREEROOT        = ..

include         $(TREEROOT)/config.local

COMMONPATH      = ../common
NOISYPATH	= ../noisy
NEWTONPATH	= ../newton
INCLUDEPATH	= ../include
COMPILERVARIANT = clang


include		$(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT)
include		$(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT)

MAKEFLAGS	+= -j

CCFLAGS		= $(PLATFORM_DBGFLAGS) $(PLATFORM_CFLAGS) $(PLATFORM_DFLAGS) $(PLATFORM_OPTFLAGS)
LDFLAGS 	= $(PLATFORM_DBGFLAGS) -lm $(PLATFORM_LFLAGS)

LIBNEWTON	= Newton
LIBNOISY	= Noisy
LIBCOMMON	= Common
LIBTEST		= Test

NEWTON_L10N	= EN
TEST_L10N	= EN
NOISY_L10N	= EN
COMMON_L10N	= EN

TARGET		= test-$(OSTYPE)-$(TEST_L10N)

#	-std=gnu99 because we use anonymous unions and induction variable defintions in loop head.
CCFLAGS		+= -c -std=gnu99 -DkTestL10N="\"$(TEST_L10N)\"" -DTEST_L10N_EN

WFLAGS		= -Wall -Werror
INCDIRS		= -I. -I$(LIBFLEXPATH) -I$(COMMONPATH) -I$(NOISYPATH) -I$(NEWTONPATH) -I$(INCLUDEPATH)
LINKDIRS	= -L. -L$(NEWTONPATH) -lNewton-$(OSTYPE)-EN -L$(COMMONPATH) -lCommon-$(OSTYPE)-EN -L$(LIBFLEXPATH) -lflex-$(OSTYPE)
PROTOC		= protoc-c

NEWTONEXTENSION	= nt

SOURCES		=\
		test-driver.c\
		test-newton-api.c\
		test-newton-parser.c\
		test-common.c\

#
#	Clang seems to be unable to do LTO unless we have all the objects
#	not tucked into a library, so we don't just simply link main against
#	-l$(LIBNEWTON)-$(OSTYPE)-$(NEWTON_L10N)
#
OBJS		=\
		test-driver.$(OBJECTEXTENSION)\
		test-newton-api.$(OBJECTEXTENSION)\
		test-newton-parser.$(OBJECTEXTENSION)\
		test-common.$(OBJECTEXTENSION)\




LIBTESTOBJS =\
		test-newton-api.$(OBJECTEXTENSION)\
		test-newton-parser.$(OBJECTEXTENSION)\
		test-common.$(OBJECTEXTENSION)\


HEADERS		=\
		$(LIBFLEXPATH)/flex.h           \
		$(NEWTONPATH)/newton-ffi2code-autoGeneratedSets.h \
		test-newton-api.h               \
		test-newton-parser.h            \
		test-common.h                   \
		minunit.h                       \



all: lib$(LIBTEST)-$(OSTYPE)-$(TEST_L10N).a target $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 


#
#			Libraries
#

lib$(LIBTEST)-$(OSTYPE)-$(TEST_L10N).a: $(LIBTESTOBJS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(AR) $(ARFLAGS) $@ $(LIBTESTOBJS)

#
#			Executables
#
target: $(OBJS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(LD) $(LDFLAGS) $(LINKDIRS) $(OBJS) $(LINKDIRS) -o $(TARGET)


#
#			Objects
#
%.$(OBJECTEXTENSION): %.c $(HEADERS) $(CONFIGPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) $(COMMONPATH)/config.$(OSTYPE)-$(MACHTYPE).$(COMPILERVARIANT) Makefile 
	$(CC) $(FLEXFLAGS) $(INCDIRS) $(CCFLAGS) $(WFLAGS) $(OPTFLAGS) $(LINTFLAGS) $<
	$(CC) $(FLEXFLAGS) $(INCDIRS) $(CCFLAGS) $(WFLAGS) $(OPTFLAGS) $<

clean:
	rm -rf version.c $(OBJS) $(LIBTESTOBJS) $(TARGET) $(TARGET).dSYM lib$(LIBTEST)-$(OSTYPE)-$(TEST_L10N).a *.o *.plist 

