--//
--//	Wirth FFI description for Noisy
--//



--//
--//	FIRST()s
--//
production	kNoisyIrNodeType_Pprogram:		firstset = {	kNoisyIrNodeType_Tidentifier	}
production	kNoisyIrNodeType_PprogtypeDeclaration:	firstset = {	kNoisyIrNodeType_Tidentifier	}
production	kNoisyIrNodeType_PprogtypeBody:		firstset = {
									kNoisyIrNodeType_Zepsilon,
									kNoisyIrNodeType_Tidentifier
								}
production	kNoisyIrNodeType_PprogtypeTypenameDeclaration:	firstset = {	kNoisyIrNodeType_Tidentifier	}
production	kNoisyIrNodeType_PconstantDeclaration:		firstset = {	kNoisyIrNodeType_Tconst		}
production	kNoisyIrNodeType_PtypeDeclaration:		firstset = {
									kNoisyIrNodeType_Ttype,
									kNoisyIrNodeType_Tadt
								}
production	kNoisyIrNodeType_PadtTypeDeclaration:		firstset = {	kNoisyIrNodeType_Tadt		}
production	kNoisyIrNodeType_PnamegenDeclaration:		firstset = {	kNoisyIrNodeType_Tnamegen	}
production	kNoisyIrNodeType_PidentifierOrNil:	firstset = {
									kNoisyIrNodeType_Tidentifier,
									kNoisyIrNodeType_Tnil
								}
production	kNoisyIrNodeType_PidentifierOrNilList:	firstset = {
									kNoisyIrNodeType_Tidentifier,
									kNoisyIrNodeType_Tnil
								}
production	kNoisyIrNodeType_PidentifierList:	firstset = {	kNoisyIrNodeType_Tidentifier	}
production	kNoisyIrNodeType_PtypeExpression:	firstset = {
									kNoisyIrNodeType_Tbool,
									kNoisyIrNodeType_Tnybble,
									kNoisyIrNodeType_Tbyte,
									kNoisyIrNodeType_Tint,
									kNoisyIrNodeType_Treal,
									kNoisyIrNodeType_Tfixed,
									kNoisyIrNodeType_Tstring,
									kNoisyIrNodeType_Tarray,
									kNoisyIrNodeType_Tlist,
									kNoisyIrNodeType_TleftParen,
									kNoisyIrNodeType_Tset,
									kNoisyIrNodeType_Tidentifier
								}
production	kNoisyIrNodeType_Ptypename:		firstset = {	kNoisyIrNodeType_Tidentifier	}
production	kNoisyIrNodeType_Ptolerance:		firstset = {
									kNoisyIrNodeType_Tepsilon,
									kNoisyIrNodeType_Talpha,
									kNoisyIrNodeType_Ttau
								}
production	kNoisyIrNodeType_PerrorMagnitudeTolerance: firstset = {	kNoisyIrNodeType_Tepsilon	}
production	kNoisyIrNodeType_PlossTolerance:	firstset = {	kNoisyIrNodeType_Talpha		}
production	kNoisyIrNodeType_PlatencyTolerance:	firstset = {	kNoisyIrNodeType_Ttau		}
production	kNoisyIrNodeType_PbasicType:		firstset = {
									kNoisyIrNodeType_Tbool,
									kNoisyIrNodeType_Tnybble,
									kNoisyIrNodeType_Tbyte,
									kNoisyIrNodeType_Tint,
									kNoisyIrNodeType_Treal,
									kNoisyIrNodeType_Tfixed,
									kNoisyIrNodeType_Tstring
								}
production	kNoisyIrNodeType_PrealType:		firstset = {
									kNoisyIrNodeType_Treal,
									kNoisyIrNodeType_Tfixed
								}
production	kNoisyIrNodeType_PfixedType:		firstset = {	kNoisyIrNodeType_Tfixed		}
production	kNoisyIrNodeType_PanonAggregateType:	firstset = {
									kNoisyIrNodeType_Tarray,
									kNoisyIrNodeType_Tlist,
									kNoisyIrNodeType_TleftParen,
									kNoisyIrNodeType_Tset
								}
production	kNoisyIrNodeType_ParrayType:		firstset = {	kNoisyIrNodeType_Tarray		}
production	kNoisyIrNodeType_PlistType:		firstset = {	kNoisyIrNodeType_Tlist		}
production	kNoisyIrNodeType_PtupleType:		firstset = {	kNoisyIrNodeType_TleftParen	}
production	kNoisyIrNodeType_PsetType:		firstset = {	kNoisyIrNodeType_Tset		}
production	kNoisyIrNodeType_PinitList:		firstset = {	kNoisyIrNodeType_TleftBrace	}
production	kNoisyIrNodeType_PindexedInitList:	firstset = {	kNoisyIrNodeType_TleftBrace	}
production	kNoisyIrNodeType_PstarInitList:		firstset = {	kNoisyIrNodeType_TleftBrace	}
production	kNoisyIrNodeType_Pelement:		firstset = {
									kNoisyIrNodeType_Tbool,
									kNoisyIrNodeType_Tnybble,
									kNoisyIrNodeType_Tbyte,
									kNoisyIrNodeType_Tint,
									kNoisyIrNodeType_Treal,
									kNoisyIrNodeType_Tfixed,
									kNoisyIrNodeType_Tstring,
									kNoisyIrNodeType_Ttilde,
									kNoisyIrNodeType_Tbang,
									kNoisyIrNodeType_Tminus,
									kNoisyIrNodeType_Tplus,
									kNoisyIrNodeType_Tgets,
									kNoisyIrNodeType_Thd,
									kNoisyIrNodeType_Ttl,
									kNoisyIrNodeType_Tlen,
									kNoisyIrNodeType_Tidentifier,
									kNoisyIrNodeType_TintConst,
									kNoisyIrNodeType_TrealConst,
									kNoisyIrNodeType_TstringConst,
									kNoisyIrNodeType_TboolConst,
									kNoisyIrNodeType_TleftParen,
									kNoisyIrNodeType_Tlist,
									kNoisyIrNodeType_Tset,
									kNoisyIrNodeType_Tarray,
									kNoisyIrNodeType_Terasures,
									kNoisyIrNodeType_Terrors,
									kNoisyIrNodeType_Tlatency,
									kNoisyIrNodeType_Tchan2name,
									kNoisyIrNodeType_Tvar2name,
									kNoisyIrNodeType_Tname2chan
								}
production	kNoisyIrNodeType_PnamegenDefinition:	firstset = {	kNoisyIrNodeType_Tidentifier	}
production	kNoisyIrNodeType_PscopedStatementList:	firstset = {	kNoisyIrNodeType_TleftBrace	}
production	kNoisyIrNodeType_PstatementList:	firstset = {
									kNoisyIrNodeType_Zepsilon,
									kNoisyIrNodeType_Tidentifier,
									kNoisyIrNodeType_TleftParen,
									kNoisyIrNodeType_Tmatch,
									kNoisyIrNodeType_TmatchSeq,
									kNoisyIrNodeType_Titer,
									kNoisyIrNodeType_TleftBrace,
									kNoisyIrNodeType_Tsemicolon
								}
production	kNoisyIrNodeType_Pstatement:		firstset = {
									kNoisyIrNodeType_Tidentifier,
									kNoisyIrNodeType_Tnil,
									kNoisyIrNodeType_TleftParen,
									kNoisyIrNodeType_Tmatch,
									kNoisyIrNodeType_TmatchSeq,
									kNoisyIrNodeType_Titer,
									kNoisyIrNodeType_TleftBrace,
									kNoisyIrNodeType_Tsemicolon
								}
production	kNoisyIrNodeType_PassignOp:		firstset = {
									kNoisyIrNodeType_Tas,
									kNoisyIrNodeType_TxorAs,
									kNoisyIrNodeType_TorAs,
									kNoisyIrNodeType_TandAs,
									kNoisyIrNodeType_TmodAs,
									kNoisyIrNodeType_TdivAs,
									kNoisyIrNodeType_TmulAs,
									kNoisyIrNodeType_TsubAs,
									kNoisyIrNodeType_TaddAs,
									kNoisyIrNodeType_TrightShiftAs,
									kNoisyIrNodeType_TleftShiftAs,
									kNoisyIrNodeType_TchanWrite,
									kNoisyIrNodeType_TdefineAs
								}
production	kNoisyIrNodeType_PmatchStatement:	firstset = {
									kNoisyIrNodeType_Tmatch,
									kNoisyIrNodeType_TmatchSeq
								}
production	kNoisyIrNodeType_PiterationStatement:	firstset = {	kNoisyIrNodeType_Titer	}
production	kNoisyIrNodeType_PguardBody:		firstset = {
									kNoisyIrNodeType_Zepsilon,
									kNoisyIrNodeType_Tbool,
									kNoisyIrNodeType_Tnybble,
									kNoisyIrNodeType_Tbyte,
									kNoisyIrNodeType_Tint,
									kNoisyIrNodeType_Treal,
									kNoisyIrNodeType_Tfixed,
									kNoisyIrNodeType_Tstring,
									kNoisyIrNodeType_Ttilde,
									kNoisyIrNodeType_Tbang,
									kNoisyIrNodeType_Tminus,
									kNoisyIrNodeType_Tplus,
									kNoisyIrNodeType_Tgets,
									kNoisyIrNodeType_Thd,
									kNoisyIrNodeType_Ttl,
									kNoisyIrNodeType_Tlen,
									kNoisyIrNodeType_Tidentifier,
									kNoisyIrNodeType_TintConst,
									kNoisyIrNodeType_TrealConst,
									kNoisyIrNodeType_TstringConst,
									kNoisyIrNodeType_TboolConst,
									kNoisyIrNodeType_TleftParen, 
									kNoisyIrNodeType_Tlist,
									kNoisyIrNodeType_Tset,
									kNoisyIrNodeType_Tarray,
									kNoisyIrNodeType_Terasures,
									kNoisyIrNodeType_Terrors,
									kNoisyIrNodeType_Tlatency,
									kNoisyIrNodeType_Tchan2name,
									kNoisyIrNodeType_Tvar2name,
									kNoisyIrNodeType_Tname2chan
								}
production	kNoisyIrNodeType_Pexpression:		firstset = {
									kNoisyIrNodeType_Tbool,
									kNoisyIrNodeType_Tnybble,
									kNoisyIrNodeType_Tbyte,
									kNoisyIrNodeType_Tint,
									kNoisyIrNodeType_Treal,
									kNoisyIrNodeType_Tfixed,
									kNoisyIrNodeType_Tstring,
									kNoisyIrNodeType_Ttilde,
									kNoisyIrNodeType_Tbang,
									kNoisyIrNodeType_Tminus,
									kNoisyIrNodeType_Tplus,
									kNoisyIrNodeType_Tgets,
									kNoisyIrNodeType_Thd,
									kNoisyIrNodeType_Ttl,
									kNoisyIrNodeType_Tlen,
									kNoisyIrNodeType_Tidentifier,
									kNoisyIrNodeType_TintConst,
									kNoisyIrNodeType_TrealConst,
									kNoisyIrNodeType_TstringConst,
									kNoisyIrNodeType_TboolConst,
									kNoisyIrNodeType_TleftParen, 
									kNoisyIrNodeType_Tlist,
									kNoisyIrNodeType_Tset,
									kNoisyIrNodeType_Tarray,
									kNoisyIrNodeType_Terasures,
									kNoisyIrNodeType_Terrors,
									kNoisyIrNodeType_Tlatency,
									kNoisyIrNodeType_Tchan2name,
									kNoisyIrNodeType_Tvar2name,
									kNoisyIrNodeType_Tname2chan
								}
production	kNoisyIrNodeType_PlistCastExpression:	firstset = {	kNoisyIrNodeType_Tlist	}
production	kNoisyIrNodeType_PsetCastExpression:	firstset = {	kNoisyIrNodeType_Tset	}
production	kNoisyIrNodeType_ParrayCastExpression:	firstset = {	kNoisyIrNodeType_Tarray	}
production	kNoisyIrNodeType_PanonAggregateCastExpression: firstset = {
									kNoisyIrNodeType_Tlist,
									kNoisyIrNodeType_Tset,
									kNoisyIrNodeType_Tarray
								}
production	kNoisyIrNodeType_PchanEventExpression:	firstset = {
									kNoisyIrNodeType_Terasures,
									kNoisyIrNodeType_Terrors,
									kNoisyIrNodeType_Tlatency
								}
production	kNoisyIrNodeType_Pchan2nameExpression:	firstset = {	kNoisyIrNodeType_Tchan2name	}
production	kNoisyIrNodeType_Pvar2nameExpression:	firstset = {	kNoisyIrNodeType_Tvar2name	}
production	kNoisyIrNodeType_Pname2chanExpression:	firstset = {	kNoisyIrNodeType_Tname2chan	}
production	kNoisyIrNodeType_Pterm:			firstset = {
									kNoisyIrNodeType_Tbool,
									kNoisyIrNodeType_Tnybble,
									kNoisyIrNodeType_Tbyte,
									kNoisyIrNodeType_Tint,
									kNoisyIrNodeType_Treal,
									kNoisyIrNodeType_Tfixed,
									kNoisyIrNodeType_Tstring,
									kNoisyIrNodeType_Ttilde,
									kNoisyIrNodeType_Tbang,
									kNoisyIrNodeType_Tminus,
									kNoisyIrNodeType_Tplus,
									kNoisyIrNodeType_Tgets,
									kNoisyIrNodeType_Thd,
									kNoisyIrNodeType_Ttl,
									kNoisyIrNodeType_Tlen,
									kNoisyIrNodeType_Tidentifier,
									kNoisyIrNodeType_TintConst,
									kNoisyIrNodeType_TrealConst,
									kNoisyIrNodeType_TstringConst,
									kNoisyIrNodeType_TboolConst,
									kNoisyIrNodeType_TleftParen
								}
production	kNoisyIrNodeType_Pfactor:		firstset = {
									kNoisyIrNodeType_Tidentifier,
									kNoisyIrNodeType_TintConst,
									kNoisyIrNodeType_TrealConst,
									kNoisyIrNodeType_TstringConst,
									kNoisyIrNodeType_TboolConst,
									kNoisyIrNodeType_TleftParen
								}
production	kNoisyIrNodeType_PfieldSelect:		firstset = {
									kNoisyIrNodeType_Tdot,
									kNoisyIrNodeType_TleftBrac
								}
production	kNoisyIrNodeType_PhighPrecedenceBinaryOp: firstset = {
									kNoisyIrNodeType_Tasterisk,
									kNoisyIrNodeType_Tdiv,
									kNoisyIrNodeType_Tpercent,
									kNoisyIrNodeType_Tcaret,
									kNoisyIrNodeType_Tcons
								}
production	kNoisyIrNodeType_PlowPrecedenceBinaryOp: firstset = {
									kNoisyIrNodeType_Tplus,
									kNoisyIrNodeType_Tminus,
									kNoisyIrNodeType_TrightShift,
									kNoisyIrNodeType_TleftShift,
									kNoisyIrNodeType_Tstroke,
									kNoisyIrNodeType_Teq,
									kNoisyIrNodeType_Tneq,
									kNoisyIrNodeType_Tgt,
									kNoisyIrNodeType_Tlt,
									kNoisyIrNodeType_Tge,
									kNoisyIrNodeType_Tle,
									kNoisyIrNodeType_Tand,
									kNoisyIrNodeType_Tor
								}
production	kNoisyIrNodeType_PcmpOp:		firstset = {
									kNoisyIrNodeType_Teq,
									kNoisyIrNodeType_Tneq,
									kNoisyIrNodeType_Tgt,
									kNoisyIrNodeType_Tlt,
									kNoisyIrNodeType_Tge,
									kNoisyIrNodeType_Tle
								}
production	kNoisyIrNodeType_PbooleanOp:		firstset = {
									kNoisyIrNodeType_Tand,
									kNoisyIrNodeType_Tor
								}
production	kNoisyIrNodeType_PunaryOp:		firstset = {
									kNoisyIrNodeType_Ttilde,
									kNoisyIrNodeType_Tbang,
									kNoisyIrNodeType_Tminus,
									kNoisyIrNodeType_Tplus,
									kNoisyIrNodeType_Tgets,
									kNoisyIrNodeType_Thd,
									kNoisyIrNodeType_Ttl,
									kNoisyIrNodeType_Tlen
								}

production	kNoisyIrNodeType_Pidentifier:		firstset = {kNoisyIrNodeType_Tidentifier}




--//
--//	FOLLOW()s
--//
production	kNoisyIrNodeType_Pidentifier:		followset = {
									kNoisyIrNodeType_Tcolon,
									firstset(kNoisyIrNodeType_PfieldSelect),
									--// This creates a loop... followset(kNoisyIrNodeType_Ptypename),
									kNoisyIrNodeType_Tas,
									firstset(kNoisyIrNodeType_PcmpOp),
									followset(kNoisyIrNodeType_Pfactor),
									followset(kNoisyIrNodeType_PfieldSelect)
								}
production	kNoisyIrNodeType_Pprogram:		followset = {	kNoisyIrNodeType_Zeof		}
production	kNoisyIrNodeType_PprogtypeDeclaration:	followset = {	kNoisyIrNodeType_Tidentifier	}
production	kNoisyIrNodeType_PprogtypeBody:		followset = {	kNoisyIrNodeType_TrightBrace	}
production	kNoisyIrNodeType_PprogtypeTypenameDeclaration:	followset = {	kNoisyIrNodeType_Tsemicolon	}
production	kNoisyIrNodeType_PconstantDeclaration:		followset = {	kNoisyIrNodeType_Tsemicolon	}
production	kNoisyIrNodeType_PtypeDeclaration:		followset = {	kNoisyIrNodeType_Tsemicolon	}
production	kNoisyIrNodeType_PadtTypeDeclaration:		followset = {	kNoisyIrNodeType_Tsemicolon	}
production	kNoisyIrNodeType_PnamegenDeclaration:		followset = {	kNoisyIrNodeType_Tsemicolon	}
production	kNoisyIrNodeType_PidentifierOrNil:	followset = {
									kNoisyIrNodeType_Tcomma,
									followset(kNoisyIrNodeType_PidentifierList)
								}
production	kNoisyIrNodeType_PidentifierOrNilList:	followset = {
									kNoisyIrNodeType_Tcolon,
									firstset(kNoisyIrNodeType_PassignOp),
									kNoisyIrNodeType_TrightParen
								}
production	kNoisyIrNodeType_PidentifierList:	followset = {
									kNoisyIrNodeType_Tcolon,
									firstset(kNoisyIrNodeType_PassignOp),
									kNoisyIrNodeType_TrightParen
								}
production	kNoisyIrNodeType_PtypeExpression:	followset = {
									kNoisyIrNodeType_Tsemicolon,
									kNoisyIrNodeType_Tcomma,
									kNoisyIrNodeType_TrightParen,
									firstset(kNoisyIrNodeType_PidentifierList),
									firstset(kNoisyIrNodeType_Pexpression),
									--// This creates a loop... followset(kNoisyIrNodeType_PanonAggregateType),
									followset(kNoisyIrNodeType_Ptypename)
								}
production	kNoisyIrNodeType_Ptypename:		followset = {	followset(kNoisyIrNodeType_Pidentifier)	}
production	kNoisyIrNodeType_Ptolerance:		followset = {
									kNoisyIrNodeType_Tcomma,
									followset(kNoisyIrNodeType_PtypeExpression)
								}
production	kNoisyIrNodeType_PerrorMagnitudeTolerance: followset = {
									kNoisyIrNodeType_Tcomma,
									followset(kNoisyIrNodeType_PtypeExpression)
								}
production	kNoisyIrNodeType_PlossTolerance:	followset = {
									kNoisyIrNodeType_Tcomma,
									followset(kNoisyIrNodeType_PtypeExpression)
								}
production	kNoisyIrNodeType_PlatencyTolerance:	followset = {
									kNoisyIrNodeType_Tcomma,
									followset(kNoisyIrNodeType_PtypeExpression)
								}
production	kNoisyIrNodeType_PbasicType:		followset = {
									firstset(kNoisyIrNodeType_Ptolerance),
									followset(kNoisyIrNodeType_PtypeExpression),
									firstset(kNoisyIrNodeType_PunaryOp),
									firstset(kNoisyIrNodeType_Pfactor)
								}
production	kNoisyIrNodeType_PrealType:		followset = {	followset(kNoisyIrNodeType_PbasicType)	}
production	kNoisyIrNodeType_PfixedType:		followset = {	followset(kNoisyIrNodeType_PrealType)	}
production	kNoisyIrNodeType_PanonAggregateType:	followset = {	followset(kNoisyIrNodeType_PtypeExpression)	}
production	kNoisyIrNodeType_ParrayType:		followset = {	followset(kNoisyIrNodeType_PtypeExpression)	}
production	kNoisyIrNodeType_PlistType:		followset = {	followset(kNoisyIrNodeType_PtypeExpression)	}
production	kNoisyIrNodeType_PtupleType:		followset = {
									followset(kNoisyIrNodeType_PtypeExpression),
									followset(kNoisyIrNodeType_PnamegenDeclaration),
									kNoisyIrNodeType_Tcolon,
									kNoisyIrNodeType_Tas
								}
production	kNoisyIrNodeType_PsetType:		followset = {	followset(kNoisyIrNodeType_PtypeExpression)	}
production	kNoisyIrNodeType_PinitList:		followset = {
									followset(kNoisyIrNodeType_PlistCastExpression),
									followset(kNoisyIrNodeType_PsetCastExpression)
								}
production	kNoisyIrNodeType_PindexedInitList:	followset = {	followset(kNoisyIrNodeType_ParrayCastExpression)	}
production	kNoisyIrNodeType_PstarInitList:		followset = {	followset(kNoisyIrNodeType_ParrayCastExpression)	}
production	kNoisyIrNodeType_Pelement:		followset = {
									kNoisyIrNodeType_Tcomma,
									kNoisyIrNodeType_TrightBrace
								}
production	kNoisyIrNodeType_PnamegenDefinition:	followset = {
									firstset(kNoisyIrNodeType_PnamegenDefinition),
									followset(kNoisyIrNodeType_Pprogram)
								}
production	kNoisyIrNodeType_PscopedStatementList:	followset = {
									followset(kNoisyIrNodeType_PnamegenDefinition),
									kNoisyIrNodeType_Tsemicolon
								}
production	kNoisyIrNodeType_PstatementList:	followset = {
									kNoisyIrNodeType_TrightBrace,
									followset(kNoisyIrNodeType_PguardBody)
								}
production	kNoisyIrNodeType_Pstatement:		followset = {	firstset(kNoisyIrNodeType_Pstatement)	}
production	kNoisyIrNodeType_PassignOp:		followset = {	firstset(kNoisyIrNodeType_Pexpression)	}
production	kNoisyIrNodeType_PmatchStatement:	followset = {	kNoisyIrNodeType_Tsemicolon	}
production	kNoisyIrNodeType_PiterationStatement:	followset = {	kNoisyIrNodeType_Tsemicolon	}
production	kNoisyIrNodeType_PguardBody:		followset = {	kNoisyIrNodeType_TrightBrace	}
production	kNoisyIrNodeType_Pexpression:		followset = {
									kNoisyIrNodeType_Tcomma,
									kNoisyIrNodeType_TrightBrace,
									kNoisyIrNodeType_Tgoes,
									followset(kNoisyIrNodeType_Pelement),
									kNoisyIrNodeType_Tsemicolon),
									--// This creates a loop... followset(kNoisyIrNodeType_PchanEventExpression),
									kNoisyIrNodeType_TrealConst,
									kNoisyIrNodeType_TrightParen,
									kNoisyIrNodeType_Tcolon,
									kNoisyIrNodeType_TrightBrac
								}
production	kNoisyIrNodeType_PlistCastExpression:	followset = {	followset(kNoisyIrNodeType_PanonAggregateCastExpression)	}
production	kNoisyIrNodeType_PsetCastExpression:	followset = {	followset(kNoisyIrNodeType_PanonAggregateCastExpression)	}
production	kNoisyIrNodeType_ParrayCastExpression:	followset = {	followset(kNoisyIrNodeType_PanonAggregateCastExpression)	}
production	kNoisyIrNodeType_PanonAggregateCastExpression:	followset = {	followset(kNoisyIrNodeType_Pexpression)	}
production	kNoisyIrNodeType_PchanEventExpression:	followset = {	followset(kNoisyIrNodeType_Pexpression)	}
production	kNoisyIrNodeType_Pchan2nameExpression:	followset = {	followset(kNoisyIrNodeType_Pexpression)	}
production	kNoisyIrNodeType_Pvar2nameExpression:	followset = {	followset(kNoisyIrNodeType_Pexpression)	}
production	kNoisyIrNodeType_Pname2chanExpression:	followset = {	followset(kNoisyIrNodeType_Pexpression)	}
production	kNoisyIrNodeType_Pterm:			followset = {
									firstset(kNoisyIrNodeType_PlowPrecedenceBinaryOp),
									followset(kNoisyIrNodeType_Pexpression)
								}
production	kNoisyIrNodeType_Pfactor:		followset = {
									kNoisyIrNodeType_TstringConst,
									followset(kNoisyIrNodeType_Pchan2nameExpression),
									followset(kNoisyIrNodeType_Pvar2nameExpression),
									kNoisyIrNodeType_Tinc,
									kNoisyIrNodeType_Tdec,
									firstset(kNoisyIrNodeType_PhighPrecedenceBinaryOp),
									followset(kNoisyIrNodeType_Pterm)
								}
production	kNoisyIrNodeType_PfieldSelect:		followset = {
									firstset(kNoisyIrNodeType_PfieldSelect),
									followset(kNoisyIrNodeType_PidentifierOrNil),
									followset(kNoisyIrNodeType_Pfactor)
								}
production	kNoisyIrNodeType_PhighPrecedenceBinaryOp: followset = {	firstset(kNoisyIrNodeType_Pfactor)	}
production	kNoisyIrNodeType_PlowPrecedenceBinaryOp: followset = {	firstset(kNoisyIrNodeType_Pterm)	}
production	kNoisyIrNodeType_PcmpOp:		followset = {
									firstset(kNoisyIrNodeType_Pexpression),
									followset(kNoisyIrNodeType_PlowPrecedenceBinaryOp)
								}
production	kNoisyIrNodeType_PbooleanOp:		followset = {	followset(kNoisyIrNodeType_PlowPrecedenceBinaryOp)	}
production	kNoisyIrNodeType_PunaryOp:		followset = {	firstset(kNoisyIrNodeType_Pfactor)	}



---//
---//	FOLLOW()s of tokens (we did not do this in M)
---//
token		kNoisyIrNodeType_TaddAs:		followset = {T_XXX}
token		kNoisyIrNodeType_Tadt:			followset = {T_XXX}
token		kNoisyIrNodeType_Talpha:		followset = {T_XXX}
token		kNoisyIrNodeType_Tampersand:			followset = {T_XXX}
token		kNoisyIrNodeType_Tand:			followset = {T_XXX}
token		kNoisyIrNodeType_TandAs:		followset = {T_XXX}
token		kNoisyIrNodeType_Tarray:		followset = {T_XXX}
token		kNoisyIrNodeType_Tas:			followset = {T_XXX}
token		kNoisyIrNodeType_Tasterisk:		followset = {T_XXX}
token		kNoisyIrNodeType_Tbang:			followset = {T_XXX}
token		kNoisyIrNodeType_Tbool:			followset = {T_XXX}
token		kNoisyIrNodeType_TboolConst:		followset = {T_XXX}
token		kNoisyIrNodeType_Tbyte:			followset = {T_XXX}
token		kNoisyIrNodeType_Tcaret:		followset = {T_XXX}
token		kNoisyIrNodeType_Tchan:			followset = {T_XXX}
token		kNoisyIrNodeType_Tchan2name:		followset = {T_XXX}
token		kNoisyIrNodeType_TchanWrite:		followset = {T_XXX}
token		kNoisyIrNodeType_TcharConst:		followset = {T_XXX}
token		kNoisyIrNodeType_Tcolon:		followset = {T_XXX}
token		kNoisyIrNodeType_Tcomma:		followset = {T_XXX}
token		kNoisyIrNodeType_Tcons:			followset = {T_XXX}
token		kNoisyIrNodeType_Tconst:		followset = {T_XXX}
token		kNoisyIrNodeType_TdefineAs:		followset = {T_XXX}
token		kNoisyIrNodeType_Tdec:			followset = {T_XXX}
token		kNoisyIrNodeType_Tdiv:			followset = {T_XXX}
token		kNoisyIrNodeType_TdivAs:		followset = {T_XXX}
token		kNoisyIrNodeType_Tdot:			followset = {T_XXX}
token		kNoisyIrNodeType_TdoubleQuote:		followset = {T_XXX}
token		kNoisyIrNodeType_Tepsilon:		followset = {T_XXX}
token		kNoisyIrNodeType_Teq:			followset = {T_XXX}
token		kNoisyIrNodeType_Terasures:		followset = {T_XXX}
token		kNoisyIrNodeType_Terrors:		followset = {T_XXX}
token		kNoisyIrNodeType_Tfalse:		followset = {T_XXX}
token		kNoisyIrNodeType_Tfixed:		followset = {T_XXX}
token		kNoisyIrNodeType_Tge:			followset = {T_XXX}
token		kNoisyIrNodeType_Tgets:			followset = {T_XXX}
token		kNoisyIrNodeType_Tgoes:			followset = {T_XXX}
token		kNoisyIrNodeType_Tgt:			followset = {T_XXX}
token		kNoisyIrNodeType_Thd:			followset = {T_XXX}
token		kNoisyIrNodeType_Tidentifier:		followset = {T_XXX}
token		kNoisyIrNodeType_Tinc:			followset = {T_XXX}
token		kNoisyIrNodeType_Tint:			followset = {T_XXX}
token		kNoisyIrNodeType_TintConst:		followset = {T_XXX}
token		kNoisyIrNodeType_Titer:			followset = {T_XXX}
token		kNoisyIrNodeType_Tlatency:		followset = {T_XXX}
token		kNoisyIrNodeType_TleftBrac:		followset = {T_XXX}
token		kNoisyIrNodeType_TleftBrace:		followset = {T_XXX}
token		kNoisyIrNodeType_Tle:			followset = {T_XXX}
token		kNoisyIrNodeType_Tlen:			followset = {T_XXX}
token		kNoisyIrNodeType_Tlist:			followset = {T_XXX}
token		kNoisyIrNodeType_TleftParen:		followset = {T_XXX}
token		kNoisyIrNodeType_TleftShift:		followset = {T_XXX}
token		kNoisyIrNodeType_TleftShiftAs:		followset = {T_XXX}
token		kNoisyIrNodeType_Tlt:			followset = {T_XXX}
token		kNoisyIrNodeType_Tmatch:		followset = {T_XXX}
token		kNoisyIrNodeType_TmatchSeq:		followset = {T_XXX}
token		kNoisyIrNodeType_Tminus:		followset = {T_XXX}
token		kNoisyIrNodeType_TmodAs:		followset = {T_XXX}
token		kNoisyIrNodeType_TmulAs:		followset = {T_XXX}
token		kNoisyIrNodeType_Tname2chan:		followset = {T_XXX}
token		kNoisyIrNodeType_Tnamegen:		followset = {T_XXX}
token		kNoisyIrNodeType_Tneq:			followset = {T_XXX}
token		kNoisyIrNodeType_Tnil:			followset = {T_XXX}
token		kNoisyIrNodeType_Tnybble:		followset = {T_XXX}
token		kNoisyIrNodeType_Tof:			followset = {T_XXX}
token		kNoisyIrNodeType_Tor:			followset = {T_XXX}
token		kNoisyIrNodeType_TorAs:			followset = {T_XXX}
token		kNoisyIrNodeType_Tpercent:		followset = {T_XXX}
token		kNoisyIrNodeType_Tplus:			followset = {T_XXX}
token		kNoisyIrNodeType_Tprogtype:		followset = {T_XXX}
token		kNoisyIrNodeType_TprogtypeEqual:	followset = {T_XXX}
token		kNoisyIrNodeType_TrightBrac:		followset = {T_XXX}
token		kNoisyIrNodeType_TrightBrace:		followset = {T_XXX}
token		kNoisyIrNodeType_Treal:			followset = {T_XXX}
token		kNoisyIrNodeType_TrealConst:		followset = {T_XXX}
token		kNoisyIrNodeType_TrightParen:		followset = {T_XXX}
token		kNoisyIrNodeType_TrightShift:		followset = {T_XXX}
token		kNoisyIrNodeType_TrightShiftAs:		followset = {T_XXX}
token		kNoisyIrNodeType_Tsemicolon:		followset = {T_XXX}
token		kNoisyIrNodeType_Tset:			followset = {T_XXX}
token		kNoisyIrNodeType_TsingleQuote:		followset = {T_XXX}
token		kNoisyIrNodeType_TstringConst:		followset = {T_XXX}
token		kNoisyIrNodeType_Tstring:		followset = {T_XXX}
token		kNoisyIrNodeType_Tstroke:		followset = {T_XXX}
token		kNoisyIrNodeType_TsubAs:		followset = {T_XXX}
token		kNoisyIrNodeType_Ttau:			followset = {T_XXX}
token		kNoisyIrNodeType_Ttilde:		followset = {T_XXX}
token		kNoisyIrNodeType_Ttl:			followset = {T_XXX}
token		kNoisyIrNodeType_Ttrue:			followset = {T_XXX}
token		kNoisyIrNodeType_Ttype:			followset = {T_XXX}
token		kNoisyIrNodeType_Tvar2name:		followset = {T_XXX}
token		kNoisyIrNodeType_TxorAs:		followset = {T_XXX}



--//
--//	Temporary to put where we'd otherwise have an empty set. See notes in wirth/EXAMPLES/bug.0.ffi
--//
token		T_XXX:					followset = {T_XXX}
